<?xml version="1.0" encoding="utf-8"?>
<TestRecord xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Results>
    <UnitTestResult>
      <TestDate>2013-10-03T11:46:45</TestDate>
      <Status />
      <Passed>32</Passed>
      <Errors>0</Errors>
      <Failures>0</Failures>
      <Inconclusive>0</Inconclusive>
      <NotRunnable>0</NotRunnable>
      <Skipped>0</Skipped>
      <Ignored>0</Ignored>
      <Time />
      <Message>Test successful

Execution time: 0.87ms</Message>
    </UnitTestResult>
  </Results>
  <Tests>
    <TestRecord Name="DomPropSimplify">
      <Results>
        <UnitTestResult>
          <TestDate>2013-10-03T11:46:45</TestDate>
          <Status />
          <Passed>32</Passed>
          <Errors>0</Errors>
          <Failures>0</Failures>
          <Inconclusive>0</Inconclusive>
          <NotRunnable>0</NotRunnable>
          <Skipped>0</Skipped>
          <Ignored>0</Ignored>
          <Time />
          <Message>Test successful

Execution time: 0.86ms</Message>
        </UnitTestResult>
      </Results>
      <Tests>
        <TestRecord Name="Tests">
          <Results>
            <UnitTestResult>
              <TestDate>2013-10-03T11:46:45</TestDate>
              <Status />
              <Passed>32</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0.86ms</Message>
            </UnitTestResult>
          </Results>
          <Tests>
            <TestRecord Name="TestParsing">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-10-03T10:13:23</TestDate>
                  <Status />
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0.07ms</Message>
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-10-03T10:18:38</TestDate>
                  <Status />
                  <Passed>2</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0.19ms</Message>
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-10-03T11:27:27</TestDate>
                  <Status>Failure</Status>
                  <Passed>0</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Connection refused</Message>
                  <StackTrace>  at Mono.Remoting.Channels.Unix.HostConnectionPool.CreateConnection () [0x0002a] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:265 
  at Mono.Remoting.Channels.Unix.HostConnectionPool.GetConnection () [0x000bb] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:249 
  at Mono.Remoting.Channels.Unix.UnixConnectionPool.GetConnection (System.String path) [0x00049] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:104 
  at Mono.Remoting.Channels.Unix.UnixClientTransportSink.ProcessMessage (IMessage msg, ITransportHeaders requestHeaders, System.IO.Stream requestStream, ITransportHeaders&amp; responseHeaders, System.IO.Stream&amp; responseStream) [0x00025] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixClientTransportSink.cs:171 
  at System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage (IMessage msg) [0x0006c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Runtime.Remoting/System.Runtime.Remoting.Channels/BinaryClientFormatterSink.cs:157 </StackTrace>
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-10-03T11:46:45</TestDate>
                  <Status />
                  <Passed>24</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0.65ms</Message>
                </UnitTestResult>
              </Results>
              <Tests>
                <TestRecord Name="TestCase">
                  <Results>
                    <UnitTestResult>
                      <TestDate>2013-10-03T10:13:23</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.06ms</Message>
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-03T10:18:38</TestDate>
                      <Status />
                      <Passed>2</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.18ms</Message>
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-03T10:23:42</TestDate>
                      <Status />
                      <Passed>25</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.27ms</Message>
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-03T10:32:47</TestDate>
                      <Status />
                      <Passed>21</Passed>
                      <Errors>4</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>One or more child tests had errors</Message>
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-03T10:34:38</TestDate>
                      <Status />
                      <Passed>2</Passed>
                      <Errors>23</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>One or more child tests had errors</Message>
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-03T10:35:19</TestDate>
                      <Status />
                      <Passed>2</Passed>
                      <Errors>23</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>One or more child tests had errors</Message>
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-03T10:36:20</TestDate>
                      <Status />
                      <Passed>13</Passed>
                      <Errors>12</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>One or more child tests had errors</Message>
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-03T10:37:20</TestDate>
                      <Status />
                      <Passed>21</Passed>
                      <Errors>4</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>One or more child tests had errors</Message>
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-03T10:40:09</TestDate>
                      <Status />
                      <Passed>21</Passed>
                      <Errors>4</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>One or more child tests had errors</Message>
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-03T10:41:01</TestDate>
                      <Status />
                      <Passed>25</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.29ms</Message>
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-03T10:41:41</TestDate>
                      <Status />
                      <Passed>12</Passed>
                      <Errors>13</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>One or more child tests had errors</Message>
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-03T10:43:12</TestDate>
                      <Status />
                      <Passed>22</Passed>
                      <Errors>3</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>One or more child tests had errors</Message>
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-03T10:44:49</TestDate>
                      <Status />
                      <Passed>13</Passed>
                      <Errors>12</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>One or more child tests had errors</Message>
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-03T10:45:16</TestDate>
                      <Status />
                      <Passed>25</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.33ms</Message>
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-03T10:47:17</TestDate>
                      <Status>Failure</Status>
                      <Passed>0</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Object reference not set to an instance of an object</Message>
                      <StackTrace>  at MonoDevelop.NUnit.UnitTestResult.CreateFailure (System.String message, System.Exception ex) [0x00017] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-4.0.12-branch/593d7acb/source/monodevelop/main/src/addins/NUnit/Services/UnitTestResult.cs:67 
  at MonoDevelop.NUnit.NUnitAssemblyTestSuite.RunUnitTest (MonoDevelop.NUnit.UnitTest test, System.String suiteName, System.String pathName, System.String testName, MonoDevelop.NUnit.TestContext testContext) [0x00240] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-4.0.12-branch/593d7acb/source/monodevelop/main/src/addins/NUnit/Services/NUnitAssemblyTestSuite.cs:440 
  at MonoDevelop.NUnit.NUnitTestSuite.OnRun (MonoDevelop.NUnit.TestContext testContext) [0x00016] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-4.0.12-branch/593d7acb/source/monodevelop/main/src/addins/NUnit/Services/NUnitTestSuite.cs:65 
  at MonoDevelop.NUnit.UnitTest.Run (MonoDevelop.NUnit.TestContext testContext) [0x00020] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-4.0.12-branch/593d7acb/source/monodevelop/main/src/addins/NUnit/Services/UnitTest.cs:373 </StackTrace>
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-03T10:48:56</TestDate>
                      <Status>Failure</Status>
                      <Passed>0</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Connection refused</Message>
                      <StackTrace>  at Mono.Remoting.Channels.Unix.HostConnectionPool.CreateConnection () [0x0002a] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:265 
  at Mono.Remoting.Channels.Unix.HostConnectionPool.GetConnection () [0x000bb] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:249 
  at Mono.Remoting.Channels.Unix.UnixConnectionPool.GetConnection (System.String path) [0x00049] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:104 
  at Mono.Remoting.Channels.Unix.UnixClientTransportSink.ProcessMessage (IMessage msg, ITransportHeaders requestHeaders, System.IO.Stream requestStream, ITransportHeaders&amp; responseHeaders, System.IO.Stream&amp; responseStream) [0x00025] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixClientTransportSink.cs:171 
  at System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage (IMessage msg) [0x0006c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Runtime.Remoting/System.Runtime.Remoting.Channels/BinaryClientFormatterSink.cs:157 </StackTrace>
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-03T11:46:45</TestDate>
                      <Status />
                      <Passed>24</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.65ms</Message>
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-03T11:49:03</TestDate>
                      <Status />
                      <Passed>24</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.74ms</Message>
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-03T11:59:48</TestDate>
                      <Status>Failure</Status>
                      <Passed>0</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Connection refused</Message>
                      <StackTrace>  at Mono.Remoting.Channels.Unix.HostConnectionPool.CreateConnection () [0x0002a] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:265 
  at Mono.Remoting.Channels.Unix.HostConnectionPool.GetConnection () [0x000bb] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:249 
  at Mono.Remoting.Channels.Unix.UnixConnectionPool.GetConnection (System.String path) [0x00049] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:104 
  at Mono.Remoting.Channels.Unix.UnixClientTransportSink.ProcessMessage (IMessage msg, ITransportHeaders requestHeaders, System.IO.Stream requestStream, ITransportHeaders&amp; responseHeaders, System.IO.Stream&amp; responseStream) [0x00025] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixClientTransportSink.cs:171 
  at System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage (IMessage msg) [0x0006c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Runtime.Remoting/System.Runtime.Remoting.Channels/BinaryClientFormatterSink.cs:157 </StackTrace>
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-03T12:02:43</TestDate>
                      <Status />
                      <Passed>24</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.33ms</Message>
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-03T12:06:02</TestDate>
                      <Status />
                      <Passed>24</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.34ms</Message>
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-03T12:08:59</TestDate>
                      <Status />
                      <Passed>24</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.41ms</Message>
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-03T12:58:04</TestDate>
                      <Status />
                      <Passed>24</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.37ms</Message>
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-03T12:58:14</TestDate>
                      <Status>Failure</Status>
                      <Passed>0</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Object reference not set to an instance of an object</Message>
                      <StackTrace>  at MonoDevelop.NUnit.UnitTestResult.CreateFailure (System.String message, System.Exception ex) [0x00017] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-4.0.12-branch/593d7acb/source/monodevelop/main/src/addins/NUnit/Services/UnitTestResult.cs:67 
  at MonoDevelop.NUnit.NUnitAssemblyTestSuite.RunUnitTest (MonoDevelop.NUnit.UnitTest test, System.String suiteName, System.String pathName, System.String testName, MonoDevelop.NUnit.TestContext testContext) [0x00240] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-4.0.12-branch/593d7acb/source/monodevelop/main/src/addins/NUnit/Services/NUnitAssemblyTestSuite.cs:440 
  at MonoDevelop.NUnit.NUnitTestSuite.OnRun (MonoDevelop.NUnit.TestContext testContext) [0x00016] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-4.0.12-branch/593d7acb/source/monodevelop/main/src/addins/NUnit/Services/NUnitTestSuite.cs:65 
  at MonoDevelop.NUnit.UnitTest.Run (MonoDevelop.NUnit.TestContext testContext) [0x00020] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-4.0.12-branch/593d7acb/source/monodevelop/main/src/addins/NUnit/Services/UnitTest.cs:373 </StackTrace>
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-03T12:58:57</TestDate>
                      <Status>Failure</Status>
                      <Passed>0</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Connection refused</Message>
                      <StackTrace>  at Mono.Remoting.Channels.Unix.HostConnectionPool.CreateConnection () [0x0002a] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:265 
  at Mono.Remoting.Channels.Unix.HostConnectionPool.GetConnection () [0x000bb] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:249 
  at Mono.Remoting.Channels.Unix.UnixConnectionPool.GetConnection (System.String path) [0x00049] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:104 
  at Mono.Remoting.Channels.Unix.UnixClientTransportSink.ProcessMessage (IMessage msg, ITransportHeaders requestHeaders, System.IO.Stream requestStream, ITransportHeaders&amp; responseHeaders, System.IO.Stream&amp; responseStream) [0x00025] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixClientTransportSink.cs:171 
  at System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage (IMessage msg) [0x0006c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Runtime.Remoting/System.Runtime.Remoting.Channels/BinaryClientFormatterSink.cs:157 </StackTrace>
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-03T12:59:20</TestDate>
                      <Status>Failure</Status>
                      <Passed>0</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Connection refused</Message>
                      <StackTrace>  at Mono.Remoting.Channels.Unix.HostConnectionPool.CreateConnection () [0x0002a] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:265 
  at Mono.Remoting.Channels.Unix.HostConnectionPool.GetConnection () [0x000bb] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:249 
  at Mono.Remoting.Channels.Unix.UnixConnectionPool.GetConnection (System.String path) [0x00049] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:104 
  at Mono.Remoting.Channels.Unix.UnixClientTransportSink.ProcessMessage (IMessage msg, ITransportHeaders requestHeaders, System.IO.Stream requestStream, ITransportHeaders&amp; responseHeaders, System.IO.Stream&amp; responseStream) [0x00025] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixClientTransportSink.cs:171 
  at System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage (IMessage msg) [0x0006c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Runtime.Remoting/System.Runtime.Remoting.Channels/BinaryClientFormatterSink.cs:157 </StackTrace>
                    </UnitTestResult>
                  </Results>
                  <Tests>
                    <TestRecord Name="TestCase(&quot;!(anesthesia) &amp; !(gtr)&quot;)">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:13:23</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.05ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:18:38</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:23:42</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:32:47</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.01ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:34:38</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.ParsedNot.Transform () [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:61 
  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__48 (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__47 (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:35:19</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>DomPropSimplify.ParserException : Expected whitespace or comment or [a-zA-Z] at line 1 col 2.</Message>
                          <StackTrace>  at DomPropSimplify.FormulaParser.DoThrow (Int32 index, System.String format, System.Object[] args) [0x0004a] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:440 
  at DomPropSimplify.FormulaParser.DoParseFile (System.String input, System.String file) [0x00086] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:352 
  at DomPropSimplify.FormulaParser.Parse (System.String input) [0x00004] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:61 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:37 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:36:20</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.01ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:37:20</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.01ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:40:09</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.01ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:01</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:41</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:43:12</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!anesthesia&amp;!gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:44:49</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.03ms</Message>
                          <ConsoleOutput>!(anesthesia) &amp; !(gtr)
((!anesthesia&amp;!gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:45:16</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>!(anesthesia) &amp; !(gtr)
((!anesthesia&amp;!gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:47:17</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>!(anesthesia) &amp; !(gtr)
((!anesthesia&amp;!gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:48:56</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!anesthesia&amp;!gtr))
((!anesthesia&amp;!gtr))
Simplified: False
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:46:45</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!anesthesia&amp;!gtr))
Simplified (2): False
Simplified (2): False
((!anesthesia&amp;!gtr))
((!anesthesia&amp;!gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:49:03</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (2): ((!anesthesia&amp;!gtr))
Simplified     (2): ((!anesthesia&amp;!gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:00:48</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.22ms</Message>
                          <ConsoleOutput>Not simplified (2): ((!anesthesia&amp;!gtr))
Simplified     (1): ((!fbr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:02:43</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (2): ((!anesthesia&amp;!gtr))
Simplified     (2): ((!anesthesia&amp;!gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:06:02</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (2): ((!anesthesia&amp;!gtr))
Simplified     (2): ((!anesthesia&amp;!gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:08:59</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (2): ((!anesthesia&amp;!gtr))
Simplified     (2): ((!anesthesia&amp;!gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:58:04</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (2): ((!anesthesia&amp;!gtr))
Simplified     (2): ((!anesthesia&amp;!gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T13:02:39</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.72ms</Message>
                          <ConsoleOutput>(mr) =&gt; (!ct)
(ct) =&gt; (!mr)
(gtr) =&gt; (!fbr)
(fbr) =&gt; (!gtr)
(anesthesia) =&gt; (move_by_patlog)
(anesthesia) =&gt; (!ct)
(anesthesia) =&gt; (gtr)
(anesthesia) =&gt; (!fbr)
(anesthesia) =&gt; (!moulding)
(anesthesia) =&gt; (!adaptive_imaging)
(anesthesia) =&gt; (!outpatient)
(moulding) =&gt; (ct)
(moulding) =&gt; (!mr)
(moulding) =&gt; (!gtr)
(moulding) =&gt; (!fbr)
(moulding) =&gt; (!anesthesia)
(moulding) =&gt; (!adaptive_imaging)
(moulding) =&gt; (!outpatient)
(adaptive_imaging) =&gt; (!gtr)
(adaptive_imaging) =&gt; (!fbr)
(adaptive_imaging) =&gt; (!anesthesia)
(adaptive_imaging) =&gt; (!moulding)
(adaptive_imaging) =&gt; (!outpatient)
(outpatient) =&gt; (!move_by_patlog)
(outpatient) =&gt; (!gtr)
(outpatient) =&gt; (!fbr)
(outpatient) =&gt; (!anesthesia)
(outpatient) =&gt; (!moulding)
(outpatient) =&gt; (!adaptive_imaging)
(treatment) =&gt; (!moulding)
(treatment) =&gt; (!anesthesia)
(treatment) =&gt; (!adaptive_imaging)
(treatment) =&gt; (!outpatient)
(!ct) =&gt; (!mr)
(!mr) =&gt; (!ct)
(!fbr) =&gt; (!gtr)
(!gtr) =&gt; (!fbr)
(move_by_patlog) =&gt; (!anesthesia)
(!ct) =&gt; (!anesthesia)
(gtr) =&gt; (!anesthesia)
(!fbr) =&gt; (!anesthesia)
(!moulding) =&gt; (!anesthesia)
(!adaptive_imaging) =&gt; (!anesthesia)
(!outpatient) =&gt; (!anesthesia)
(ct) =&gt; (!moulding)
(!mr) =&gt; (!moulding)
(!gtr) =&gt; (!moulding)
(!fbr) =&gt; (!moulding)
(!anesthesia) =&gt; (!moulding)
(!adaptive_imaging) =&gt; (!moulding)
(!outpatient) =&gt; (!moulding)
(!gtr) =&gt; (!adaptive_imaging)
(!fbr) =&gt; (!adaptive_imaging)
(!anesthesia) =&gt; (!adaptive_imaging)
(!moulding) =&gt; (!adaptive_imaging)
(!outpatient) =&gt; (!adaptive_imaging)
(!move_by_patlog) =&gt; (!outpatient)
(!gtr) =&gt; (!outpatient)
(!fbr) =&gt; (!outpatient)
(!anesthesia) =&gt; (!outpatient)
(!moulding) =&gt; (!outpatient)
(!adaptive_imaging) =&gt; (!outpatient)
(!moulding) =&gt; (!treatment)
(!anesthesia) =&gt; (!treatment)
(!adaptive_imaging) =&gt; (!treatment)
(!outpatient) =&gt; (!treatment)
Not simplified (2): ((!anesthesia&amp;!gtr))
Simplified     (1): ((!fbr))
Simplified hr  (2): ((!anesthesia&amp;!gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                    <TestRecord Name="TestCase(&quot;(!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient) &amp; !(move_by_patlog) &amp; !(ct) &amp; !(mr) &amp; !(gtr) &amp; fbr) | (!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient) &amp; !(move_by_patlog) &amp; !(ct) &amp; !(mr) &amp; gtr &amp; !(fbr)) | (!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient) &amp; move_by_patlog &amp; !(ct) &amp; !(gtr) &amp; fbr) | (!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient) &amp; move_by_patlog &amp; !(ct) &amp; gtr &amp; !(fbr)) | (!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient) &amp; move_by_patlog &amp; ct &amp; !(mr) &amp; !(gtr) &amp; fbr) | (!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient) &amp; move_by_patlog &amp; ct &amp; !(mr) &amp; gtr &amp; !(fbr)) | (!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; outpatient &amp; !(move_by_patlog) &amp; !(ct) &amp; mr &amp; !(gtr) &amp; !(fbr)) | (!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; outpatient &amp; !(move_by_patlog) &amp; ct &amp; !(mr) &amp; !(gtr) &amp; !(fbr)) | (!(anesthesia) &amp; !(adaptive_imaging) &amp; moulding &amp; !(outpatient) &amp; ct &amp; !(mr) &amp; !(gtr) &amp; !(fbr)) | (!(anesthesia) &amp; adaptive_imaging &amp; !(moulding) &amp; !(outpatient) &amp; !(ct) &amp; mr &amp; !(gtr) &amp; !(fbr)) | (!(anesthesia) &amp; adaptive_imaging &amp; !(moulding) &amp; !(outpatient) &amp; ct &amp; !(mr) &amp; !(gtr) &amp; !(fbr)) | (anesthesia &amp; !(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient) &amp; move_by_patlog &amp; !(ct) &amp; gtr &amp; !(fbr))&quot;)">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:18:38</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.08ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:18:47</TestDate>
                          <Status>Failure</Status>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Object reference not set to an instance of an object</Message>
                          <StackTrace>  at MonoDevelop.NUnit.UnitTestResult.CreateFailure (System.String message, System.Exception ex) [0x00017] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-4.0.12-branch/593d7acb/source/monodevelop/main/src/addins/NUnit/Services/UnitTestResult.cs:67 
  at MonoDevelop.NUnit.NUnitAssemblyTestSuite.RunUnitTest (MonoDevelop.NUnit.UnitTest test, System.String suiteName, System.String pathName, System.String testName, MonoDevelop.NUnit.TestContext testContext) [0x00240] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-4.0.12-branch/593d7acb/source/monodevelop/main/src/addins/NUnit/Services/NUnitAssemblyTestSuite.cs:440 
  at MonoDevelop.NUnit.NUnitTestCase.OnRun (MonoDevelop.NUnit.TestContext testContext) [0x0001b] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-4.0.12-branch/593d7acb/source/monodevelop/main/src/addins/NUnit/Services/NUnitTestCase.cs:55 
  at MonoDevelop.NUnit.UnitTest.Run (MonoDevelop.NUnit.TestContext testContext) [0x00020] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-4.0.12-branch/593d7acb/source/monodevelop/main/src/addins/NUnit/Services/UnitTest.cs:373 </StackTrace>
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:23:42</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.02ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:32:47</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.02ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:34:38</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.ParsedNot.Transform () [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:61 
  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__48 (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__47 (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__48 (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__47 (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:35:19</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>DomPropSimplify.ParserException : Expected whitespace or comment or [a-zA-Z] at line 1 col 3.</Message>
                          <StackTrace>  at DomPropSimplify.FormulaParser.DoThrow (Int32 index, System.String format, System.Object[] args) [0x0004a] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:440 
  at DomPropSimplify.FormulaParser.DoParseFile (System.String input, System.String file) [0x00086] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:352 
  at DomPropSimplify.FormulaParser.Parse (System.String input) [0x00004] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:61 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:37 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:36:20</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__4C (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__4B (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:37:20</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.01ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:40:09</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.01ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:01</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.02ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:41</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.03ms</Message>
                          <ConsoleOutput>((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;!ct&amp;!mr&amp;!gtr&amp;fbr)|(!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;!ct&amp;!mr&amp;gtr&amp;!fbr)|(!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog&amp;!ct&amp;!gtr&amp;fbr)|(!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog&amp;!ct&amp;gtr&amp;!fbr)|(!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog&amp;ct&amp;!mr&amp;!gtr&amp;fbr)|(!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog&amp;ct&amp;!mr&amp;gtr&amp;!fbr)|(!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;outpatient&amp;!move_by_patlog&amp;!ct&amp;mr&amp;!gtr&amp;!fbr)|(!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;outpatient&amp;!move_by_patlog&amp;ct&amp;!mr&amp;!gtr&amp;!fbr)|(!anesthesia&amp;!adaptive_imaging&amp;moulding&amp;!outpatient&amp;ct&amp;!mr&amp;!gtr&amp;!fbr)|(!anesthesia&amp;adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!ct&amp;mr&amp;!gtr&amp;!fbr)|(!anesthesia&amp;adaptive_imaging&amp;!moulding&amp;!outpatient&amp;ct&amp;!mr&amp;!gtr&amp;!fbr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:43:12</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.02ms</Message>
                          <ConsoleOutput>((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;!ct&amp;!mr&amp;!gtr&amp;fbr)|(!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;!ct&amp;!mr&amp;gtr&amp;!fbr)|(!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog&amp;!ct&amp;!gtr&amp;fbr)|(!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog&amp;!ct&amp;gtr&amp;!fbr)|(!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog&amp;ct&amp;!mr&amp;!gtr&amp;fbr)|(!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog&amp;ct&amp;!mr&amp;gtr&amp;!fbr)|(!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;outpatient&amp;!move_by_patlog&amp;!ct&amp;mr&amp;!gtr&amp;!fbr)|(!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;outpatient&amp;!move_by_patlog&amp;ct&amp;!mr&amp;!gtr&amp;!fbr)|(!anesthesia&amp;!adaptive_imaging&amp;moulding&amp;!outpatient&amp;ct&amp;!mr&amp;!gtr&amp;!fbr)|(!anesthesia&amp;adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!ct&amp;mr&amp;!gtr&amp;!fbr)|(!anesthesia&amp;adaptive_imaging&amp;!moulding&amp;!outpatient&amp;ct&amp;!mr&amp;!gtr&amp;!fbr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:44:49</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00027] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:42 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput>(!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient) &amp; !(move_by_patlog) &amp; !(ct) &amp; !(mr) &amp; !(gtr) &amp; fbr) | (!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient) &amp; !(move_by_patlog) &amp; !(ct) &amp; !(mr) &amp; gtr &amp; !(fbr)) | (!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient) &amp; move_by_patlog &amp; !(ct) &amp; !(gtr) &amp; fbr) | (!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient) &amp; move_by_patlog &amp; !(ct) &amp; gtr &amp; !(fbr)) | (!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient) &amp; move_by_patlog &amp; ct &amp; !(mr) &amp; !(gtr) &amp; fbr) | (!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient) &amp; move_by_patlog &amp; ct &amp; !(mr) &amp; gtr &amp; !(fbr)) | (!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; outpatient &amp; !(move_by_patlog) &amp; !(ct) &amp; mr &amp; !(gtr) &amp; !(fbr)) | (!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; outpatient &amp; !(move_by_patlog) &amp; ct &amp; !(mr) &amp; !(gtr) &amp; !(fbr)) | (!(anesthesia) &amp; !(adaptive_imaging) &amp; moulding &amp; !(outpatient) &amp; ct &amp; !(mr) &amp; !(gtr) &amp; !(fbr)) | (!(anesthesia) &amp; adaptive_imaging &amp; !(moulding) &amp; !(outpatient) &amp; !(ct) &amp; mr &amp; !(gtr) &amp; !(fbr)) | (!(anesthesia) &amp; adaptive_imaging &amp; !(moulding) &amp; !(outpatient) &amp; ct &amp; !(mr) &amp; !(gtr) &amp; !(fbr)) | (anesthesia &amp; !(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient) &amp; move_by_patlog &amp; !(ct) &amp; gtr &amp; !(fbr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:45:16</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.02ms</Message>
                          <ConsoleOutput>(!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient) &amp; !(move_by_patlog) &amp; !(ct) &amp; !(mr) &amp; !(gtr) &amp; fbr) | (!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient) &amp; !(move_by_patlog) &amp; !(ct) &amp; !(mr) &amp; gtr &amp; !(fbr)) | (!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient) &amp; move_by_patlog &amp; !(ct) &amp; !(gtr) &amp; fbr) | (!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient) &amp; move_by_patlog &amp; !(ct) &amp; gtr &amp; !(fbr)) | (!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient) &amp; move_by_patlog &amp; ct &amp; !(mr) &amp; !(gtr) &amp; fbr) | (!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient) &amp; move_by_patlog &amp; ct &amp; !(mr) &amp; gtr &amp; !(fbr)) | (!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; outpatient &amp; !(move_by_patlog) &amp; !(ct) &amp; mr &amp; !(gtr) &amp; !(fbr)) | (!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; outpatient &amp; !(move_by_patlog) &amp; ct &amp; !(mr) &amp; !(gtr) &amp; !(fbr)) | (!(anesthesia) &amp; !(adaptive_imaging) &amp; moulding &amp; !(outpatient) &amp; ct &amp; !(mr) &amp; !(gtr) &amp; !(fbr)) | (!(anesthesia) &amp; adaptive_imaging &amp; !(moulding) &amp; !(outpatient) &amp; !(ct) &amp; mr &amp; !(gtr) &amp; !(fbr)) | (!(anesthesia) &amp; adaptive_imaging &amp; !(moulding) &amp; !(outpatient) &amp; ct &amp; !(mr) &amp; !(gtr) &amp; !(fbr)) | (anesthesia &amp; !(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient) &amp; move_by_patlog &amp; !(ct) &amp; gtr &amp; !(fbr))
((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;!ct&amp;!mr&amp;!gtr&amp;fbr)|(!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;!ct&amp;!mr&amp;gtr&amp;!fbr)|(!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog&amp;!ct&amp;!gtr&amp;fbr)|(!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog&amp;!ct&amp;gtr&amp;!fbr)|(!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog&amp;ct&amp;!mr&amp;!gtr&amp;fbr)|(!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog&amp;ct&amp;!mr&amp;gtr&amp;!fbr)|(!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;outpatient&amp;!move_by_patlog&amp;!ct&amp;mr&amp;!gtr&amp;!fbr)|(!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;outpatient&amp;!move_by_patlog&amp;ct&amp;!mr&amp;!gtr&amp;!fbr)|(!anesthesia&amp;!adaptive_imaging&amp;moulding&amp;!outpatient&amp;ct&amp;!mr&amp;!gtr&amp;!fbr)|(!anesthesia&amp;adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!ct&amp;mr&amp;!gtr&amp;!fbr)|(!anesthesia&amp;adaptive_imaging&amp;!moulding&amp;!outpatient&amp;ct&amp;!mr&amp;!gtr&amp;!fbr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:49:14</TestDate>
                          <Status>Failure</Status>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Connection refused</Message>
                          <StackTrace>  at Mono.Remoting.Channels.Unix.HostConnectionPool.CreateConnection () [0x0002a] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:265 
  at Mono.Remoting.Channels.Unix.HostConnectionPool.GetConnection () [0x000bb] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:249 
  at Mono.Remoting.Channels.Unix.UnixConnectionPool.GetConnection (System.String path) [0x00049] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:104 
  at Mono.Remoting.Channels.Unix.UnixClientTransportSink.ProcessMessage (IMessage msg, ITransportHeaders requestHeaders, System.IO.Stream requestStream, ITransportHeaders&amp; responseHeaders, System.IO.Stream&amp; responseStream) [0x00025] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixClientTransportSink.cs:171 
  at System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage (IMessage msg) [0x0006c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Runtime.Remoting/System.Runtime.Remoting.Channels/BinaryClientFormatterSink.cs:157 </StackTrace>
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:50:40</TestDate>
                          <Status>Failure</Status>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Connection refused</Message>
                          <StackTrace>  at Mono.Remoting.Channels.Unix.HostConnectionPool.CreateConnection () [0x0002a] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:265 
  at Mono.Remoting.Channels.Unix.HostConnectionPool.GetConnection () [0x000bb] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:249 
  at Mono.Remoting.Channels.Unix.UnixConnectionPool.GetConnection (System.String path) [0x00049] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:104 
  at Mono.Remoting.Channels.Unix.UnixClientTransportSink.ProcessMessage (IMessage msg, ITransportHeaders requestHeaders, System.IO.Stream requestStream, ITransportHeaders&amp; responseHeaders, System.IO.Stream&amp; responseStream) [0x00025] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixClientTransportSink.cs:171 
  at System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage (IMessage msg) [0x0006c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Runtime.Remoting/System.Runtime.Remoting.Channels/BinaryClientFormatterSink.cs:157 </StackTrace>
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:08:03</TestDate>
                          <Status>Failure</Status>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Object reference not set to an instance of an object</Message>
                          <StackTrace>  at MonoDevelop.NUnit.UnitTestResult.CreateFailure (System.String message, System.Exception ex) [0x00017] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-4.0.12-branch/593d7acb/source/monodevelop/main/src/addins/NUnit/Services/UnitTestResult.cs:67 
  at MonoDevelop.NUnit.NUnitAssemblyTestSuite.RunUnitTest (MonoDevelop.NUnit.UnitTest test, System.String suiteName, System.String pathName, System.String testName, MonoDevelop.NUnit.TestContext testContext) [0x00240] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-4.0.12-branch/593d7acb/source/monodevelop/main/src/addins/NUnit/Services/NUnitAssemblyTestSuite.cs:440 
  at MonoDevelop.NUnit.NUnitTestCase.OnRun (MonoDevelop.NUnit.TestContext testContext) [0x0001b] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-4.0.12-branch/593d7acb/source/monodevelop/main/src/addins/NUnit/Services/NUnitTestCase.cs:55 
  at MonoDevelop.NUnit.UnitTest.Run (MonoDevelop.NUnit.TestContext testContext) [0x00020] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-4.0.12-branch/593d7acb/source/monodevelop/main/src/addins/NUnit/Services/UnitTest.cs:373 </StackTrace>
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                    <TestRecord Name="TestCase(&quot;(!(anesthesia) &amp; gtr) | (anesthesia)&quot;)">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:23:42</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.05ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:32:47</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at (wrapper castclass) object:__castclass_with_cache (object,intptr,intptr)
  at System.Linq.Enumerable+&lt;CreateCastIterator&gt;c__Iterator15`1[DomPropSimplify.ParsedAnd].MoveNext () [0x00048] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:578 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:34:38</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.ParsedNot.Transform () [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:61 
  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__48 (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__47 (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__48 (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__47 (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:35:19</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>DomPropSimplify.ParserException : Expected whitespace or comment or [a-zA-Z] at line 1 col 3.</Message>
                          <StackTrace>  at DomPropSimplify.FormulaParser.DoThrow (Int32 index, System.String format, System.Object[] args) [0x0004a] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:440 
  at DomPropSimplify.FormulaParser.DoParseFile (System.String input, System.String file) [0x00086] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:352 
  at DomPropSimplify.FormulaParser.Parse (System.String input) [0x00004] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:61 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:37 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:36:20</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__4C (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__4B (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:37:20</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at (wrapper castclass) object:__castclass_with_cache (object,intptr,intptr)
  at System.Linq.Enumerable+&lt;CreateCastIterator&gt;c__Iterator15`1[DomPropSimplify.ParsedAnd].MoveNext () [0x00048] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:578 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:40:09</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at (wrapper castclass) object:__castclass_with_cache (object,intptr,intptr)
  at System.Linq.Enumerable+&lt;CreateCastIterator&gt;c__Iterator15`1[DomPropSimplify.ParsedAnd].MoveNext () [0x00048] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:578 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:26 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:01</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.06ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:41</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.08ms</Message>
                          <ConsoleOutput>((!anesthesia&amp;gtr)|(anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:43:12</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.08ms</Message>
                          <ConsoleOutput>((!anesthesia&amp;gtr)|(anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:44:49</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00027] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:42 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput>(!(anesthesia) &amp; gtr) | (anesthesia)
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:45:16</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.10ms</Message>
                          <ConsoleOutput>(!(anesthesia) &amp; gtr) | (anesthesia)
((!anesthesia&amp;gtr)|(anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:47:17</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.10ms</Message>
                          <ConsoleOutput>(!(anesthesia) &amp; gtr) | (anesthesia)
((!anesthesia&amp;gtr)|(anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:48:56</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.10ms</Message>
                          <ConsoleOutput>((!anesthesia&amp;gtr)|(anesthesia))
((!anesthesia&amp;gtr)|(anesthesia))
Simplified: False
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:46:45</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.05ms</Message>
                          <ConsoleOutput>((!anesthesia&amp;gtr)|(anesthesia))
Simplified (3): False
Simplified (3): False
((!anesthesia&amp;gtr)|(anesthesia))
((!anesthesia&amp;gtr)|(anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:49:03</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.09ms</Message>
                          <ConsoleOutput>Not simplified (3): ((!anesthesia&amp;gtr)|(anesthesia))
Simplified     (3): ((!anesthesia&amp;gtr)|(anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:02:43</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.09ms</Message>
                          <ConsoleOutput>Not simplified (3): ((!anesthesia&amp;gtr)|(anesthesia))
Simplified     (2): ((gtr)|(anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:06:02</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.08ms</Message>
                          <ConsoleOutput>Not simplified (3): ((!anesthesia&amp;gtr)|(anesthesia))
Simplified     (2): ((gtr)|(anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:08:59</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.09ms</Message>
                          <ConsoleOutput>Not simplified (3): ((!anesthesia&amp;gtr)|(anesthesia))
Simplified     (2): ((gtr)|(anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:58:04</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.09ms</Message>
                          <ConsoleOutput>Not simplified (3): ((!anesthesia&amp;gtr)|(anesthesia))
Simplified     (2): ((gtr)|(anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                    <TestRecord Name="TestCase(&quot;(!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient) &amp; !(move_by_patlog)) | (!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; outpatient) | (!(anesthesia) &amp; !(adaptive_imaging) &amp; moulding &amp; !(move_by_patlog)) | (!(anesthesia) &amp; adaptive_imaging &amp; !(move_by_patlog))&quot;)">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:23:42</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:32:47</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:34:38</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.ParsedNot.Transform () [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:61 
  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__48 (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__47 (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__48 (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__47 (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:35:19</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>DomPropSimplify.ParserException : Expected whitespace or comment or [a-zA-Z] at line 1 col 3.</Message>
                          <StackTrace>  at DomPropSimplify.FormulaParser.DoThrow (Int32 index, System.String format, System.Object[] args) [0x0004a] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:440 
  at DomPropSimplify.FormulaParser.DoParseFile (System.String input, System.String file) [0x00086] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:352 
  at DomPropSimplify.FormulaParser.Parse (System.String input) [0x00004] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:61 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:37 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:36:20</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__4C (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__4B (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:37:20</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:40:09</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:01</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:41</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog)|(!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;outpatient)|(!anesthesia&amp;!adaptive_imaging&amp;moulding&amp;!move_by_patlog)|(!anesthesia&amp;adaptive_imaging&amp;!move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:43:12</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog)|(!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;outpatient)|(!anesthesia&amp;!adaptive_imaging&amp;moulding&amp;!move_by_patlog)|(!anesthesia&amp;adaptive_imaging&amp;!move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:44:49</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00027] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:42 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput>(!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient) &amp; !(move_by_patlog)) | (!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; outpatient) | (!(anesthesia) &amp; !(adaptive_imaging) &amp; moulding &amp; !(move_by_patlog)) | (!(anesthesia) &amp; adaptive_imaging &amp; !(move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:45:16</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>(!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient) &amp; !(move_by_patlog)) | (!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; outpatient) | (!(anesthesia) &amp; !(adaptive_imaging) &amp; moulding &amp; !(move_by_patlog)) | (!(anesthesia) &amp; adaptive_imaging &amp; !(move_by_patlog))
((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog)|(!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;outpatient)|(!anesthesia&amp;!adaptive_imaging&amp;moulding&amp;!move_by_patlog)|(!anesthesia&amp;adaptive_imaging&amp;!move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:47:17</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.11ms</Message>
                          <ConsoleOutput>(!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient) &amp; !(move_by_patlog)) | (!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; outpatient) | (!(anesthesia) &amp; !(adaptive_imaging) &amp; moulding &amp; !(move_by_patlog)) | (!(anesthesia) &amp; adaptive_imaging &amp; !(move_by_patlog))
((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog)|(outpatient)|(moulding&amp;!move_by_patlog)|(adaptive_imaging&amp;!move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:48:56</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.11ms</Message>
                          <ConsoleOutput>((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog)|(!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;outpatient)|(!anesthesia&amp;!adaptive_imaging&amp;moulding&amp;!move_by_patlog)|(!anesthesia&amp;adaptive_imaging&amp;!move_by_patlog))
((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog)|(outpatient)|(moulding&amp;!move_by_patlog)|(adaptive_imaging&amp;!move_by_patlog))
Simplified: True
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:46:45</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.12ms</Message>
                          <ConsoleOutput>((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog)|(!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;outpatient)|(!anesthesia&amp;!adaptive_imaging&amp;moulding&amp;!move_by_patlog)|(!anesthesia&amp;adaptive_imaging&amp;!move_by_patlog))
Simplified (10): True
Simplified (16): False
((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog)|(outpatient)|(moulding&amp;!move_by_patlog)|(adaptive_imaging&amp;!move_by_patlog))
((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog)|(!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;outpatient)|(!anesthesia&amp;!adaptive_imaging&amp;moulding&amp;!move_by_patlog)|(!anesthesia&amp;adaptive_imaging&amp;!move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:49:03</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.12ms</Message>
                          <ConsoleOutput>Not simplified (16): ((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog)|(!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;outpatient)|(!anesthesia&amp;!adaptive_imaging&amp;moulding&amp;!move_by_patlog)|(!anesthesia&amp;adaptive_imaging&amp;!move_by_patlog))
Simplified     (10): ((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog)|(outpatient)|(moulding&amp;!move_by_patlog)|(adaptive_imaging&amp;!move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:02:43</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.02ms</Message>
                          <ConsoleOutput>Not simplified (16): ((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog)|(!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;outpatient)|(!anesthesia&amp;!adaptive_imaging&amp;moulding&amp;!move_by_patlog)|(!anesthesia&amp;adaptive_imaging&amp;!move_by_patlog))
Simplified     (4): ((!anesthesia&amp;!move_by_patlog)|(!adaptive_imaging&amp;outpatient))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:06:02</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.02ms</Message>
                          <ConsoleOutput>Not simplified (16): ((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog)|(!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;outpatient)|(!anesthesia&amp;!adaptive_imaging&amp;moulding&amp;!move_by_patlog)|(!anesthesia&amp;adaptive_imaging&amp;!move_by_patlog))
Simplified     (4): ((!anesthesia&amp;!move_by_patlog)|(!adaptive_imaging&amp;outpatient))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:08:59</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.04ms</Message>
                          <ConsoleOutput>Not simplified (16): ((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog)|(!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;outpatient)|(!anesthesia&amp;!adaptive_imaging&amp;moulding&amp;!move_by_patlog)|(!anesthesia&amp;adaptive_imaging&amp;!move_by_patlog))
Simplified     (3): ((!anesthesia&amp;!move_by_patlog)|(outpatient))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:58:04</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.03ms</Message>
                          <ConsoleOutput>Not simplified (16): ((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog)|(!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;outpatient)|(!anesthesia&amp;!adaptive_imaging&amp;moulding&amp;!move_by_patlog)|(!anesthesia&amp;adaptive_imaging&amp;!move_by_patlog))
Simplified     (3): ((!anesthesia&amp;!move_by_patlog)|(outpatient))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T13:05:02</TestDate>
                          <Status>Failure</Status>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Connection refused</Message>
                          <StackTrace>  at Mono.Remoting.Channels.Unix.HostConnectionPool.CreateConnection () [0x0002a] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:265 
  at Mono.Remoting.Channels.Unix.HostConnectionPool.GetConnection () [0x000bb] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:249 
  at Mono.Remoting.Channels.Unix.UnixConnectionPool.GetConnection (System.String path) [0x00049] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:104 
  at Mono.Remoting.Channels.Unix.UnixClientTransportSink.ProcessMessage (IMessage msg, ITransportHeaders requestHeaders, System.IO.Stream requestStream, ITransportHeaders&amp; responseHeaders, System.IO.Stream&amp; responseStream) [0x00025] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixClientTransportSink.cs:171 
  at System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage (IMessage msg) [0x0006c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Runtime.Remoting/System.Runtime.Remoting.Channels/BinaryClientFormatterSink.cs:157 </StackTrace>
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                    <TestRecord Name="TestCase(&quot;!(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient) &amp; !(move_by_patlog) &amp; !(gtr)&quot;)">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:23:42</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:32:47</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:34:38</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.ParsedNot.Transform () [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:61 
  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__48 (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__47 (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:35:19</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>DomPropSimplify.ParserException : Expected whitespace or comment or [a-zA-Z] at line 1 col 2.</Message>
                          <StackTrace>  at DomPropSimplify.FormulaParser.DoThrow (Int32 index, System.String format, System.Object[] args) [0x0004a] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:440 
  at DomPropSimplify.FormulaParser.DoParseFile (System.String input, System.String file) [0x00086] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:352 
  at DomPropSimplify.FormulaParser.Parse (System.String input) [0x00004] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:61 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:37 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:36:20</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:37:20</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:40:09</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:01</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:41</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:55</TestDate>
                          <Status>Failure</Status>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Object reference not set to an instance of an object</Message>
                          <StackTrace>  at MonoDevelop.NUnit.UnitTestResult.CreateFailure (System.String message, System.Exception ex) [0x00017] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-4.0.12-branch/593d7acb/source/monodevelop/main/src/addins/NUnit/Services/UnitTestResult.cs:67 
  at MonoDevelop.NUnit.NUnitAssemblyTestSuite.RunUnitTest (MonoDevelop.NUnit.UnitTest test, System.String suiteName, System.String pathName, System.String testName, MonoDevelop.NUnit.TestContext testContext) [0x00240] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-4.0.12-branch/593d7acb/source/monodevelop/main/src/addins/NUnit/Services/NUnitAssemblyTestSuite.cs:440 
  at MonoDevelop.NUnit.NUnitTestCase.OnRun (MonoDevelop.NUnit.TestContext testContext) [0x0001b] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-4.0.12-branch/593d7acb/source/monodevelop/main/src/addins/NUnit/Services/NUnitTestCase.cs:55 
  at MonoDevelop.NUnit.UnitTest.Run (MonoDevelop.NUnit.TestContext testContext) [0x00020] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-4.0.12-branch/593d7acb/source/monodevelop/main/src/addins/NUnit/Services/UnitTest.cs:373 </StackTrace>
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:43:12</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;!gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:44:49</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>!(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient) &amp; !(move_by_patlog) &amp; !(gtr)
((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;!gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:45:16</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>!(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient) &amp; !(move_by_patlog) &amp; !(gtr)
((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;!gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:47:17</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>!(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient) &amp; !(move_by_patlog) &amp; !(gtr)
((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;!gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:48:56</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;!gtr))
((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;!gtr))
Simplified: False
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:27:43</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidOperationException : Sequence contains no elements</Message>
                          <StackTrace>  at System.Linq.Enumerable.First[Or] (IEnumerable`1 source) [0x0005b] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:836 
  at DomPropSimplify.Reducer.Reduce (Boolean heuristic) [0x00247] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/Program.cs:90 
  at DomPropSimplify.Reducer..ctor (DomPropSimplify.Or formula, System.Collections.Generic.List`1 facts, Boolean heuristic) [0x00022] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/Program.cs:36 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00402] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:116 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:28:35</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.07ms</Message>
                          <ConsoleOutput>((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;!gtr))
Simplified (5): False
Simplified (5): False
((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;!gtr))
((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;!gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:46:45</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;!gtr))
Simplified (5): False
Simplified (5): False
((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;!gtr))
((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;!gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:49:03</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (5): ((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;!gtr))
Simplified     (5): ((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;!gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:00:12</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.23ms</Message>
                          <ConsoleOutput>Not simplified (5): ((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;!gtr))
Simplified     (2): ((!move_by_patlog&amp;!gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:02:43</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (5): ((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;!gtr))
Simplified     (2): ((!move_by_patlog&amp;!gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:06:02</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (5): ((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;!gtr))
Simplified     (2): ((!move_by_patlog&amp;!gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:08:59</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (5): ((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;!gtr))
Simplified     (2): ((!move_by_patlog&amp;!gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:58:04</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (5): ((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;!gtr))
Simplified     (2): ((!move_by_patlog&amp;!gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:58:29</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.60ms</Message>
                          <ConsoleOutput>Not simplified (5): ((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;!gtr))
Simplified     (2): ((!move_by_patlog&amp;!gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:59:02</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.59ms</Message>
                          <ConsoleOutput>Not simplified (5): ((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;!gtr))
Simplified     (2): ((!move_by_patlog&amp;!gtr))
Simplified hr  (5): ((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;!gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:59:18</TestDate>
                          <Status>Failure</Status>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Connection refused</Message>
                          <StackTrace>  at Mono.Remoting.Channels.Unix.HostConnectionPool.CreateConnection () [0x0002a] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:265 
  at Mono.Remoting.Channels.Unix.HostConnectionPool.GetConnection () [0x000bb] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:249 
  at Mono.Remoting.Channels.Unix.UnixConnectionPool.GetConnection (System.String path) [0x00049] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:104 
  at Mono.Remoting.Channels.Unix.UnixClientTransportSink.ProcessMessage (IMessage msg, ITransportHeaders requestHeaders, System.IO.Stream requestStream, ITransportHeaders&amp; responseHeaders, System.IO.Stream&amp; responseStream) [0x00025] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixClientTransportSink.cs:171 
  at System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage (IMessage msg) [0x0006c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Runtime.Remoting/System.Runtime.Remoting.Channels/BinaryClientFormatterSink.cs:157 </StackTrace>
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:59:22</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.63ms</Message>
                          <ConsoleOutput>Not simplified (5): ((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;!gtr))
Simplified     (2): ((!move_by_patlog&amp;!gtr))
Simplified hr  (2): ((!move_by_patlog&amp;!gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T13:00:21</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.54ms</Message>
                          <ConsoleOutput>(mr) =&gt; (!ct)
(ct) =&gt; (!mr)
(gtr) =&gt; (!fbr)
(fbr) =&gt; (!gtr)
(anesthesia) =&gt; (move_by_patlog)
(anesthesia) =&gt; (!ct)
(anesthesia) =&gt; (gtr)
(anesthesia) =&gt; (!fbr)
(anesthesia) =&gt; (!moulding)
(anesthesia) =&gt; (!adaptive_imaging)
(anesthesia) =&gt; (!outpatient)
(moulding) =&gt; (ct)
(moulding) =&gt; (!mr)
(moulding) =&gt; (!gtr)
(moulding) =&gt; (!fbr)
(moulding) =&gt; (!anesthesia)
(moulding) =&gt; (!adaptive_imaging)
(moulding) =&gt; (!outpatient)
(adaptive_imaging) =&gt; (!gtr)
(adaptive_imaging) =&gt; (!fbr)
(adaptive_imaging) =&gt; (!anesthesia)
(adaptive_imaging) =&gt; (!moulding)
(adaptive_imaging) =&gt; (!outpatient)
(outpatient) =&gt; (!move_by_patlog)
(outpatient) =&gt; (!gtr)
(outpatient) =&gt; (!fbr)
(outpatient) =&gt; (!anesthesia)
(outpatient) =&gt; (!moulding)
(outpatient) =&gt; (!adaptive_imaging)
(treatment) =&gt; (!moulding)
(treatment) =&gt; (!anesthesia)
(treatment) =&gt; (!adaptive_imaging)
(treatment) =&gt; (!outpatient)
(!ct) =&gt; (!mr)
(!mr) =&gt; (!ct)
(!fbr) =&gt; (!gtr)
(!gtr) =&gt; (!fbr)
(move_by_patlog) =&gt; (!anesthesia)
(!ct) =&gt; (!anesthesia)
(gtr) =&gt; (!anesthesia)
(!fbr) =&gt; (!anesthesia)
(!moulding) =&gt; (!anesthesia)
(!adaptive_imaging) =&gt; (!anesthesia)
(!outpatient) =&gt; (!anesthesia)
(ct) =&gt; (!moulding)
(!mr) =&gt; (!moulding)
(!gtr) =&gt; (!moulding)
(!fbr) =&gt; (!moulding)
(!anesthesia) =&gt; (!moulding)
(!adaptive_imaging) =&gt; (!moulding)
(!outpatient) =&gt; (!moulding)
(!gtr) =&gt; (!adaptive_imaging)
(!fbr) =&gt; (!adaptive_imaging)
(!anesthesia) =&gt; (!adaptive_imaging)
(!moulding) =&gt; (!adaptive_imaging)
(!outpatient) =&gt; (!adaptive_imaging)
(!move_by_patlog) =&gt; (!outpatient)
(!gtr) =&gt; (!outpatient)
(!fbr) =&gt; (!outpatient)
(!anesthesia) =&gt; (!outpatient)
(!moulding) =&gt; (!outpatient)
(!adaptive_imaging) =&gt; (!outpatient)
(!moulding) =&gt; (!treatment)
(!anesthesia) =&gt; (!treatment)
(!adaptive_imaging) =&gt; (!treatment)
(!outpatient) =&gt; (!treatment)
Not simplified (5): ((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;!gtr))
Simplified     (2): ((!move_by_patlog&amp;!gtr))
Simplified hr  (2): ((!move_by_patlog&amp;!gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                    <TestRecord Name="TestCase(&quot;(!(adaptive_imaging) &amp; !(moulding) &amp; outpatient) | (adaptive_imaging)&quot;)">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:23:42</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:32:47</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at (wrapper castclass) object:__castclass_with_cache (object,intptr,intptr)
  at System.Linq.Enumerable+&lt;CreateCastIterator&gt;c__Iterator15`1[DomPropSimplify.ParsedAnd].MoveNext () [0x00048] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:578 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:33:40</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at (wrapper castclass) object:__castclass_with_cache (object,intptr,intptr)
  at System.Linq.Enumerable+&lt;CreateCastIterator&gt;c__Iterator15`1[DomPropSimplify.ParsedAnd].MoveNext () [0x00048] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:578 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:34:38</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.ParsedNot.Transform () [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:61 
  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__48 (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__47 (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__48 (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__47 (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:35:19</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>DomPropSimplify.ParserException : Expected whitespace or comment or [a-zA-Z] at line 1 col 3.</Message>
                          <StackTrace>  at DomPropSimplify.FormulaParser.DoThrow (Int32 index, System.String format, System.Object[] args) [0x0004a] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:440 
  at DomPropSimplify.FormulaParser.DoParseFile (System.String input, System.String file) [0x00086] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:352 
  at DomPropSimplify.FormulaParser.Parse (System.String input) [0x00004] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:61 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:37 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:36:20</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__4C (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__4B (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:37:20</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at (wrapper castclass) object:__castclass_with_cache (object,intptr,intptr)
  at System.Linq.Enumerable+&lt;CreateCastIterator&gt;c__Iterator15`1[DomPropSimplify.ParsedAnd].MoveNext () [0x00048] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:578 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:37:30</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at (wrapper castclass) object:__castclass_with_cache (object,intptr,intptr)
  at System.Linq.Enumerable+&lt;CreateCastIterator&gt;c__Iterator15`1[DomPropSimplify.ParsedAnd].MoveNext () [0x00048] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:578 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:37:35</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at (wrapper castclass) object:__castclass_with_cache (object,intptr,intptr)
  at System.Linq.Enumerable+&lt;CreateCastIterator&gt;c__Iterator15`1[DomPropSimplify.ParsedAnd].MoveNext () [0x00048] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:578 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:38:15</TestDate>
                          <Status>Failure</Status>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Object reference not set to an instance of an object</Message>
                          <StackTrace>  at MonoDevelop.NUnit.UnitTestResult.CreateFailure (System.String message, System.Exception ex) [0x00017] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-4.0.12-branch/593d7acb/source/monodevelop/main/src/addins/NUnit/Services/UnitTestResult.cs:67 
  at MonoDevelop.NUnit.NUnitAssemblyTestSuite.RunUnitTest (MonoDevelop.NUnit.UnitTest test, System.String suiteName, System.String pathName, System.String testName, MonoDevelop.NUnit.TestContext testContext) [0x00240] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-4.0.12-branch/593d7acb/source/monodevelop/main/src/addins/NUnit/Services/NUnitAssemblyTestSuite.cs:440 
  at MonoDevelop.NUnit.NUnitTestCase.OnRun (MonoDevelop.NUnit.TestContext testContext) [0x0001b] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-4.0.12-branch/593d7acb/source/monodevelop/main/src/addins/NUnit/Services/NUnitTestCase.cs:55 
  at MonoDevelop.NUnit.UnitTest.Run (MonoDevelop.NUnit.TestContext testContext) [0x00020] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-4.0.12-branch/593d7acb/source/monodevelop/main/src/addins/NUnit/Services/UnitTest.cs:373 </StackTrace>
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:40:09</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at (wrapper castclass) object:__castclass_with_cache (object,intptr,intptr)
  at System.Linq.Enumerable+&lt;CreateCastIterator&gt;c__Iterator15`1[DomPropSimplify.ParsedAnd].MoveNext () [0x00048] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:578 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:26 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:40:14</TestDate>
                          <Status>Failure</Status>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Object reference not set to an instance of an object</Message>
                          <StackTrace>  at MonoDevelop.NUnit.UnitTestResult.CreateFailure (System.String message, System.Exception ex) [0x00017] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-4.0.12-branch/593d7acb/source/monodevelop/main/src/addins/NUnit/Services/UnitTestResult.cs:67 
  at MonoDevelop.NUnit.NUnitAssemblyTestSuite.RunUnitTest (MonoDevelop.NUnit.UnitTest test, System.String suiteName, System.String pathName, System.String testName, MonoDevelop.NUnit.TestContext testContext) [0x00240] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-4.0.12-branch/593d7acb/source/monodevelop/main/src/addins/NUnit/Services/NUnitAssemblyTestSuite.cs:440 
  at MonoDevelop.NUnit.NUnitTestCase.OnRun (MonoDevelop.NUnit.TestContext testContext) [0x0001b] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-4.0.12-branch/593d7acb/source/monodevelop/main/src/addins/NUnit/Services/NUnitTestCase.cs:55 
  at MonoDevelop.NUnit.UnitTest.Run (MonoDevelop.NUnit.TestContext testContext) [0x00020] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-4.0.12-branch/593d7acb/source/monodevelop/main/src/addins/NUnit/Services/UnitTest.cs:373 </StackTrace>
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:40:34</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at (wrapper castclass) object:__castclass_with_cache (object,intptr,intptr)
  at System.Linq.Enumerable+&lt;CreateCastIterator&gt;c__Iterator15`1[DomPropSimplify.ParsedAnd].MoveNext () [0x00048] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:578 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:26 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:01</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:41</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!adaptive_imaging&amp;!moulding&amp;outpatient)|(adaptive_imaging))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:43:12</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!adaptive_imaging&amp;!moulding&amp;outpatient)|(adaptive_imaging))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:44:49</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00027] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:42 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput>(!(adaptive_imaging) &amp; !(moulding) &amp; outpatient) | (adaptive_imaging)
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:45:16</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>(!(adaptive_imaging) &amp; !(moulding) &amp; outpatient) | (adaptive_imaging)
((!adaptive_imaging&amp;!moulding&amp;outpatient)|(adaptive_imaging))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:47:17</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.01ms</Message>
                          <ConsoleOutput>(!(adaptive_imaging) &amp; !(moulding) &amp; outpatient) | (adaptive_imaging)
((outpatient)|(adaptive_imaging))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:48:56</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.01ms</Message>
                          <ConsoleOutput>((!adaptive_imaging&amp;!moulding&amp;outpatient)|(adaptive_imaging))
((outpatient)|(adaptive_imaging))
Simplified: True
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:46:45</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.01ms</Message>
                          <ConsoleOutput>((!adaptive_imaging&amp;!moulding&amp;outpatient)|(adaptive_imaging))
Simplified (2): True
Simplified (4): False
((outpatient)|(adaptive_imaging))
((!adaptive_imaging&amp;!moulding&amp;outpatient)|(adaptive_imaging))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:49:03</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (4): ((!adaptive_imaging&amp;!moulding&amp;outpatient)|(adaptive_imaging))
Simplified     (2): ((outpatient)|(adaptive_imaging))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:02:16</TestDate>
                          <Status>Failure</Status>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Connection refused</Message>
                          <StackTrace>  at Mono.Remoting.Channels.Unix.HostConnectionPool.CreateConnection () [0x0002a] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:265 
  at Mono.Remoting.Channels.Unix.HostConnectionPool.GetConnection () [0x000bb] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:249 
  at Mono.Remoting.Channels.Unix.UnixConnectionPool.GetConnection (System.String path) [0x00049] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:104 
  at Mono.Remoting.Channels.Unix.UnixClientTransportSink.ProcessMessage (IMessage msg, ITransportHeaders requestHeaders, System.IO.Stream requestStream, ITransportHeaders&amp; responseHeaders, System.IO.Stream&amp; responseStream) [0x00025] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixClientTransportSink.cs:171 
  at System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage (IMessage msg) [0x0006c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Runtime.Remoting/System.Runtime.Remoting.Channels/BinaryClientFormatterSink.cs:157 </StackTrace>
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:02:43</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (4): ((!adaptive_imaging&amp;!moulding&amp;outpatient)|(adaptive_imaging))
Simplified     (3): ((!adaptive_imaging&amp;outpatient)|(adaptive_imaging))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:06:02</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (4): ((!adaptive_imaging&amp;!moulding&amp;outpatient)|(adaptive_imaging))
Simplified     (3): ((!adaptive_imaging&amp;outpatient)|(adaptive_imaging))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:08:59</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.01ms</Message>
                          <ConsoleOutput>Not simplified (4): ((!adaptive_imaging&amp;!moulding&amp;outpatient)|(adaptive_imaging))
Simplified     (2): ((outpatient)|(adaptive_imaging))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:58:04</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.01ms</Message>
                          <ConsoleOutput>Not simplified (4): ((!adaptive_imaging&amp;!moulding&amp;outpatient)|(adaptive_imaging))
Simplified     (2): ((outpatient)|(adaptive_imaging))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T13:04:00</TestDate>
                          <Status>Failure</Status>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Connection refused</Message>
                          <StackTrace>  at Mono.Remoting.Channels.Unix.HostConnectionPool.CreateConnection () [0x0002a] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:265 
  at Mono.Remoting.Channels.Unix.HostConnectionPool.GetConnection () [0x000bb] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:249 
  at Mono.Remoting.Channels.Unix.UnixConnectionPool.GetConnection (System.String path) [0x00049] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:104 
  at Mono.Remoting.Channels.Unix.UnixClientTransportSink.ProcessMessage (IMessage msg, ITransportHeaders requestHeaders, System.IO.Stream requestStream, ITransportHeaders&amp; responseHeaders, System.IO.Stream&amp; responseStream) [0x00025] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixClientTransportSink.cs:171 
  at System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage (IMessage msg) [0x0006c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Runtime.Remoting/System.Runtime.Remoting.Channels/BinaryClientFormatterSink.cs:157 </StackTrace>
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                    <TestRecord Name="TestCase(&quot;(!(adaptive_imaging) &amp; !(moulding) &amp; outpatient &amp; !(ct)) | (adaptive_imaging &amp; !(move_by_patlog) &amp; !(ct))&quot;)">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:23:42</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:32:47</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:34:38</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.ParsedNot.Transform () [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:61 
  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__48 (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__47 (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__48 (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__47 (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:35:19</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>DomPropSimplify.ParserException : Expected whitespace or comment or [a-zA-Z] at line 1 col 3.</Message>
                          <StackTrace>  at DomPropSimplify.FormulaParser.DoThrow (Int32 index, System.String format, System.Object[] args) [0x0004a] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:440 
  at DomPropSimplify.FormulaParser.DoParseFile (System.String input, System.String file) [0x00086] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:352 
  at DomPropSimplify.FormulaParser.Parse (System.String input) [0x00004] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:61 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:37 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:36:20</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__4C (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__4B (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:36:35</TestDate>
                          <Status>Failure</Status>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Object reference not set to an instance of an object</Message>
                          <StackTrace>  at MonoDevelop.NUnit.UnitTestResult.CreateFailure (System.String message, System.Exception ex) [0x00017] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-4.0.12-branch/593d7acb/source/monodevelop/main/src/addins/NUnit/Services/UnitTestResult.cs:67 
  at MonoDevelop.NUnit.NUnitAssemblyTestSuite.RunUnitTest (MonoDevelop.NUnit.UnitTest test, System.String suiteName, System.String pathName, System.String testName, MonoDevelop.NUnit.TestContext testContext) [0x00240] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-4.0.12-branch/593d7acb/source/monodevelop/main/src/addins/NUnit/Services/NUnitAssemblyTestSuite.cs:440 
  at MonoDevelop.NUnit.NUnitTestCase.OnRun (MonoDevelop.NUnit.TestContext testContext) [0x0001b] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-4.0.12-branch/593d7acb/source/monodevelop/main/src/addins/NUnit/Services/NUnitTestCase.cs:55 
  at MonoDevelop.NUnit.UnitTest.Run (MonoDevelop.NUnit.TestContext testContext) [0x00020] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-4.0.12-branch/593d7acb/source/monodevelop/main/src/addins/NUnit/Services/UnitTest.cs:373 </StackTrace>
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:37:20</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:40:09</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:01</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:41</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!adaptive_imaging&amp;!moulding&amp;outpatient&amp;!ct)|(adaptive_imaging&amp;!ct&amp;!move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:43:12</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!adaptive_imaging&amp;!moulding&amp;outpatient&amp;!ct)|(adaptive_imaging&amp;!ct&amp;!move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:44:49</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00027] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:42 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput>(!(adaptive_imaging) &amp; !(moulding) &amp; outpatient &amp; !(ct)) | (adaptive_imaging &amp; !(move_by_patlog) &amp; !(ct))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:45:16</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>(!(adaptive_imaging) &amp; !(moulding) &amp; outpatient &amp; !(ct)) | (adaptive_imaging &amp; !(move_by_patlog) &amp; !(ct))
((!adaptive_imaging&amp;!moulding&amp;outpatient&amp;!ct)|(adaptive_imaging&amp;!ct&amp;!move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:47:17</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.01ms</Message>
                          <ConsoleOutput>(!(adaptive_imaging) &amp; !(moulding) &amp; outpatient &amp; !(ct)) | (adaptive_imaging &amp; !(move_by_patlog) &amp; !(ct))
((outpatient&amp;!ct)|(!ct&amp;adaptive_imaging&amp;!move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:48:56</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.01ms</Message>
                          <ConsoleOutput>((!adaptive_imaging&amp;!moulding&amp;outpatient&amp;!ct)|(adaptive_imaging&amp;!move_by_patlog&amp;!ct))
((outpatient&amp;!ct)|(!ct&amp;adaptive_imaging&amp;!move_by_patlog))
Simplified: True
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:46:45</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.01ms</Message>
                          <ConsoleOutput>((!adaptive_imaging&amp;!moulding&amp;outpatient&amp;!ct)|(adaptive_imaging&amp;!move_by_patlog&amp;!ct))
Simplified (5): True
Simplified (7): False
((outpatient&amp;!ct)|(!ct&amp;adaptive_imaging&amp;!move_by_patlog))
((!adaptive_imaging&amp;!moulding&amp;outpatient&amp;!ct)|(adaptive_imaging&amp;!move_by_patlog&amp;!ct))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:49:03</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.01ms</Message>
                          <ConsoleOutput>Not simplified (7): ((!adaptive_imaging&amp;!moulding&amp;outpatient&amp;!ct)|(adaptive_imaging&amp;!move_by_patlog&amp;!ct))
Simplified     (5): ((outpatient&amp;!ct)|(!ct&amp;adaptive_imaging&amp;!move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:02:43</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (7): ((!adaptive_imaging&amp;!moulding&amp;outpatient&amp;!ct)|(adaptive_imaging&amp;!move_by_patlog&amp;!ct))
Simplified     (6): ((!adaptive_imaging&amp;outpatient&amp;!ct)|(adaptive_imaging&amp;!ct&amp;!move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:06:02</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (7): ((!adaptive_imaging&amp;!moulding&amp;outpatient&amp;!ct)|(adaptive_imaging&amp;!move_by_patlog&amp;!ct))
Simplified     (6): ((!adaptive_imaging&amp;outpatient&amp;!ct)|(adaptive_imaging&amp;!ct&amp;!move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:08:59</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.01ms</Message>
                          <ConsoleOutput>Not simplified (7): ((!adaptive_imaging&amp;!moulding&amp;outpatient&amp;!ct)|(adaptive_imaging&amp;!move_by_patlog&amp;!ct))
Simplified     (5): ((outpatient&amp;!ct)|(!ct&amp;adaptive_imaging&amp;!move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:58:04</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.01ms</Message>
                          <ConsoleOutput>Not simplified (7): ((!adaptive_imaging&amp;!moulding&amp;outpatient&amp;!ct)|(adaptive_imaging&amp;!move_by_patlog&amp;!ct))
Simplified     (5): ((outpatient&amp;!ct)|(!ct&amp;adaptive_imaging&amp;!move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T13:03:23</TestDate>
                          <Status>Failure</Status>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Object reference not set to an instance of an object</Message>
                          <StackTrace>  at MonoDevelop.NUnit.UnitTestResult.CreateFailure (System.String message, System.Exception ex) [0x00017] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-4.0.12-branch/593d7acb/source/monodevelop/main/src/addins/NUnit/Services/UnitTestResult.cs:67 
  at MonoDevelop.NUnit.NUnitAssemblyTestSuite.RunUnitTest (MonoDevelop.NUnit.UnitTest test, System.String suiteName, System.String pathName, System.String testName, MonoDevelop.NUnit.TestContext testContext) [0x00240] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-4.0.12-branch/593d7acb/source/monodevelop/main/src/addins/NUnit/Services/NUnitAssemblyTestSuite.cs:440 
  at MonoDevelop.NUnit.NUnitTestCase.OnRun (MonoDevelop.NUnit.TestContext testContext) [0x0001b] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-4.0.12-branch/593d7acb/source/monodevelop/main/src/addins/NUnit/Services/NUnitTestCase.cs:55 
  at MonoDevelop.NUnit.UnitTest.Run (MonoDevelop.NUnit.TestContext testContext) [0x00020] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-4.0.12-branch/593d7acb/source/monodevelop/main/src/addins/NUnit/Services/UnitTest.cs:373 </StackTrace>
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                    <TestRecord Name="TestCase(&quot;(!(adaptive_imaging) &amp; !(moulding) &amp; outpatient &amp; ct) | (!(adaptive_imaging) &amp; moulding &amp; !(move_by_patlog)) | (adaptive_imaging &amp; !(move_by_patlog) &amp; ct)&quot;)">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:23:42</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:32:47</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:34:38</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.ParsedNot.Transform () [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:61 
  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__48 (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__47 (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__48 (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__47 (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:35:19</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>DomPropSimplify.ParserException : Expected whitespace or comment or [a-zA-Z] at line 1 col 3.</Message>
                          <StackTrace>  at DomPropSimplify.FormulaParser.DoThrow (Int32 index, System.String format, System.Object[] args) [0x0004a] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:440 
  at DomPropSimplify.FormulaParser.DoParseFile (System.String input, System.String file) [0x00086] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:352 
  at DomPropSimplify.FormulaParser.Parse (System.String input) [0x00004] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:61 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:37 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:36:20</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__4C (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__4B (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:37:20</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:40:09</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:01</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:41</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!adaptive_imaging&amp;!moulding&amp;outpatient&amp;ct)|(!adaptive_imaging&amp;moulding&amp;!move_by_patlog)|(adaptive_imaging&amp;ct&amp;!move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:43:12</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!adaptive_imaging&amp;!moulding&amp;outpatient&amp;ct)|(!adaptive_imaging&amp;moulding&amp;!move_by_patlog)|(adaptive_imaging&amp;ct&amp;!move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:44:49</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00027] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:42 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput>(!(adaptive_imaging) &amp; !(moulding) &amp; outpatient &amp; ct) | (!(adaptive_imaging) &amp; moulding &amp; !(move_by_patlog)) | (adaptive_imaging &amp; !(move_by_patlog) &amp; ct)
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:45:16</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>(!(adaptive_imaging) &amp; !(moulding) &amp; outpatient &amp; ct) | (!(adaptive_imaging) &amp; moulding &amp; !(move_by_patlog)) | (adaptive_imaging &amp; !(move_by_patlog) &amp; ct)
((!adaptive_imaging&amp;!moulding&amp;outpatient&amp;ct)|(!adaptive_imaging&amp;moulding&amp;!move_by_patlog)|(adaptive_imaging&amp;ct&amp;!move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:47:17</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.21ms</Message>
                          <ConsoleOutput>(!(adaptive_imaging) &amp; !(moulding) &amp; outpatient &amp; ct) | (!(adaptive_imaging) &amp; moulding &amp; !(move_by_patlog)) | (adaptive_imaging &amp; !(move_by_patlog) &amp; ct)
((outpatient&amp;ct)|(moulding&amp;!move_by_patlog)|(ct&amp;!move_by_patlog&amp;adaptive_imaging))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:48:56</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.21ms</Message>
                          <ConsoleOutput>((!adaptive_imaging&amp;!moulding&amp;outpatient&amp;ct)|(!adaptive_imaging&amp;moulding&amp;!move_by_patlog)|(adaptive_imaging&amp;!move_by_patlog&amp;ct))
((outpatient&amp;ct)|(moulding&amp;!move_by_patlog)|(ct&amp;!move_by_patlog&amp;adaptive_imaging))
Simplified: True
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:46:45</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.21ms</Message>
                          <ConsoleOutput>((!adaptive_imaging&amp;!moulding&amp;outpatient&amp;ct)|(!adaptive_imaging&amp;moulding&amp;!move_by_patlog)|(adaptive_imaging&amp;!move_by_patlog&amp;ct))
Simplified (7): True
Simplified (10): False
((outpatient&amp;ct)|(moulding&amp;!move_by_patlog)|(ct&amp;!move_by_patlog&amp;adaptive_imaging))
((!adaptive_imaging&amp;!moulding&amp;outpatient&amp;ct)|(!adaptive_imaging&amp;moulding&amp;!move_by_patlog)|(adaptive_imaging&amp;!move_by_patlog&amp;ct))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:49:03</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.21ms</Message>
                          <ConsoleOutput>Not simplified (10): ((!adaptive_imaging&amp;!moulding&amp;outpatient&amp;ct)|(!adaptive_imaging&amp;moulding&amp;!move_by_patlog)|(adaptive_imaging&amp;!move_by_patlog&amp;ct))
Simplified     (7): ((outpatient&amp;ct)|(moulding&amp;!move_by_patlog)|(ct&amp;!move_by_patlog&amp;adaptive_imaging))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:00:58</TestDate>
                          <Status>Failure</Status>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Connection refused</Message>
                          <StackTrace>  at Mono.Remoting.Channels.Unix.HostConnectionPool.CreateConnection () [0x0002a] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:265 
  at Mono.Remoting.Channels.Unix.HostConnectionPool.GetConnection () [0x000bb] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:249 
  at Mono.Remoting.Channels.Unix.UnixConnectionPool.GetConnection (System.String path) [0x00049] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:104 
  at Mono.Remoting.Channels.Unix.UnixClientTransportSink.ProcessMessage (IMessage msg, ITransportHeaders requestHeaders, System.IO.Stream requestStream, ITransportHeaders&amp; responseHeaders, System.IO.Stream&amp; responseStream) [0x00025] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixClientTransportSink.cs:171 
  at System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage (IMessage msg) [0x0006c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Runtime.Remoting/System.Runtime.Remoting.Channels/BinaryClientFormatterSink.cs:157 </StackTrace>
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:02:43</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.01ms</Message>
                          <ConsoleOutput>Not simplified (10): ((!adaptive_imaging&amp;!moulding&amp;outpatient&amp;ct)|(!adaptive_imaging&amp;moulding&amp;!move_by_patlog)|(adaptive_imaging&amp;!move_by_patlog&amp;ct))
Simplified     (9): ((!adaptive_imaging&amp;outpatient&amp;ct)|(!adaptive_imaging&amp;moulding&amp;!move_by_patlog)|(adaptive_imaging&amp;ct&amp;!move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:06:02</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.01ms</Message>
                          <ConsoleOutput>Not simplified (10): ((!adaptive_imaging&amp;!moulding&amp;outpatient&amp;ct)|(!adaptive_imaging&amp;moulding&amp;!move_by_patlog)|(adaptive_imaging&amp;!move_by_patlog&amp;ct))
Simplified     (9): ((!adaptive_imaging&amp;outpatient&amp;ct)|(!adaptive_imaging&amp;moulding&amp;!move_by_patlog)|(adaptive_imaging&amp;ct&amp;!move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:08:59</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.01ms</Message>
                          <ConsoleOutput>Not simplified (10): ((!adaptive_imaging&amp;!moulding&amp;outpatient&amp;ct)|(!adaptive_imaging&amp;moulding&amp;!move_by_patlog)|(adaptive_imaging&amp;!move_by_patlog&amp;ct))
Simplified     (7): ((outpatient&amp;ct)|(moulding&amp;!move_by_patlog)|(ct&amp;!move_by_patlog&amp;adaptive_imaging))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:58:04</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.01ms</Message>
                          <ConsoleOutput>Not simplified (10): ((!adaptive_imaging&amp;!moulding&amp;outpatient&amp;ct)|(!adaptive_imaging&amp;moulding&amp;!move_by_patlog)|(adaptive_imaging&amp;!move_by_patlog&amp;ct))
Simplified     (7): ((outpatient&amp;ct)|(moulding&amp;!move_by_patlog)|(ct&amp;!move_by_patlog&amp;adaptive_imaging))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T13:03:49</TestDate>
                          <Status>Failure</Status>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Connection refused</Message>
                          <StackTrace>  at Mono.Remoting.Channels.Unix.HostConnectionPool.CreateConnection () [0x0002a] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:265 
  at Mono.Remoting.Channels.Unix.HostConnectionPool.GetConnection () [0x000bb] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:249 
  at Mono.Remoting.Channels.Unix.UnixConnectionPool.GetConnection (System.String path) [0x00049] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:104 
  at Mono.Remoting.Channels.Unix.UnixClientTransportSink.ProcessMessage (IMessage msg, ITransportHeaders requestHeaders, System.IO.Stream requestStream, ITransportHeaders&amp; responseHeaders, System.IO.Stream&amp; responseStream) [0x00025] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixClientTransportSink.cs:171 
  at System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage (IMessage msg) [0x0006c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Runtime.Remoting/System.Runtime.Remoting.Channels/BinaryClientFormatterSink.cs:157 </StackTrace>
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                    <TestRecord Name="TestCase(&quot;!(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient) &amp; !(move_by_patlog) &amp; gtr&quot;)">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:23:42</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:32:47</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:34:38</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.ParsedNot.Transform () [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:61 
  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__48 (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__47 (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:35:19</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>DomPropSimplify.ParserException : Expected whitespace or comment or [a-zA-Z] at line 1 col 2.</Message>
                          <StackTrace>  at DomPropSimplify.FormulaParser.DoThrow (Int32 index, System.String format, System.Object[] args) [0x0004a] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:440 
  at DomPropSimplify.FormulaParser.DoParseFile (System.String input, System.String file) [0x00086] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:352 
  at DomPropSimplify.FormulaParser.Parse (System.String input) [0x00004] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:61 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:37 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:36:20</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:37:20</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:40:09</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:01</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:41</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:43:12</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:44:49</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>!(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient) &amp; !(move_by_patlog) &amp; gtr
((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:45:16</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>!(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient) &amp; !(move_by_patlog) &amp; gtr
((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:47:17</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>!(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient) &amp; !(move_by_patlog) &amp; gtr
((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:48:56</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;gtr))
((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;gtr))
Simplified: False
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:29:15</TestDate>
                          <Status>Failure</Status>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Connection refused</Message>
                          <StackTrace>  at Mono.Remoting.Channels.Unix.HostConnectionPool.CreateConnection () [0x0002a] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:265 
  at Mono.Remoting.Channels.Unix.HostConnectionPool.GetConnection () [0x000bb] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:249 
  at Mono.Remoting.Channels.Unix.UnixConnectionPool.GetConnection (System.String path) [0x00049] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:104 
  at Mono.Remoting.Channels.Unix.UnixClientTransportSink.ProcessMessage (IMessage msg, ITransportHeaders requestHeaders, System.IO.Stream requestStream, ITransportHeaders&amp; responseHeaders, System.IO.Stream&amp; responseStream) [0x00025] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixClientTransportSink.cs:171 
  at System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage (IMessage msg) [0x0006c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Runtime.Remoting/System.Runtime.Remoting.Channels/BinaryClientFormatterSink.cs:157 </StackTrace>
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:46:45</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;gtr))
Simplified (5): False
Simplified (5): False
((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;gtr))
((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:49:03</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (5): ((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;gtr))
Simplified     (5): ((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:00:19</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.37ms</Message>
                          <ConsoleOutput>Not simplified (5): ((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;gtr))
Simplified     (2): ((!move_by_patlog&amp;gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:02:43</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (5): ((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;gtr))
Simplified     (2): ((!move_by_patlog&amp;gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:06:02</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (5): ((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;gtr))
Simplified     (2): ((!move_by_patlog&amp;gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:08:59</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.01ms</Message>
                          <ConsoleOutput>Not simplified (5): ((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;gtr))
Simplified     (2): ((!move_by_patlog&amp;gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:58:04</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (5): ((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;gtr))
Simplified     (2): ((!move_by_patlog&amp;gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:59:29</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 1.19ms</Message>
                          <ConsoleOutput>Not simplified (5): ((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;gtr))
Simplified     (2): ((!move_by_patlog&amp;gtr))
Simplified hr  (2): ((!move_by_patlog&amp;gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T13:00:29</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 1.21ms</Message>
                          <ConsoleOutput>(mr) =&gt; (!ct)
(ct) =&gt; (!mr)
(gtr) =&gt; (!fbr)
(fbr) =&gt; (!gtr)
(anesthesia) =&gt; (move_by_patlog)
(anesthesia) =&gt; (!ct)
(anesthesia) =&gt; (gtr)
(anesthesia) =&gt; (!fbr)
(anesthesia) =&gt; (!moulding)
(anesthesia) =&gt; (!adaptive_imaging)
(anesthesia) =&gt; (!outpatient)
(moulding) =&gt; (ct)
(moulding) =&gt; (!mr)
(moulding) =&gt; (!gtr)
(moulding) =&gt; (!fbr)
(moulding) =&gt; (!anesthesia)
(moulding) =&gt; (!adaptive_imaging)
(moulding) =&gt; (!outpatient)
(adaptive_imaging) =&gt; (!gtr)
(adaptive_imaging) =&gt; (!fbr)
(adaptive_imaging) =&gt; (!anesthesia)
(adaptive_imaging) =&gt; (!moulding)
(adaptive_imaging) =&gt; (!outpatient)
(outpatient) =&gt; (!move_by_patlog)
(outpatient) =&gt; (!gtr)
(outpatient) =&gt; (!fbr)
(outpatient) =&gt; (!anesthesia)
(outpatient) =&gt; (!moulding)
(outpatient) =&gt; (!adaptive_imaging)
(treatment) =&gt; (!moulding)
(treatment) =&gt; (!anesthesia)
(treatment) =&gt; (!adaptive_imaging)
(treatment) =&gt; (!outpatient)
(!ct) =&gt; (!mr)
(!mr) =&gt; (!ct)
(!fbr) =&gt; (!gtr)
(!gtr) =&gt; (!fbr)
(move_by_patlog) =&gt; (!anesthesia)
(!ct) =&gt; (!anesthesia)
(gtr) =&gt; (!anesthesia)
(!fbr) =&gt; (!anesthesia)
(!moulding) =&gt; (!anesthesia)
(!adaptive_imaging) =&gt; (!anesthesia)
(!outpatient) =&gt; (!anesthesia)
(ct) =&gt; (!moulding)
(!mr) =&gt; (!moulding)
(!gtr) =&gt; (!moulding)
(!fbr) =&gt; (!moulding)
(!anesthesia) =&gt; (!moulding)
(!adaptive_imaging) =&gt; (!moulding)
(!outpatient) =&gt; (!moulding)
(!gtr) =&gt; (!adaptive_imaging)
(!fbr) =&gt; (!adaptive_imaging)
(!anesthesia) =&gt; (!adaptive_imaging)
(!moulding) =&gt; (!adaptive_imaging)
(!outpatient) =&gt; (!adaptive_imaging)
(!move_by_patlog) =&gt; (!outpatient)
(!gtr) =&gt; (!outpatient)
(!fbr) =&gt; (!outpatient)
(!anesthesia) =&gt; (!outpatient)
(!moulding) =&gt; (!outpatient)
(!adaptive_imaging) =&gt; (!outpatient)
(!moulding) =&gt; (!treatment)
(!anesthesia) =&gt; (!treatment)
(!adaptive_imaging) =&gt; (!treatment)
(!outpatient) =&gt; (!treatment)
Not simplified (5): ((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;!move_by_patlog&amp;gtr))
Simplified     (2): ((!move_by_patlog&amp;gtr))
Simplified hr  (2): ((!move_by_patlog&amp;gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                    <TestRecord Name="TestCase(&quot;(!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient) &amp; move_by_patlog) | (!(anesthesia) &amp; !(adaptive_imaging) &amp; moulding &amp; move_by_patlog) | (!(anesthesia) &amp; adaptive_imaging &amp; move_by_patlog)&quot;)">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:23:42</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:32:47</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:34:38</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.ParsedNot.Transform () [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:61 
  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__48 (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__47 (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__48 (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__47 (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:35:19</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>DomPropSimplify.ParserException : Expected whitespace or comment or [a-zA-Z] at line 1 col 3.</Message>
                          <StackTrace>  at DomPropSimplify.FormulaParser.DoThrow (Int32 index, System.String format, System.Object[] args) [0x0004a] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:440 
  at DomPropSimplify.FormulaParser.DoParseFile (System.String input, System.String file) [0x00086] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:352 
  at DomPropSimplify.FormulaParser.Parse (System.String input) [0x00004] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:61 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:37 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:36:20</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__4C (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__4B (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:37:20</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:40:09</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:01</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:41</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog)|(!anesthesia&amp;!adaptive_imaging&amp;moulding&amp;move_by_patlog)|(!anesthesia&amp;adaptive_imaging&amp;move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:43:12</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog)|(!anesthesia&amp;!adaptive_imaging&amp;moulding&amp;move_by_patlog)|(!anesthesia&amp;adaptive_imaging&amp;move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:44:49</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00027] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:42 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput>(!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient) &amp; move_by_patlog) | (!(anesthesia) &amp; !(adaptive_imaging) &amp; moulding &amp; move_by_patlog) | (!(anesthesia) &amp; adaptive_imaging &amp; move_by_patlog)
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:45:16</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.01ms</Message>
                          <ConsoleOutput>(!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient) &amp; move_by_patlog) | (!(anesthesia) &amp; !(adaptive_imaging) &amp; moulding &amp; move_by_patlog) | (!(anesthesia) &amp; adaptive_imaging &amp; move_by_patlog)
((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog)|(!anesthesia&amp;!adaptive_imaging&amp;moulding&amp;move_by_patlog)|(!anesthesia&amp;adaptive_imaging&amp;move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:47:17</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.02ms</Message>
                          <ConsoleOutput>(!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient) &amp; move_by_patlog) | (!(anesthesia) &amp; !(adaptive_imaging) &amp; moulding &amp; move_by_patlog) | (!(anesthesia) &amp; adaptive_imaging &amp; move_by_patlog)
((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog)|(moulding&amp;move_by_patlog)|(adaptive_imaging&amp;move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:48:56</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.02ms</Message>
                          <ConsoleOutput>((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog)|(!anesthesia&amp;!adaptive_imaging&amp;moulding&amp;move_by_patlog)|(!anesthesia&amp;adaptive_imaging&amp;move_by_patlog))
((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog)|(moulding&amp;move_by_patlog)|(adaptive_imaging&amp;move_by_patlog))
Simplified: True
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:46:45</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.02ms</Message>
                          <ConsoleOutput>((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog)|(!anesthesia&amp;!adaptive_imaging&amp;moulding&amp;move_by_patlog)|(!anesthesia&amp;adaptive_imaging&amp;move_by_patlog))
Simplified (9): True
Simplified (12): False
((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog)|(moulding&amp;move_by_patlog)|(adaptive_imaging&amp;move_by_patlog))
((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog)|(!anesthesia&amp;!adaptive_imaging&amp;moulding&amp;move_by_patlog)|(!anesthesia&amp;adaptive_imaging&amp;move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:49:03</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.02ms</Message>
                          <ConsoleOutput>Not simplified (12): ((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog)|(!anesthesia&amp;!adaptive_imaging&amp;moulding&amp;move_by_patlog)|(!anesthesia&amp;adaptive_imaging&amp;move_by_patlog))
Simplified     (9): ((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog)|(moulding&amp;move_by_patlog)|(adaptive_imaging&amp;move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:02:43</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.01ms</Message>
                          <ConsoleOutput>Not simplified (12): ((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog)|(!anesthesia&amp;!adaptive_imaging&amp;moulding&amp;move_by_patlog)|(!anesthesia&amp;adaptive_imaging&amp;move_by_patlog))
Simplified     (1): ((move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:06:02</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.01ms</Message>
                          <ConsoleOutput>Not simplified (12): ((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog)|(!anesthesia&amp;!adaptive_imaging&amp;moulding&amp;move_by_patlog)|(!anesthesia&amp;adaptive_imaging&amp;move_by_patlog))
Simplified     (1): ((move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:08:59</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.01ms</Message>
                          <ConsoleOutput>Not simplified (12): ((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog)|(!anesthesia&amp;!adaptive_imaging&amp;moulding&amp;move_by_patlog)|(!anesthesia&amp;adaptive_imaging&amp;move_by_patlog))
Simplified     (1): ((move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:58:04</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.01ms</Message>
                          <ConsoleOutput>Not simplified (12): ((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog)|(!anesthesia&amp;!adaptive_imaging&amp;moulding&amp;move_by_patlog)|(!anesthesia&amp;adaptive_imaging&amp;move_by_patlog))
Simplified     (1): ((move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T13:05:10</TestDate>
                          <Status>Failure</Status>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Connection refused</Message>
                          <StackTrace>  at Mono.Remoting.Channels.Unix.HostConnectionPool.CreateConnection () [0x0002a] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:265 
  at Mono.Remoting.Channels.Unix.HostConnectionPool.GetConnection () [0x000bb] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:249 
  at Mono.Remoting.Channels.Unix.UnixConnectionPool.GetConnection (System.String path) [0x00049] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:104 
  at Mono.Remoting.Channels.Unix.UnixClientTransportSink.ProcessMessage (IMessage msg, ITransportHeaders requestHeaders, System.IO.Stream requestStream, ITransportHeaders&amp; responseHeaders, System.IO.Stream&amp; responseStream) [0x00025] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixClientTransportSink.cs:171 
  at System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage (IMessage msg) [0x0006c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Runtime.Remoting/System.Runtime.Remoting.Channels/BinaryClientFormatterSink.cs:157 </StackTrace>
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                    <TestRecord Name="TestCase(&quot;anesthesia&quot;)">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:23:42</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:32:47</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:34:38</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.01ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:35:19</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.02ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:36:20</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:37:20</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:40:09</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:01</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:41</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:43:12</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00021] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:40 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:44:49</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>anesthesia
((anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:45:16</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>anesthesia
((anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:47:17</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>anesthesia
((anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:48:56</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((anesthesia))
((anesthesia))
Simplified: False
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:46:45</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((anesthesia))
Simplified (1): False
Simplified (1): False
((anesthesia))
((anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:49:03</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (1): ((anesthesia))
Simplified     (1): ((anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:02:43</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (1): ((anesthesia))
Simplified     (1): ((anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:06:02</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (1): ((anesthesia))
Simplified     (1): ((anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:08:59</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (1): ((anesthesia))
Simplified     (1): ((anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:58:04</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (1): ((anesthesia))
Simplified     (1): ((anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                    <TestRecord Name="TestCase(&quot;!(anesthesia)&quot;)">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:23:42</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:32:47</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:34:38</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.ParsedNot.Transform () [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:61 
  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__48 (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__47 (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:35:19</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>DomPropSimplify.ParserException : Expected whitespace or comment or [a-zA-Z] at line 1 col 2.</Message>
                          <StackTrace>  at DomPropSimplify.FormulaParser.DoThrow (Int32 index, System.String format, System.Object[] args) [0x0004a] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:440 
  at DomPropSimplify.FormulaParser.DoParseFile (System.String input, System.String file) [0x00086] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:352 
  at DomPropSimplify.FormulaParser.Parse (System.String input) [0x00004] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:61 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:37 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:36:20</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:37:20</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:40:09</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:01</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:41</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:43:12</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00021] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:40 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:43:17</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00021] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:40 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:43:52</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00027] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:41 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput>!(anesthesia)
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:44:43</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.06ms</Message>
                          <ConsoleOutput>!(anesthesia)
((!anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:44:49</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>!(anesthesia)
((!anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:45:16</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>!(anesthesia)
((!anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:47:17</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>!(anesthesia)
((!anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:48:56</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!anesthesia))
((!anesthesia))
Simplified: False
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:46:45</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!anesthesia))
Simplified (1): False
Simplified (1): False
((!anesthesia))
((!anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:49:03</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (1): ((!anesthesia))
Simplified     (1): ((!anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:00:55</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.11ms</Message>
                          <ConsoleOutput>Not simplified (1): ((!anesthesia))
Simplified     (1): ((!anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:02:43</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (1): ((!anesthesia))
Simplified     (1): ((!anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:06:02</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (1): ((!anesthesia))
Simplified     (1): ((!anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:08:59</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (1): ((!anesthesia))
Simplified     (1): ((!anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:58:04</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (1): ((!anesthesia))
Simplified     (1): ((!anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T13:03:07</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.18ms</Message>
                          <ConsoleOutput>(mr) =&gt; (!ct)
(ct) =&gt; (!mr)
(gtr) =&gt; (!fbr)
(fbr) =&gt; (!gtr)
(anesthesia) =&gt; (move_by_patlog)
(anesthesia) =&gt; (!ct)
(anesthesia) =&gt; (gtr)
(anesthesia) =&gt; (!fbr)
(anesthesia) =&gt; (!moulding)
(anesthesia) =&gt; (!adaptive_imaging)
(anesthesia) =&gt; (!outpatient)
(moulding) =&gt; (ct)
(moulding) =&gt; (!mr)
(moulding) =&gt; (!gtr)
(moulding) =&gt; (!fbr)
(moulding) =&gt; (!anesthesia)
(moulding) =&gt; (!adaptive_imaging)
(moulding) =&gt; (!outpatient)
(adaptive_imaging) =&gt; (!gtr)
(adaptive_imaging) =&gt; (!fbr)
(adaptive_imaging) =&gt; (!anesthesia)
(adaptive_imaging) =&gt; (!moulding)
(adaptive_imaging) =&gt; (!outpatient)
(outpatient) =&gt; (!move_by_patlog)
(outpatient) =&gt; (!gtr)
(outpatient) =&gt; (!fbr)
(outpatient) =&gt; (!anesthesia)
(outpatient) =&gt; (!moulding)
(outpatient) =&gt; (!adaptive_imaging)
(treatment) =&gt; (!moulding)
(treatment) =&gt; (!anesthesia)
(treatment) =&gt; (!adaptive_imaging)
(treatment) =&gt; (!outpatient)
(!ct) =&gt; (!mr)
(!mr) =&gt; (!ct)
(!fbr) =&gt; (!gtr)
(!gtr) =&gt; (!fbr)
(move_by_patlog) =&gt; (!anesthesia)
(!ct) =&gt; (!anesthesia)
(gtr) =&gt; (!anesthesia)
(!fbr) =&gt; (!anesthesia)
(!moulding) =&gt; (!anesthesia)
(!adaptive_imaging) =&gt; (!anesthesia)
(!outpatient) =&gt; (!anesthesia)
(ct) =&gt; (!moulding)
(!mr) =&gt; (!moulding)
(!gtr) =&gt; (!moulding)
(!fbr) =&gt; (!moulding)
(!anesthesia) =&gt; (!moulding)
(!adaptive_imaging) =&gt; (!moulding)
(!outpatient) =&gt; (!moulding)
(!gtr) =&gt; (!adaptive_imaging)
(!fbr) =&gt; (!adaptive_imaging)
(!anesthesia) =&gt; (!adaptive_imaging)
(!moulding) =&gt; (!adaptive_imaging)
(!outpatient) =&gt; (!adaptive_imaging)
(!move_by_patlog) =&gt; (!outpatient)
(!gtr) =&gt; (!outpatient)
(!fbr) =&gt; (!outpatient)
(!anesthesia) =&gt; (!outpatient)
(!moulding) =&gt; (!outpatient)
(!adaptive_imaging) =&gt; (!outpatient)
(!moulding) =&gt; (!treatment)
(!anesthesia) =&gt; (!treatment)
(!adaptive_imaging) =&gt; (!treatment)
(!outpatient) =&gt; (!treatment)
Not simplified (1): ((!anesthesia))
Simplified     (1): ((!anesthesia))
Simplified hr  (1): ((!anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                    <TestRecord Name="TestCase(&quot;!(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient) &amp; move_by_patlog&quot;)">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:23:42</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:32:47</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.01ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:34:38</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.ParsedNot.Transform () [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:61 
  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__48 (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__47 (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:35:19</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>DomPropSimplify.ParserException : Expected whitespace or comment or [a-zA-Z] at line 1 col 2.</Message>
                          <StackTrace>  at DomPropSimplify.FormulaParser.DoThrow (Int32 index, System.String format, System.Object[] args) [0x0004a] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:440 
  at DomPropSimplify.FormulaParser.DoParseFile (System.String input, System.String file) [0x00086] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:352 
  at DomPropSimplify.FormulaParser.Parse (System.String input) [0x00004] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:61 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:37 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:36:20</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:37:20</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.01ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:40:09</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.01ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:01</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:41</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:43:12</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:44:49</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>!(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient) &amp; move_by_patlog
((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:45:16</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>!(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient) &amp; move_by_patlog
((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:47:17</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>!(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient) &amp; move_by_patlog
((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:48:56</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog))
((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog))
Simplified: False
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:29:57</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.07ms</Message>
                          <ConsoleOutput>((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog))
Simplified (4): False
Simplified (4): False
((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog))
((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:46:45</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog))
Simplified (4): False
Simplified (4): False
((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog))
((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:49:03</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (4): ((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog))
Simplified     (4): ((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:00:22</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.11ms</Message>
                          <ConsoleOutput>Not simplified (4): ((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog))
Simplified     (1): ((move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:02:43</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (4): ((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog))
Simplified     (2): ((!outpatient&amp;move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:06:02</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (4): ((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog))
Simplified     (2): ((!outpatient&amp;move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:08:59</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (4): ((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog))
Simplified     (2): ((!outpatient&amp;move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:58:04</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (4): ((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog))
Simplified     (2): ((!outpatient&amp;move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:59:33</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.20ms</Message>
                          <ConsoleOutput>Not simplified (4): ((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog))
Simplified     (1): ((move_by_patlog))
Simplified hr  (2): ((!outpatient&amp;move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T13:00:32</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.19ms</Message>
                          <ConsoleOutput>(mr) =&gt; (!ct)
(ct) =&gt; (!mr)
(gtr) =&gt; (!fbr)
(fbr) =&gt; (!gtr)
(anesthesia) =&gt; (move_by_patlog)
(anesthesia) =&gt; (!ct)
(anesthesia) =&gt; (gtr)
(anesthesia) =&gt; (!fbr)
(anesthesia) =&gt; (!moulding)
(anesthesia) =&gt; (!adaptive_imaging)
(anesthesia) =&gt; (!outpatient)
(moulding) =&gt; (ct)
(moulding) =&gt; (!mr)
(moulding) =&gt; (!gtr)
(moulding) =&gt; (!fbr)
(moulding) =&gt; (!anesthesia)
(moulding) =&gt; (!adaptive_imaging)
(moulding) =&gt; (!outpatient)
(adaptive_imaging) =&gt; (!gtr)
(adaptive_imaging) =&gt; (!fbr)
(adaptive_imaging) =&gt; (!anesthesia)
(adaptive_imaging) =&gt; (!moulding)
(adaptive_imaging) =&gt; (!outpatient)
(outpatient) =&gt; (!move_by_patlog)
(outpatient) =&gt; (!gtr)
(outpatient) =&gt; (!fbr)
(outpatient) =&gt; (!anesthesia)
(outpatient) =&gt; (!moulding)
(outpatient) =&gt; (!adaptive_imaging)
(treatment) =&gt; (!moulding)
(treatment) =&gt; (!anesthesia)
(treatment) =&gt; (!adaptive_imaging)
(treatment) =&gt; (!outpatient)
(!ct) =&gt; (!mr)
(!mr) =&gt; (!ct)
(!fbr) =&gt; (!gtr)
(!gtr) =&gt; (!fbr)
(move_by_patlog) =&gt; (!anesthesia)
(!ct) =&gt; (!anesthesia)
(gtr) =&gt; (!anesthesia)
(!fbr) =&gt; (!anesthesia)
(!moulding) =&gt; (!anesthesia)
(!adaptive_imaging) =&gt; (!anesthesia)
(!outpatient) =&gt; (!anesthesia)
(ct) =&gt; (!moulding)
(!mr) =&gt; (!moulding)
(!gtr) =&gt; (!moulding)
(!fbr) =&gt; (!moulding)
(!anesthesia) =&gt; (!moulding)
(!adaptive_imaging) =&gt; (!moulding)
(!outpatient) =&gt; (!moulding)
(!gtr) =&gt; (!adaptive_imaging)
(!fbr) =&gt; (!adaptive_imaging)
(!anesthesia) =&gt; (!adaptive_imaging)
(!moulding) =&gt; (!adaptive_imaging)
(!outpatient) =&gt; (!adaptive_imaging)
(!move_by_patlog) =&gt; (!outpatient)
(!gtr) =&gt; (!outpatient)
(!fbr) =&gt; (!outpatient)
(!anesthesia) =&gt; (!outpatient)
(!moulding) =&gt; (!outpatient)
(!adaptive_imaging) =&gt; (!outpatient)
(!moulding) =&gt; (!treatment)
(!anesthesia) =&gt; (!treatment)
(!adaptive_imaging) =&gt; (!treatment)
(!outpatient) =&gt; (!treatment)
Not simplified (4): ((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog))
Simplified     (1): ((move_by_patlog))
Simplified hr  (2): ((!outpatient&amp;move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T13:00:37</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.19ms</Message>
                          <ConsoleOutput>(mr) =&gt; (!ct)
(ct) =&gt; (!mr)
(gtr) =&gt; (!fbr)
(fbr) =&gt; (!gtr)
(anesthesia) =&gt; (move_by_patlog)
(anesthesia) =&gt; (!ct)
(anesthesia) =&gt; (gtr)
(anesthesia) =&gt; (!fbr)
(anesthesia) =&gt; (!moulding)
(anesthesia) =&gt; (!adaptive_imaging)
(anesthesia) =&gt; (!outpatient)
(moulding) =&gt; (ct)
(moulding) =&gt; (!mr)
(moulding) =&gt; (!gtr)
(moulding) =&gt; (!fbr)
(moulding) =&gt; (!anesthesia)
(moulding) =&gt; (!adaptive_imaging)
(moulding) =&gt; (!outpatient)
(adaptive_imaging) =&gt; (!gtr)
(adaptive_imaging) =&gt; (!fbr)
(adaptive_imaging) =&gt; (!anesthesia)
(adaptive_imaging) =&gt; (!moulding)
(adaptive_imaging) =&gt; (!outpatient)
(outpatient) =&gt; (!move_by_patlog)
(outpatient) =&gt; (!gtr)
(outpatient) =&gt; (!fbr)
(outpatient) =&gt; (!anesthesia)
(outpatient) =&gt; (!moulding)
(outpatient) =&gt; (!adaptive_imaging)
(treatment) =&gt; (!moulding)
(treatment) =&gt; (!anesthesia)
(treatment) =&gt; (!adaptive_imaging)
(treatment) =&gt; (!outpatient)
(!ct) =&gt; (!mr)
(!mr) =&gt; (!ct)
(!fbr) =&gt; (!gtr)
(!gtr) =&gt; (!fbr)
(move_by_patlog) =&gt; (!anesthesia)
(!ct) =&gt; (!anesthesia)
(gtr) =&gt; (!anesthesia)
(!fbr) =&gt; (!anesthesia)
(!moulding) =&gt; (!anesthesia)
(!adaptive_imaging) =&gt; (!anesthesia)
(!outpatient) =&gt; (!anesthesia)
(ct) =&gt; (!moulding)
(!mr) =&gt; (!moulding)
(!gtr) =&gt; (!moulding)
(!fbr) =&gt; (!moulding)
(!anesthesia) =&gt; (!moulding)
(!adaptive_imaging) =&gt; (!moulding)
(!outpatient) =&gt; (!moulding)
(!gtr) =&gt; (!adaptive_imaging)
(!fbr) =&gt; (!adaptive_imaging)
(!anesthesia) =&gt; (!adaptive_imaging)
(!moulding) =&gt; (!adaptive_imaging)
(!outpatient) =&gt; (!adaptive_imaging)
(!move_by_patlog) =&gt; (!outpatient)
(!gtr) =&gt; (!outpatient)
(!fbr) =&gt; (!outpatient)
(!anesthesia) =&gt; (!outpatient)
(!moulding) =&gt; (!outpatient)
(!adaptive_imaging) =&gt; (!outpatient)
(!moulding) =&gt; (!treatment)
(!anesthesia) =&gt; (!treatment)
(!adaptive_imaging) =&gt; (!treatment)
(!outpatient) =&gt; (!treatment)
Not simplified (4): ((!adaptive_imaging&amp;!moulding&amp;!outpatient&amp;move_by_patlog))
Simplified     (1): ((move_by_patlog))
Simplified hr  (2): ((!outpatient&amp;move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                    <TestRecord Name="TestCase(&quot;!(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient)&quot;)">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:23:42</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:32:47</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:34:38</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.ParsedNot.Transform () [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:61 
  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__48 (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__47 (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:35:19</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>DomPropSimplify.ParserException : Expected whitespace or comment or [a-zA-Z] at line 1 col 2.</Message>
                          <StackTrace>  at DomPropSimplify.FormulaParser.DoThrow (Int32 index, System.String format, System.Object[] args) [0x0004a] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:440 
  at DomPropSimplify.FormulaParser.DoParseFile (System.String input, System.String file) [0x00086] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:352 
  at DomPropSimplify.FormulaParser.Parse (System.String input) [0x00004] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:61 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:37 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:36:20</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:37:20</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:40:09</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:01</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:41</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:43:12</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!adaptive_imaging&amp;!moulding&amp;!outpatient))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:44:49</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>!(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient)
((!adaptive_imaging&amp;!moulding&amp;!outpatient))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:45:16</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>!(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient)
((!adaptive_imaging&amp;!moulding&amp;!outpatient))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:47:17</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>!(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient)
((!adaptive_imaging&amp;!moulding&amp;!outpatient))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:48:56</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!adaptive_imaging&amp;!moulding&amp;!outpatient))
((!adaptive_imaging&amp;!moulding&amp;!outpatient))
Simplified: False
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:30:00</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.06ms</Message>
                          <ConsoleOutput>((!adaptive_imaging&amp;!moulding&amp;!outpatient))
Simplified (3): False
Simplified (3): False
((!adaptive_imaging&amp;!moulding&amp;!outpatient))
((!adaptive_imaging&amp;!moulding&amp;!outpatient))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:46:45</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!adaptive_imaging&amp;!moulding&amp;!outpatient))
Simplified (3): False
Simplified (3): False
((!adaptive_imaging&amp;!moulding&amp;!outpatient))
((!adaptive_imaging&amp;!moulding&amp;!outpatient))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:49:03</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (3): ((!adaptive_imaging&amp;!moulding&amp;!outpatient))
Simplified     (3): ((!adaptive_imaging&amp;!moulding&amp;!outpatient))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:00:25</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.11ms</Message>
                          <ConsoleOutput>Not simplified (3): ((!adaptive_imaging&amp;!moulding&amp;!outpatient))
Simplified     (1): ((!outpatient))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:02:43</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (3): ((!adaptive_imaging&amp;!moulding&amp;!outpatient))
Simplified     (1): ((!outpatient))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:06:02</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (3): ((!adaptive_imaging&amp;!moulding&amp;!outpatient))
Simplified     (1): ((!outpatient))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:08:59</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (3): ((!adaptive_imaging&amp;!moulding&amp;!outpatient))
Simplified     (1): ((!outpatient))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:58:04</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (3): ((!adaptive_imaging&amp;!moulding&amp;!outpatient))
Simplified     (1): ((!outpatient))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T13:00:35</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.16ms</Message>
                          <ConsoleOutput>(mr) =&gt; (!ct)
(ct) =&gt; (!mr)
(gtr) =&gt; (!fbr)
(fbr) =&gt; (!gtr)
(anesthesia) =&gt; (move_by_patlog)
(anesthesia) =&gt; (!ct)
(anesthesia) =&gt; (gtr)
(anesthesia) =&gt; (!fbr)
(anesthesia) =&gt; (!moulding)
(anesthesia) =&gt; (!adaptive_imaging)
(anesthesia) =&gt; (!outpatient)
(moulding) =&gt; (ct)
(moulding) =&gt; (!mr)
(moulding) =&gt; (!gtr)
(moulding) =&gt; (!fbr)
(moulding) =&gt; (!anesthesia)
(moulding) =&gt; (!adaptive_imaging)
(moulding) =&gt; (!outpatient)
(adaptive_imaging) =&gt; (!gtr)
(adaptive_imaging) =&gt; (!fbr)
(adaptive_imaging) =&gt; (!anesthesia)
(adaptive_imaging) =&gt; (!moulding)
(adaptive_imaging) =&gt; (!outpatient)
(outpatient) =&gt; (!move_by_patlog)
(outpatient) =&gt; (!gtr)
(outpatient) =&gt; (!fbr)
(outpatient) =&gt; (!anesthesia)
(outpatient) =&gt; (!moulding)
(outpatient) =&gt; (!adaptive_imaging)
(treatment) =&gt; (!moulding)
(treatment) =&gt; (!anesthesia)
(treatment) =&gt; (!adaptive_imaging)
(treatment) =&gt; (!outpatient)
(!ct) =&gt; (!mr)
(!mr) =&gt; (!ct)
(!fbr) =&gt; (!gtr)
(!gtr) =&gt; (!fbr)
(move_by_patlog) =&gt; (!anesthesia)
(!ct) =&gt; (!anesthesia)
(gtr) =&gt; (!anesthesia)
(!fbr) =&gt; (!anesthesia)
(!moulding) =&gt; (!anesthesia)
(!adaptive_imaging) =&gt; (!anesthesia)
(!outpatient) =&gt; (!anesthesia)
(ct) =&gt; (!moulding)
(!mr) =&gt; (!moulding)
(!gtr) =&gt; (!moulding)
(!fbr) =&gt; (!moulding)
(!anesthesia) =&gt; (!moulding)
(!adaptive_imaging) =&gt; (!moulding)
(!outpatient) =&gt; (!moulding)
(!gtr) =&gt; (!adaptive_imaging)
(!fbr) =&gt; (!adaptive_imaging)
(!anesthesia) =&gt; (!adaptive_imaging)
(!moulding) =&gt; (!adaptive_imaging)
(!outpatient) =&gt; (!adaptive_imaging)
(!move_by_patlog) =&gt; (!outpatient)
(!gtr) =&gt; (!outpatient)
(!fbr) =&gt; (!outpatient)
(!anesthesia) =&gt; (!outpatient)
(!moulding) =&gt; (!outpatient)
(!adaptive_imaging) =&gt; (!outpatient)
(!moulding) =&gt; (!treatment)
(!anesthesia) =&gt; (!treatment)
(!adaptive_imaging) =&gt; (!treatment)
(!outpatient) =&gt; (!treatment)
Not simplified (3): ((!adaptive_imaging&amp;!moulding&amp;!outpatient))
Simplified     (1): ((!outpatient))
Simplified hr  (1): ((!outpatient))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T13:02:07</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.17ms</Message>
                          <ConsoleOutput>(mr) =&gt; (!ct)
(ct) =&gt; (!mr)
(gtr) =&gt; (!fbr)
(fbr) =&gt; (!gtr)
(anesthesia) =&gt; (move_by_patlog)
(anesthesia) =&gt; (!ct)
(anesthesia) =&gt; (gtr)
(anesthesia) =&gt; (!fbr)
(anesthesia) =&gt; (!moulding)
(anesthesia) =&gt; (!adaptive_imaging)
(anesthesia) =&gt; (!outpatient)
(moulding) =&gt; (ct)
(moulding) =&gt; (!mr)
(moulding) =&gt; (!gtr)
(moulding) =&gt; (!fbr)
(moulding) =&gt; (!anesthesia)
(moulding) =&gt; (!adaptive_imaging)
(moulding) =&gt; (!outpatient)
(adaptive_imaging) =&gt; (!gtr)
(adaptive_imaging) =&gt; (!fbr)
(adaptive_imaging) =&gt; (!anesthesia)
(adaptive_imaging) =&gt; (!moulding)
(adaptive_imaging) =&gt; (!outpatient)
(outpatient) =&gt; (!move_by_patlog)
(outpatient) =&gt; (!gtr)
(outpatient) =&gt; (!fbr)
(outpatient) =&gt; (!anesthesia)
(outpatient) =&gt; (!moulding)
(outpatient) =&gt; (!adaptive_imaging)
(treatment) =&gt; (!moulding)
(treatment) =&gt; (!anesthesia)
(treatment) =&gt; (!adaptive_imaging)
(treatment) =&gt; (!outpatient)
(!ct) =&gt; (!mr)
(!mr) =&gt; (!ct)
(!fbr) =&gt; (!gtr)
(!gtr) =&gt; (!fbr)
(move_by_patlog) =&gt; (!anesthesia)
(!ct) =&gt; (!anesthesia)
(gtr) =&gt; (!anesthesia)
(!fbr) =&gt; (!anesthesia)
(!moulding) =&gt; (!anesthesia)
(!adaptive_imaging) =&gt; (!anesthesia)
(!outpatient) =&gt; (!anesthesia)
(ct) =&gt; (!moulding)
(!mr) =&gt; (!moulding)
(!gtr) =&gt; (!moulding)
(!fbr) =&gt; (!moulding)
(!anesthesia) =&gt; (!moulding)
(!adaptive_imaging) =&gt; (!moulding)
(!outpatient) =&gt; (!moulding)
(!gtr) =&gt; (!adaptive_imaging)
(!fbr) =&gt; (!adaptive_imaging)
(!anesthesia) =&gt; (!adaptive_imaging)
(!moulding) =&gt; (!adaptive_imaging)
(!outpatient) =&gt; (!adaptive_imaging)
(!move_by_patlog) =&gt; (!outpatient)
(!gtr) =&gt; (!outpatient)
(!fbr) =&gt; (!outpatient)
(!anesthesia) =&gt; (!outpatient)
(!moulding) =&gt; (!outpatient)
(!adaptive_imaging) =&gt; (!outpatient)
(!moulding) =&gt; (!treatment)
(!anesthesia) =&gt; (!treatment)
(!adaptive_imaging) =&gt; (!treatment)
(!outpatient) =&gt; (!treatment)
Not simplified (3): ((!adaptive_imaging&amp;!moulding&amp;!outpatient))
Simplified     (1): ((!outpatient))
Simplified hr  (1): ((!outpatient))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T13:02:11</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.17ms</Message>
                          <ConsoleOutput>(mr) =&gt; (!ct)
(ct) =&gt; (!mr)
(gtr) =&gt; (!fbr)
(fbr) =&gt; (!gtr)
(anesthesia) =&gt; (move_by_patlog)
(anesthesia) =&gt; (!ct)
(anesthesia) =&gt; (gtr)
(anesthesia) =&gt; (!fbr)
(anesthesia) =&gt; (!moulding)
(anesthesia) =&gt; (!adaptive_imaging)
(anesthesia) =&gt; (!outpatient)
(moulding) =&gt; (ct)
(moulding) =&gt; (!mr)
(moulding) =&gt; (!gtr)
(moulding) =&gt; (!fbr)
(moulding) =&gt; (!anesthesia)
(moulding) =&gt; (!adaptive_imaging)
(moulding) =&gt; (!outpatient)
(adaptive_imaging) =&gt; (!gtr)
(adaptive_imaging) =&gt; (!fbr)
(adaptive_imaging) =&gt; (!anesthesia)
(adaptive_imaging) =&gt; (!moulding)
(adaptive_imaging) =&gt; (!outpatient)
(outpatient) =&gt; (!move_by_patlog)
(outpatient) =&gt; (!gtr)
(outpatient) =&gt; (!fbr)
(outpatient) =&gt; (!anesthesia)
(outpatient) =&gt; (!moulding)
(outpatient) =&gt; (!adaptive_imaging)
(treatment) =&gt; (!moulding)
(treatment) =&gt; (!anesthesia)
(treatment) =&gt; (!adaptive_imaging)
(treatment) =&gt; (!outpatient)
(!ct) =&gt; (!mr)
(!mr) =&gt; (!ct)
(!fbr) =&gt; (!gtr)
(!gtr) =&gt; (!fbr)
(move_by_patlog) =&gt; (!anesthesia)
(!ct) =&gt; (!anesthesia)
(gtr) =&gt; (!anesthesia)
(!fbr) =&gt; (!anesthesia)
(!moulding) =&gt; (!anesthesia)
(!adaptive_imaging) =&gt; (!anesthesia)
(!outpatient) =&gt; (!anesthesia)
(ct) =&gt; (!moulding)
(!mr) =&gt; (!moulding)
(!gtr) =&gt; (!moulding)
(!fbr) =&gt; (!moulding)
(!anesthesia) =&gt; (!moulding)
(!adaptive_imaging) =&gt; (!moulding)
(!outpatient) =&gt; (!moulding)
(!gtr) =&gt; (!adaptive_imaging)
(!fbr) =&gt; (!adaptive_imaging)
(!anesthesia) =&gt; (!adaptive_imaging)
(!moulding) =&gt; (!adaptive_imaging)
(!outpatient) =&gt; (!adaptive_imaging)
(!move_by_patlog) =&gt; (!outpatient)
(!gtr) =&gt; (!outpatient)
(!fbr) =&gt; (!outpatient)
(!anesthesia) =&gt; (!outpatient)
(!moulding) =&gt; (!outpatient)
(!adaptive_imaging) =&gt; (!outpatient)
(!moulding) =&gt; (!treatment)
(!anesthesia) =&gt; (!treatment)
(!adaptive_imaging) =&gt; (!treatment)
(!outpatient) =&gt; (!treatment)
Not simplified (3): ((!adaptive_imaging&amp;!moulding&amp;!outpatient))
Simplified     (1): ((!outpatient))
Simplified hr  (1): ((!outpatient))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                    <TestRecord Name="TestCase(&quot;!(adaptive_imaging) &amp; moulding&quot;)">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:23:42</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:32:47</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:34:38</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.ParsedNot.Transform () [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:61 
  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__48 (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__47 (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:35:19</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>DomPropSimplify.ParserException : Expected whitespace or comment or [a-zA-Z] at line 1 col 2.</Message>
                          <StackTrace>  at DomPropSimplify.FormulaParser.DoThrow (Int32 index, System.String format, System.Object[] args) [0x0004a] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:440 
  at DomPropSimplify.FormulaParser.DoParseFile (System.String input, System.String file) [0x00086] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:352 
  at DomPropSimplify.FormulaParser.Parse (System.String input) [0x00004] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:61 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:37 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:36:20</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:37:20</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:40:09</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:01</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:41</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:43:12</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!adaptive_imaging&amp;moulding))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:44:49</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>!(adaptive_imaging) &amp; moulding
((!adaptive_imaging&amp;moulding))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:45:16</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>!(adaptive_imaging) &amp; moulding
((!adaptive_imaging&amp;moulding))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:47:17</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>!(adaptive_imaging) &amp; moulding
((moulding))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:48:56</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!adaptive_imaging&amp;moulding))
((moulding))
Simplified: True
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:30:02</TestDate>
                          <Status>Failure</Status>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Connection refused</Message>
                          <StackTrace>  at Mono.Remoting.Channels.Unix.HostConnectionPool.CreateConnection () [0x0002a] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:265 
  at Mono.Remoting.Channels.Unix.HostConnectionPool.GetConnection () [0x000bb] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:249 
  at Mono.Remoting.Channels.Unix.UnixConnectionPool.GetConnection (System.String path) [0x00049] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:104 
  at Mono.Remoting.Channels.Unix.UnixClientTransportSink.ProcessMessage (IMessage msg, ITransportHeaders requestHeaders, System.IO.Stream requestStream, ITransportHeaders&amp; responseHeaders, System.IO.Stream&amp; responseStream) [0x00025] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixClientTransportSink.cs:171 
  at System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage (IMessage msg) [0x0006c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Runtime.Remoting/System.Runtime.Remoting.Channels/BinaryClientFormatterSink.cs:157 </StackTrace>
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:30:28</TestDate>
                          <Status>Failure</Status>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Connection refused</Message>
                          <StackTrace>  at Mono.Remoting.Channels.Unix.HostConnectionPool.CreateConnection () [0x0002a] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:265 
  at Mono.Remoting.Channels.Unix.HostConnectionPool.GetConnection () [0x000bb] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:249 
  at Mono.Remoting.Channels.Unix.UnixConnectionPool.GetConnection (System.String path) [0x00049] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:104 
  at Mono.Remoting.Channels.Unix.UnixClientTransportSink.ProcessMessage (IMessage msg, ITransportHeaders requestHeaders, System.IO.Stream requestStream, ITransportHeaders&amp; responseHeaders, System.IO.Stream&amp; responseStream) [0x00025] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixClientTransportSink.cs:171 
  at System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage (IMessage msg) [0x0006c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Runtime.Remoting/System.Runtime.Remoting.Channels/BinaryClientFormatterSink.cs:157 </StackTrace>
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:30:49</TestDate>
                          <Status>Failure</Status>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Connection refused</Message>
                          <StackTrace>  at Mono.Remoting.Channels.Unix.HostConnectionPool.CreateConnection () [0x0002a] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:265 
  at Mono.Remoting.Channels.Unix.HostConnectionPool.GetConnection () [0x000bb] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:249 
  at Mono.Remoting.Channels.Unix.UnixConnectionPool.GetConnection (System.String path) [0x00049] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:104 
  at Mono.Remoting.Channels.Unix.UnixClientTransportSink.ProcessMessage (IMessage msg, ITransportHeaders requestHeaders, System.IO.Stream requestStream, ITransportHeaders&amp; responseHeaders, System.IO.Stream&amp; responseStream) [0x00025] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixClientTransportSink.cs:171 
  at System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage (IMessage msg) [0x0006c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Runtime.Remoting/System.Runtime.Remoting.Channels/BinaryClientFormatterSink.cs:157 </StackTrace>
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:32:00</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.09ms</Message>
                          <ConsoleOutput>((!adaptive_imaging&amp;moulding))
Simplified (1): True
((moulding))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:32:24</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.09ms</Message>
                          <ConsoleOutput>((!adaptive_imaging&amp;moulding))
Simplified (1): True
Simplified (2): False
((moulding))
((!adaptive_imaging&amp;moulding))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:33:54</TestDate>
                          <Status>Failure</Status>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Connection refused</Message>
                          <StackTrace>  at Mono.Remoting.Channels.Unix.HostConnectionPool.CreateConnection () [0x0002a] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:265 
  at Mono.Remoting.Channels.Unix.HostConnectionPool.GetConnection () [0x000bb] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:249 
  at Mono.Remoting.Channels.Unix.UnixConnectionPool.GetConnection (System.String path) [0x00049] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:104 
  at Mono.Remoting.Channels.Unix.UnixClientTransportSink.ProcessMessage (IMessage msg, ITransportHeaders requestHeaders, System.IO.Stream requestStream, ITransportHeaders&amp; responseHeaders, System.IO.Stream&amp; responseStream) [0x00025] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixClientTransportSink.cs:171 
  at System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage (IMessage msg) [0x0006c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Runtime.Remoting/System.Runtime.Remoting.Channels/BinaryClientFormatterSink.cs:157 </StackTrace>
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:46:45</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!adaptive_imaging&amp;moulding))
Simplified (1): True
Simplified (2): False
((moulding))
((!adaptive_imaging&amp;moulding))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:49:03</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (2): ((!adaptive_imaging&amp;moulding))
Simplified     (1): ((moulding))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:00:28</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 2.84ms</Message>
                          <ConsoleOutput>Not simplified (2): ((!adaptive_imaging&amp;moulding))
Simplified     (1): ((moulding))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:02:43</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (2): ((!adaptive_imaging&amp;moulding))
Simplified     (2): ((!adaptive_imaging&amp;moulding))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:06:02</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (2): ((!adaptive_imaging&amp;moulding))
Simplified     (2): ((!adaptive_imaging&amp;moulding))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:08:59</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (2): ((!adaptive_imaging&amp;moulding))
Simplified     (1): ((moulding))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:58:04</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (2): ((!adaptive_imaging&amp;moulding))
Simplified     (1): ((moulding))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T13:02:12</TestDate>
                          <Status>Failure</Status>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Object reference not set to an instance of an object</Message>
                          <StackTrace>  at MonoDevelop.NUnit.UnitTestResult.CreateFailure (System.String message, System.Exception ex) [0x00017] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-4.0.12-branch/593d7acb/source/monodevelop/main/src/addins/NUnit/Services/UnitTestResult.cs:67 
  at MonoDevelop.NUnit.NUnitAssemblyTestSuite.RunUnitTest (MonoDevelop.NUnit.UnitTest test, System.String suiteName, System.String pathName, System.String testName, MonoDevelop.NUnit.TestContext testContext) [0x00240] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-4.0.12-branch/593d7acb/source/monodevelop/main/src/addins/NUnit/Services/NUnitAssemblyTestSuite.cs:440 
  at MonoDevelop.NUnit.NUnitTestCase.OnRun (MonoDevelop.NUnit.TestContext testContext) [0x0001b] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-4.0.12-branch/593d7acb/source/monodevelop/main/src/addins/NUnit/Services/NUnitTestCase.cs:55 
  at MonoDevelop.NUnit.UnitTest.Run (MonoDevelop.NUnit.TestContext testContext) [0x00020] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-4.0.12-branch/593d7acb/source/monodevelop/main/src/addins/NUnit/Services/UnitTest.cs:373 </StackTrace>
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T13:02:34</TestDate>
                          <Status>Failure</Status>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Connection refused</Message>
                          <StackTrace>  at Mono.Remoting.Channels.Unix.HostConnectionPool.CreateConnection () [0x0002a] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:265 
  at Mono.Remoting.Channels.Unix.HostConnectionPool.GetConnection () [0x000bb] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:249 
  at Mono.Remoting.Channels.Unix.UnixConnectionPool.GetConnection (System.String path) [0x00049] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:104 
  at Mono.Remoting.Channels.Unix.UnixClientTransportSink.ProcessMessage (IMessage msg, ITransportHeaders requestHeaders, System.IO.Stream requestStream, ITransportHeaders&amp; responseHeaders, System.IO.Stream&amp; responseStream) [0x00025] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixClientTransportSink.cs:171 
  at System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage (IMessage msg) [0x0006c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Runtime.Remoting/System.Runtime.Remoting.Channels/BinaryClientFormatterSink.cs:157 </StackTrace>
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                    <TestRecord Name="TestCase(&quot;(!(anesthesia) &amp; !(ct) &amp; mr) | (anesthesia &amp; mr)&quot;)">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:23:42</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:32:47</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:34:38</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.ParsedNot.Transform () [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:61 
  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__48 (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__47 (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__48 (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__47 (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:35:19</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>DomPropSimplify.ParserException : Expected whitespace or comment or [a-zA-Z] at line 1 col 3.</Message>
                          <StackTrace>  at DomPropSimplify.FormulaParser.DoThrow (Int32 index, System.String format, System.Object[] args) [0x0004a] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:440 
  at DomPropSimplify.FormulaParser.DoParseFile (System.String input, System.String file) [0x00086] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:352 
  at DomPropSimplify.FormulaParser.Parse (System.String input) [0x00004] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:61 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:37 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:36:20</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__4C (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__4B (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:37:20</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:40:09</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:01</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:41</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!anesthesia&amp;!ct&amp;mr)|(anesthesia&amp;mr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:43:12</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!anesthesia&amp;!ct&amp;mr)|(anesthesia&amp;mr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:44:49</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00027] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:42 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput>(!(anesthesia) &amp; !(ct) &amp; mr) | (anesthesia &amp; mr)
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:45:16</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>(!(anesthesia) &amp; !(ct) &amp; mr) | (anesthesia &amp; mr)
((!anesthesia&amp;!ct&amp;mr)|(anesthesia&amp;mr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:47:17</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.02ms</Message>
                          <ConsoleOutput>(!(anesthesia) &amp; !(ct) &amp; mr) | (anesthesia &amp; mr)
((mr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:48:56</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.02ms</Message>
                          <ConsoleOutput>((!anesthesia&amp;!ct&amp;mr)|(anesthesia&amp;mr))
((mr))
Simplified: True
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:46:45</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.02ms</Message>
                          <ConsoleOutput>((!anesthesia&amp;!ct&amp;mr)|(anesthesia&amp;mr))
Simplified (1): True
Simplified (1): True
((mr))
((mr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:49:03</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.02ms</Message>
                          <ConsoleOutput>Not simplified (5): ((!anesthesia&amp;!ct&amp;mr)|(anesthesia&amp;mr))
Simplified     (1): ((mr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:02:43</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (5): ((!anesthesia&amp;!ct&amp;mr)|(anesthesia&amp;mr))
Simplified     (1): ((mr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:06:02</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (5): ((!anesthesia&amp;!ct&amp;mr)|(anesthesia&amp;mr))
Simplified     (1): ((mr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:08:59</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (5): ((!anesthesia&amp;!ct&amp;mr)|(anesthesia&amp;mr))
Simplified     (1): ((mr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:58:04</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (5): ((!anesthesia&amp;!ct&amp;mr)|(anesthesia&amp;mr))
Simplified     (1): ((mr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T13:05:38</TestDate>
                          <Status>Failure</Status>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Connection refused</Message>
                          <StackTrace>  at Mono.Remoting.Channels.Unix.HostConnectionPool.CreateConnection () [0x0002a] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:265 
  at Mono.Remoting.Channels.Unix.HostConnectionPool.GetConnection () [0x000bb] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:249 
  at Mono.Remoting.Channels.Unix.UnixConnectionPool.GetConnection (System.String path) [0x00049] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:104 
  at Mono.Remoting.Channels.Unix.UnixClientTransportSink.ProcessMessage (IMessage msg, ITransportHeaders requestHeaders, System.IO.Stream requestStream, ITransportHeaders&amp; responseHeaders, System.IO.Stream&amp; responseStream) [0x00025] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixClientTransportSink.cs:171 
  at System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage (IMessage msg) [0x0006c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Runtime.Remoting/System.Runtime.Remoting.Channels/BinaryClientFormatterSink.cs:157 </StackTrace>
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T13:06:28</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.09ms</Message>
                          <ConsoleOutput>(mr) =&gt; (!ct)
(ct) =&gt; (!mr)
(gtr) =&gt; (!fbr)
(fbr) =&gt; (!gtr)
(anesthesia) =&gt; (move_by_patlog)
(anesthesia) =&gt; (!ct)
(anesthesia) =&gt; (gtr)
(anesthesia) =&gt; (!fbr)
(anesthesia) =&gt; (!moulding)
(anesthesia) =&gt; (!adaptive_imaging)
(anesthesia) =&gt; (!outpatient)
(moulding) =&gt; (ct)
(moulding) =&gt; (!mr)
(moulding) =&gt; (!gtr)
(moulding) =&gt; (!fbr)
(moulding) =&gt; (!anesthesia)
(moulding) =&gt; (!adaptive_imaging)
(moulding) =&gt; (!outpatient)
(adaptive_imaging) =&gt; (!gtr)
(adaptive_imaging) =&gt; (!fbr)
(adaptive_imaging) =&gt; (!anesthesia)
(adaptive_imaging) =&gt; (!moulding)
(adaptive_imaging) =&gt; (!outpatient)
(outpatient) =&gt; (!move_by_patlog)
(outpatient) =&gt; (!gtr)
(outpatient) =&gt; (!fbr)
(outpatient) =&gt; (!anesthesia)
(outpatient) =&gt; (!moulding)
(outpatient) =&gt; (!adaptive_imaging)
(treatment) =&gt; (!moulding)
(treatment) =&gt; (!anesthesia)
(treatment) =&gt; (!adaptive_imaging)
(treatment) =&gt; (!outpatient)
(!ct) =&gt; (!mr)
(!mr) =&gt; (!ct)
(!fbr) =&gt; (!gtr)
(!gtr) =&gt; (!fbr)
(move_by_patlog) =&gt; (!anesthesia)
(!ct) =&gt; (!anesthesia)
(gtr) =&gt; (!anesthesia)
(!fbr) =&gt; (!anesthesia)
(!moulding) =&gt; (!anesthesia)
(!adaptive_imaging) =&gt; (!anesthesia)
(!outpatient) =&gt; (!anesthesia)
(ct) =&gt; (!moulding)
(!mr) =&gt; (!moulding)
(!gtr) =&gt; (!moulding)
(!fbr) =&gt; (!moulding)
(!anesthesia) =&gt; (!moulding)
(!adaptive_imaging) =&gt; (!moulding)
(!outpatient) =&gt; (!moulding)
(!gtr) =&gt; (!adaptive_imaging)
(!fbr) =&gt; (!adaptive_imaging)
(!anesthesia) =&gt; (!adaptive_imaging)
(!moulding) =&gt; (!adaptive_imaging)
(!outpatient) =&gt; (!adaptive_imaging)
(!move_by_patlog) =&gt; (!outpatient)
(!gtr) =&gt; (!outpatient)
(!fbr) =&gt; (!outpatient)
(!anesthesia) =&gt; (!outpatient)
(!moulding) =&gt; (!outpatient)
(!adaptive_imaging) =&gt; (!outpatient)
(!moulding) =&gt; (!treatment)
(!anesthesia) =&gt; (!treatment)
(!adaptive_imaging) =&gt; (!treatment)
(!outpatient) =&gt; (!treatment)
Not simplified (5): ((!anesthesia&amp;!ct&amp;mr)|(anesthesia&amp;mr))
Simplified     (1): ((mr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                    <TestRecord Name="TestCase(&quot;!(ct) &amp; !(mr) &amp; gtr&quot;)">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:23:42</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:32:47</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:34:38</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.ParsedNot.Transform () [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:61 
  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__48 (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__47 (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:35:19</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>DomPropSimplify.ParserException : Expected whitespace or comment or [a-zA-Z] at line 1 col 2.</Message>
                          <StackTrace>  at DomPropSimplify.FormulaParser.DoThrow (Int32 index, System.String format, System.Object[] args) [0x0004a] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:440 
  at DomPropSimplify.FormulaParser.DoParseFile (System.String input, System.String file) [0x00086] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:352 
  at DomPropSimplify.FormulaParser.Parse (System.String input) [0x00004] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:61 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:37 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:36:20</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:37:20</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:40:09</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:01</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:41</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:43:12</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!ct&amp;!mr&amp;gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:44:49</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>!(ct) &amp; !(mr) &amp; gtr
((!ct&amp;!mr&amp;gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:45:16</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>!(ct) &amp; !(mr) &amp; gtr
((!ct&amp;!mr&amp;gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:47:17</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>!(ct) &amp; !(mr) &amp; gtr
((!ct&amp;!mr&amp;gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:48:56</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!ct&amp;!mr&amp;gtr))
((!ct&amp;!mr&amp;gtr))
Simplified: False
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:46:45</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!ct&amp;!mr&amp;gtr))
Simplified (3): False
Simplified (3): False
((!ct&amp;!mr&amp;gtr))
((!ct&amp;!mr&amp;gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:49:03</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (3): ((!ct&amp;!mr&amp;gtr))
Simplified     (3): ((!ct&amp;!mr&amp;gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:02:43</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (3): ((!ct&amp;!mr&amp;gtr))
Simplified     (2): ((!ct&amp;gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:06:02</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (3): ((!ct&amp;!mr&amp;gtr))
Simplified     (2): ((!ct&amp;gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:08:59</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (3): ((!ct&amp;!mr&amp;gtr))
Simplified     (2): ((!ct&amp;gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:58:04</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (3): ((!ct&amp;!mr&amp;gtr))
Simplified     (2): ((!ct&amp;gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T13:03:10</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 10.15ms</Message>
                          <ConsoleOutput>(mr) =&gt; (!ct)
(ct) =&gt; (!mr)
(gtr) =&gt; (!fbr)
(fbr) =&gt; (!gtr)
(anesthesia) =&gt; (move_by_patlog)
(anesthesia) =&gt; (!ct)
(anesthesia) =&gt; (gtr)
(anesthesia) =&gt; (!fbr)
(anesthesia) =&gt; (!moulding)
(anesthesia) =&gt; (!adaptive_imaging)
(anesthesia) =&gt; (!outpatient)
(moulding) =&gt; (ct)
(moulding) =&gt; (!mr)
(moulding) =&gt; (!gtr)
(moulding) =&gt; (!fbr)
(moulding) =&gt; (!anesthesia)
(moulding) =&gt; (!adaptive_imaging)
(moulding) =&gt; (!outpatient)
(adaptive_imaging) =&gt; (!gtr)
(adaptive_imaging) =&gt; (!fbr)
(adaptive_imaging) =&gt; (!anesthesia)
(adaptive_imaging) =&gt; (!moulding)
(adaptive_imaging) =&gt; (!outpatient)
(outpatient) =&gt; (!move_by_patlog)
(outpatient) =&gt; (!gtr)
(outpatient) =&gt; (!fbr)
(outpatient) =&gt; (!anesthesia)
(outpatient) =&gt; (!moulding)
(outpatient) =&gt; (!adaptive_imaging)
(treatment) =&gt; (!moulding)
(treatment) =&gt; (!anesthesia)
(treatment) =&gt; (!adaptive_imaging)
(treatment) =&gt; (!outpatient)
(!ct) =&gt; (!mr)
(!mr) =&gt; (!ct)
(!fbr) =&gt; (!gtr)
(!gtr) =&gt; (!fbr)
(move_by_patlog) =&gt; (!anesthesia)
(!ct) =&gt; (!anesthesia)
(gtr) =&gt; (!anesthesia)
(!fbr) =&gt; (!anesthesia)
(!moulding) =&gt; (!anesthesia)
(!adaptive_imaging) =&gt; (!anesthesia)
(!outpatient) =&gt; (!anesthesia)
(ct) =&gt; (!moulding)
(!mr) =&gt; (!moulding)
(!gtr) =&gt; (!moulding)
(!fbr) =&gt; (!moulding)
(!anesthesia) =&gt; (!moulding)
(!adaptive_imaging) =&gt; (!moulding)
(!outpatient) =&gt; (!moulding)
(!gtr) =&gt; (!adaptive_imaging)
(!fbr) =&gt; (!adaptive_imaging)
(!anesthesia) =&gt; (!adaptive_imaging)
(!moulding) =&gt; (!adaptive_imaging)
(!outpatient) =&gt; (!adaptive_imaging)
(!move_by_patlog) =&gt; (!outpatient)
(!gtr) =&gt; (!outpatient)
(!fbr) =&gt; (!outpatient)
(!anesthesia) =&gt; (!outpatient)
(!moulding) =&gt; (!outpatient)
(!adaptive_imaging) =&gt; (!outpatient)
(!moulding) =&gt; (!treatment)
(!anesthesia) =&gt; (!treatment)
(!adaptive_imaging) =&gt; (!treatment)
(!outpatient) =&gt; (!treatment)
Not simplified (3): ((!ct&amp;!mr&amp;gtr))
Simplified     (2): ((!ct&amp;gtr))
Simplified hr  (2): ((!ct&amp;gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                    <TestRecord Name="TestCase(&quot;!(anesthesia) &amp; ct&quot;)">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:23:42</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:32:47</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:34:38</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.ParsedNot.Transform () [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:61 
  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__48 (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__47 (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:35:19</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>DomPropSimplify.ParserException : Expected whitespace or comment or [a-zA-Z] at line 1 col 2.</Message>
                          <StackTrace>  at DomPropSimplify.FormulaParser.DoThrow (Int32 index, System.String format, System.Object[] args) [0x0004a] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:440 
  at DomPropSimplify.FormulaParser.DoParseFile (System.String input, System.String file) [0x00086] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:352 
  at DomPropSimplify.FormulaParser.Parse (System.String input) [0x00004] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:61 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:37 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:36:20</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:37:20</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:40:09</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:01</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:41</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:43:12</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!anesthesia&amp;ct))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:44:49</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>!(anesthesia) &amp; ct
((!anesthesia&amp;ct))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:45:16</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>!(anesthesia) &amp; ct
((!anesthesia&amp;ct))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:47:17</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>!(anesthesia) &amp; ct
((!anesthesia&amp;ct))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:48:56</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!anesthesia&amp;ct))
((!anesthesia&amp;ct))
Simplified: False
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:46:45</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!anesthesia&amp;ct))
Simplified (2): False
Simplified (2): False
((!anesthesia&amp;ct))
((!anesthesia&amp;ct))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:49:03</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (2): ((!anesthesia&amp;ct))
Simplified     (2): ((!anesthesia&amp;ct))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:00:52</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.36ms</Message>
                          <ConsoleOutput>Not simplified (2): ((!anesthesia&amp;ct))
Simplified     (1): ((ct))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:02:43</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (2): ((!anesthesia&amp;ct))
Simplified     (2): ((!anesthesia&amp;ct))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:06:02</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (2): ((!anesthesia&amp;ct))
Simplified     (2): ((!anesthesia&amp;ct))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:08:59</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (2): ((!anesthesia&amp;ct))
Simplified     (2): ((!anesthesia&amp;ct))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:58:04</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (2): ((!anesthesia&amp;ct))
Simplified     (2): ((!anesthesia&amp;ct))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T13:03:01</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 1.22ms</Message>
                          <ConsoleOutput>(mr) =&gt; (!ct)
(ct) =&gt; (!mr)
(gtr) =&gt; (!fbr)
(fbr) =&gt; (!gtr)
(anesthesia) =&gt; (move_by_patlog)
(anesthesia) =&gt; (!ct)
(anesthesia) =&gt; (gtr)
(anesthesia) =&gt; (!fbr)
(anesthesia) =&gt; (!moulding)
(anesthesia) =&gt; (!adaptive_imaging)
(anesthesia) =&gt; (!outpatient)
(moulding) =&gt; (ct)
(moulding) =&gt; (!mr)
(moulding) =&gt; (!gtr)
(moulding) =&gt; (!fbr)
(moulding) =&gt; (!anesthesia)
(moulding) =&gt; (!adaptive_imaging)
(moulding) =&gt; (!outpatient)
(adaptive_imaging) =&gt; (!gtr)
(adaptive_imaging) =&gt; (!fbr)
(adaptive_imaging) =&gt; (!anesthesia)
(adaptive_imaging) =&gt; (!moulding)
(adaptive_imaging) =&gt; (!outpatient)
(outpatient) =&gt; (!move_by_patlog)
(outpatient) =&gt; (!gtr)
(outpatient) =&gt; (!fbr)
(outpatient) =&gt; (!anesthesia)
(outpatient) =&gt; (!moulding)
(outpatient) =&gt; (!adaptive_imaging)
(treatment) =&gt; (!moulding)
(treatment) =&gt; (!anesthesia)
(treatment) =&gt; (!adaptive_imaging)
(treatment) =&gt; (!outpatient)
(!ct) =&gt; (!mr)
(!mr) =&gt; (!ct)
(!fbr) =&gt; (!gtr)
(!gtr) =&gt; (!fbr)
(move_by_patlog) =&gt; (!anesthesia)
(!ct) =&gt; (!anesthesia)
(gtr) =&gt; (!anesthesia)
(!fbr) =&gt; (!anesthesia)
(!moulding) =&gt; (!anesthesia)
(!adaptive_imaging) =&gt; (!anesthesia)
(!outpatient) =&gt; (!anesthesia)
(ct) =&gt; (!moulding)
(!mr) =&gt; (!moulding)
(!gtr) =&gt; (!moulding)
(!fbr) =&gt; (!moulding)
(!anesthesia) =&gt; (!moulding)
(!adaptive_imaging) =&gt; (!moulding)
(!outpatient) =&gt; (!moulding)
(!gtr) =&gt; (!adaptive_imaging)
(!fbr) =&gt; (!adaptive_imaging)
(!anesthesia) =&gt; (!adaptive_imaging)
(!moulding) =&gt; (!adaptive_imaging)
(!outpatient) =&gt; (!adaptive_imaging)
(!move_by_patlog) =&gt; (!outpatient)
(!gtr) =&gt; (!outpatient)
(!fbr) =&gt; (!outpatient)
(!anesthesia) =&gt; (!outpatient)
(!moulding) =&gt; (!outpatient)
(!adaptive_imaging) =&gt; (!outpatient)
(!moulding) =&gt; (!treatment)
(!anesthesia) =&gt; (!treatment)
(!adaptive_imaging) =&gt; (!treatment)
(!outpatient) =&gt; (!treatment)
Not simplified (2): ((!anesthesia&amp;ct))
Simplified     (1): ((ct))
Simplified hr  (2): ((!anesthesia&amp;ct))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                    <TestRecord Name="TestCase(&quot;!(anesthesia) &amp; !(ct) &amp; !(mr) &amp; !(gtr)&quot;)">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:23:42</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:32:47</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:34:38</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.ParsedNot.Transform () [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:61 
  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__48 (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__47 (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:35:19</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>DomPropSimplify.ParserException : Expected whitespace or comment or [a-zA-Z] at line 1 col 2.</Message>
                          <StackTrace>  at DomPropSimplify.FormulaParser.DoThrow (Int32 index, System.String format, System.Object[] args) [0x0004a] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:440 
  at DomPropSimplify.FormulaParser.DoParseFile (System.String input, System.String file) [0x00086] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:352 
  at DomPropSimplify.FormulaParser.Parse (System.String input) [0x00004] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:61 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:37 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:36:20</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:37:20</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:40:09</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:01</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:41</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:43:12</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!anesthesia&amp;!ct&amp;!mr&amp;!gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:44:49</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>!(anesthesia) &amp; !(ct) &amp; !(mr) &amp; !(gtr)
((!anesthesia&amp;!ct&amp;!mr&amp;!gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:45:16</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>!(anesthesia) &amp; !(ct) &amp; !(mr) &amp; !(gtr)
((!anesthesia&amp;!ct&amp;!mr&amp;!gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:47:17</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>!(anesthesia) &amp; !(ct) &amp; !(mr) &amp; !(gtr)
((!anesthesia&amp;!ct&amp;!mr&amp;!gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:48:56</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!anesthesia&amp;!ct&amp;!mr&amp;!gtr))
((!anesthesia&amp;!ct&amp;!mr&amp;!gtr))
Simplified: False
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:46:45</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!anesthesia&amp;!ct&amp;!mr&amp;!gtr))
Simplified (4): False
Simplified (4): False
((!anesthesia&amp;!ct&amp;!mr&amp;!gtr))
((!anesthesia&amp;!ct&amp;!mr&amp;!gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:49:03</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (4): ((!anesthesia&amp;!ct&amp;!mr&amp;!gtr))
Simplified     (4): ((!anesthesia&amp;!ct&amp;!mr&amp;!gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:00:41</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.90ms</Message>
                          <ConsoleOutput>Not simplified (4): ((!anesthesia&amp;!ct&amp;!mr&amp;!gtr))
Simplified     (2): ((!ct&amp;!gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:02:43</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (4): ((!anesthesia&amp;!ct&amp;!mr&amp;!gtr))
Simplified     (2): ((!ct&amp;!gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:06:02</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (4): ((!anesthesia&amp;!ct&amp;!mr&amp;!gtr))
Simplified     (2): ((!ct&amp;!gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:08:59</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (4): ((!anesthesia&amp;!ct&amp;!mr&amp;!gtr))
Simplified     (2): ((!ct&amp;!gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:58:04</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (4): ((!anesthesia&amp;!ct&amp;!mr&amp;!gtr))
Simplified     (2): ((!ct&amp;!gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T13:02:26</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 3.68ms</Message>
                          <ConsoleOutput>(mr) =&gt; (!ct)
(ct) =&gt; (!mr)
(gtr) =&gt; (!fbr)
(fbr) =&gt; (!gtr)
(anesthesia) =&gt; (move_by_patlog)
(anesthesia) =&gt; (!ct)
(anesthesia) =&gt; (gtr)
(anesthesia) =&gt; (!fbr)
(anesthesia) =&gt; (!moulding)
(anesthesia) =&gt; (!adaptive_imaging)
(anesthesia) =&gt; (!outpatient)
(moulding) =&gt; (ct)
(moulding) =&gt; (!mr)
(moulding) =&gt; (!gtr)
(moulding) =&gt; (!fbr)
(moulding) =&gt; (!anesthesia)
(moulding) =&gt; (!adaptive_imaging)
(moulding) =&gt; (!outpatient)
(adaptive_imaging) =&gt; (!gtr)
(adaptive_imaging) =&gt; (!fbr)
(adaptive_imaging) =&gt; (!anesthesia)
(adaptive_imaging) =&gt; (!moulding)
(adaptive_imaging) =&gt; (!outpatient)
(outpatient) =&gt; (!move_by_patlog)
(outpatient) =&gt; (!gtr)
(outpatient) =&gt; (!fbr)
(outpatient) =&gt; (!anesthesia)
(outpatient) =&gt; (!moulding)
(outpatient) =&gt; (!adaptive_imaging)
(treatment) =&gt; (!moulding)
(treatment) =&gt; (!anesthesia)
(treatment) =&gt; (!adaptive_imaging)
(treatment) =&gt; (!outpatient)
(!ct) =&gt; (!mr)
(!mr) =&gt; (!ct)
(!fbr) =&gt; (!gtr)
(!gtr) =&gt; (!fbr)
(move_by_patlog) =&gt; (!anesthesia)
(!ct) =&gt; (!anesthesia)
(gtr) =&gt; (!anesthesia)
(!fbr) =&gt; (!anesthesia)
(!moulding) =&gt; (!anesthesia)
(!adaptive_imaging) =&gt; (!anesthesia)
(!outpatient) =&gt; (!anesthesia)
(ct) =&gt; (!moulding)
(!mr) =&gt; (!moulding)
(!gtr) =&gt; (!moulding)
(!fbr) =&gt; (!moulding)
(!anesthesia) =&gt; (!moulding)
(!adaptive_imaging) =&gt; (!moulding)
(!outpatient) =&gt; (!moulding)
(!gtr) =&gt; (!adaptive_imaging)
(!fbr) =&gt; (!adaptive_imaging)
(!anesthesia) =&gt; (!adaptive_imaging)
(!moulding) =&gt; (!adaptive_imaging)
(!outpatient) =&gt; (!adaptive_imaging)
(!move_by_patlog) =&gt; (!outpatient)
(!gtr) =&gt; (!outpatient)
(!fbr) =&gt; (!outpatient)
(!anesthesia) =&gt; (!outpatient)
(!moulding) =&gt; (!outpatient)
(!adaptive_imaging) =&gt; (!outpatient)
(!moulding) =&gt; (!treatment)
(!anesthesia) =&gt; (!treatment)
(!adaptive_imaging) =&gt; (!treatment)
(!outpatient) =&gt; (!treatment)
Not simplified (4): ((!anesthesia&amp;!ct&amp;!mr&amp;!gtr))
Simplified     (2): ((!ct&amp;!gtr))
Simplified hr  (2): ((!ct&amp;!gtr))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                    <TestRecord Name="TestCase(&quot;adaptive_imaging &amp; !(ct)&quot;)">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:23:42</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:32:47</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:34:38</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.ParsedNot.Transform () [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:61 
  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__48 (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__47 (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:35:19</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>DomPropSimplify.ParserException : Expected whitespace at line 1 col 18.</Message>
                          <StackTrace>  at DomPropSimplify.FormulaParser.DoThrow (Int32 index, System.String format, System.Object[] args) [0x0004a] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:440 
  at DomPropSimplify.FormulaParser.DoParseFile (System.String input, System.String file) [0x000d5] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:355 
  at DomPropSimplify.FormulaParser.Parse (System.String input) [0x00004] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:61 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:37 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:36:20</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:37:20</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:40:09</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:01</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:41</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:43:12</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((adaptive_imaging&amp;!ct))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:44:49</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>adaptive_imaging &amp; !(ct)
((adaptive_imaging&amp;!ct))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:45:16</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>adaptive_imaging &amp; !(ct)
((adaptive_imaging&amp;!ct))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:47:17</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>adaptive_imaging &amp; !(ct)
((adaptive_imaging&amp;!ct))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:48:56</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((adaptive_imaging&amp;!ct))
((adaptive_imaging&amp;!ct))
Simplified: False
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:46:45</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((adaptive_imaging&amp;!ct))
Simplified (2): False
Simplified (2): False
((adaptive_imaging&amp;!ct))
((adaptive_imaging&amp;!ct))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:49:03</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (2): ((adaptive_imaging&amp;!ct))
Simplified     (2): ((adaptive_imaging&amp;!ct))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:02:43</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (2): ((adaptive_imaging&amp;!ct))
Simplified     (2): ((adaptive_imaging&amp;!ct))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:06:02</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (2): ((adaptive_imaging&amp;!ct))
Simplified     (2): ((adaptive_imaging&amp;!ct))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:08:59</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (2): ((adaptive_imaging&amp;!ct))
Simplified     (2): ((adaptive_imaging&amp;!ct))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:58:04</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (2): ((adaptive_imaging&amp;!ct))
Simplified     (2): ((adaptive_imaging&amp;!ct))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                    <TestRecord Name="TestCase(&quot;(!(adaptive_imaging)) | (adaptive_imaging &amp; ct)&quot;)">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:23:42</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:32:47</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at (wrapper castclass) object:__castclass_with_cache (object,intptr,intptr)
  at System.Linq.Enumerable+&lt;CreateCastIterator&gt;c__Iterator15`1[DomPropSimplify.ParsedAnd].MoveNext () [0x00048] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:578 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:34:38</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.ParsedNot.Transform () [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:61 
  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__48 (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__47 (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__48 (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__47 (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:35:19</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>DomPropSimplify.ParserException : Expected whitespace or comment or [a-zA-Z] at line 1 col 3.</Message>
                          <StackTrace>  at DomPropSimplify.FormulaParser.DoThrow (Int32 index, System.String format, System.Object[] args) [0x0004a] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:440 
  at DomPropSimplify.FormulaParser.DoParseFile (System.String input, System.String file) [0x00086] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:352 
  at DomPropSimplify.FormulaParser.Parse (System.String input) [0x00004] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:61 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:37 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:36:20</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__4C (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__4B (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:37:20</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at (wrapper castclass) object:__castclass_with_cache (object,intptr,intptr)
  at System.Linq.Enumerable+&lt;CreateCastIterator&gt;c__Iterator15`1[DomPropSimplify.ParsedAnd].MoveNext () [0x00048] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:578 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:40:09</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at (wrapper castclass) object:__castclass_with_cache (object,intptr,intptr)
  at System.Linq.Enumerable+&lt;CreateCastIterator&gt;c__Iterator15`1[DomPropSimplify.ParsedAnd].MoveNext () [0x00048] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:578 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:26 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:01</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:41</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!adaptive_imaging)|(adaptive_imaging&amp;ct))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:43:12</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!adaptive_imaging)|(adaptive_imaging&amp;ct))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:44:49</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00027] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:42 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput>(!(adaptive_imaging)) | (adaptive_imaging &amp; ct)
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:45:16</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>(!(adaptive_imaging)) | (adaptive_imaging &amp; ct)
((!adaptive_imaging)|(adaptive_imaging&amp;ct))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:47:17</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>(!(adaptive_imaging)) | (adaptive_imaging &amp; ct)
((!adaptive_imaging)|(adaptive_imaging&amp;ct))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:48:56</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!adaptive_imaging)|(adaptive_imaging&amp;ct))
((!adaptive_imaging)|(adaptive_imaging&amp;ct))
Simplified: False
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:46:45</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!adaptive_imaging)|(adaptive_imaging&amp;ct))
Simplified (3): False
Simplified (3): False
((!adaptive_imaging)|(adaptive_imaging&amp;ct))
((!adaptive_imaging)|(adaptive_imaging&amp;ct))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:49:03</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (3): ((!adaptive_imaging)|(adaptive_imaging&amp;ct))
Simplified     (3): ((!adaptive_imaging)|(adaptive_imaging&amp;ct))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:02:43</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (3): ((!adaptive_imaging)|(adaptive_imaging&amp;ct))
Simplified     (3): ((!adaptive_imaging)|(adaptive_imaging&amp;ct))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:06:02</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (3): ((!adaptive_imaging)|(adaptive_imaging&amp;ct))
Simplified     (3): ((!adaptive_imaging)|(adaptive_imaging&amp;ct))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:08:59</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (3): ((!adaptive_imaging)|(adaptive_imaging&amp;ct))
Simplified     (3): ((!adaptive_imaging)|(adaptive_imaging&amp;ct))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:58:04</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (3): ((!adaptive_imaging)|(adaptive_imaging&amp;ct))
Simplified     (3): ((!adaptive_imaging)|(adaptive_imaging&amp;ct))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T13:04:55</TestDate>
                          <Status>Failure</Status>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Connection refused</Message>
                          <StackTrace>  at Mono.Remoting.Channels.Unix.HostConnectionPool.CreateConnection () [0x0002a] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:265 
  at Mono.Remoting.Channels.Unix.HostConnectionPool.GetConnection () [0x000bb] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:249 
  at Mono.Remoting.Channels.Unix.UnixConnectionPool.GetConnection (System.String path) [0x00049] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:104 
  at Mono.Remoting.Channels.Unix.UnixClientTransportSink.ProcessMessage (IMessage msg, ITransportHeaders requestHeaders, System.IO.Stream requestStream, ITransportHeaders&amp; responseHeaders, System.IO.Stream&amp; responseStream) [0x00025] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixClientTransportSink.cs:171 
  at System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage (IMessage msg) [0x0006c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Runtime.Remoting/System.Runtime.Remoting.Channels/BinaryClientFormatterSink.cs:157 </StackTrace>
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                    <TestRecord Name="TestCase(&quot;(!(adaptive_imaging) &amp; moulding &amp; move_by_patlog) | (adaptive_imaging &amp; move_by_patlog)&quot;)">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:23:42</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:32:47</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:34:38</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.ParsedNot.Transform () [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:61 
  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__48 (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__47 (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__48 (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__47 (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:35:19</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>DomPropSimplify.ParserException : Expected whitespace or comment or [a-zA-Z] at line 1 col 3.</Message>
                          <StackTrace>  at DomPropSimplify.FormulaParser.DoThrow (Int32 index, System.String format, System.Object[] args) [0x0004a] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:440 
  at DomPropSimplify.FormulaParser.DoParseFile (System.String input, System.String file) [0x00086] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:352 
  at DomPropSimplify.FormulaParser.Parse (System.String input) [0x00004] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:61 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:37 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:36:20</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__4C (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__4B (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:37:20</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:40:09</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:01</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:41</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!adaptive_imaging&amp;moulding&amp;move_by_patlog)|(adaptive_imaging&amp;move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:43:12</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!adaptive_imaging&amp;moulding&amp;move_by_patlog)|(adaptive_imaging&amp;move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:44:49</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00027] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:42 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput>(!(adaptive_imaging) &amp; moulding &amp; move_by_patlog) | (adaptive_imaging &amp; move_by_patlog)
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:45:16</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>(!(adaptive_imaging) &amp; moulding &amp; move_by_patlog) | (adaptive_imaging &amp; move_by_patlog)
((!adaptive_imaging&amp;moulding&amp;move_by_patlog)|(adaptive_imaging&amp;move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:47:17</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.01ms</Message>
                          <ConsoleOutput>(!(adaptive_imaging) &amp; moulding &amp; move_by_patlog) | (adaptive_imaging &amp; move_by_patlog)
((moulding&amp;move_by_patlog)|(move_by_patlog&amp;adaptive_imaging))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:48:56</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.01ms</Message>
                          <ConsoleOutput>((!adaptive_imaging&amp;moulding&amp;move_by_patlog)|(adaptive_imaging&amp;move_by_patlog))
((moulding&amp;move_by_patlog)|(move_by_patlog&amp;adaptive_imaging))
Simplified: True
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:46:45</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.01ms</Message>
                          <ConsoleOutput>((!adaptive_imaging&amp;moulding&amp;move_by_patlog)|(adaptive_imaging&amp;move_by_patlog))
Simplified (4): True
Simplified (5): False
((moulding&amp;move_by_patlog)|(move_by_patlog&amp;adaptive_imaging))
((!adaptive_imaging&amp;moulding&amp;move_by_patlog)|(adaptive_imaging&amp;move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:49:03</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.01ms</Message>
                          <ConsoleOutput>Not simplified (5): ((!adaptive_imaging&amp;moulding&amp;move_by_patlog)|(adaptive_imaging&amp;move_by_patlog))
Simplified     (4): ((moulding&amp;move_by_patlog)|(move_by_patlog&amp;adaptive_imaging))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:02:43</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (5): ((!adaptive_imaging&amp;moulding&amp;move_by_patlog)|(adaptive_imaging&amp;move_by_patlog))
Simplified     (5): ((!adaptive_imaging&amp;moulding&amp;move_by_patlog)|(adaptive_imaging&amp;move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:06:02</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (5): ((!adaptive_imaging&amp;moulding&amp;move_by_patlog)|(adaptive_imaging&amp;move_by_patlog))
Simplified     (5): ((!adaptive_imaging&amp;moulding&amp;move_by_patlog)|(adaptive_imaging&amp;move_by_patlog))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:08:59</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (5): ((!adaptive_imaging&amp;moulding&amp;move_by_patlog)|(adaptive_imaging&amp;move_by_patlog))
Simplified     (4): ((moulding&amp;move_by_patlog)|(move_by_patlog&amp;adaptive_imaging))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:58:04</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (5): ((!adaptive_imaging&amp;moulding&amp;move_by_patlog)|(adaptive_imaging&amp;move_by_patlog))
Simplified     (4): ((moulding&amp;move_by_patlog)|(move_by_patlog&amp;adaptive_imaging))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T13:04:07</TestDate>
                          <Status>Failure</Status>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Connection refused</Message>
                          <StackTrace>  at Mono.Remoting.Channels.Unix.HostConnectionPool.CreateConnection () [0x0002a] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:265 
  at Mono.Remoting.Channels.Unix.HostConnectionPool.GetConnection () [0x000bb] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:249 
  at Mono.Remoting.Channels.Unix.UnixConnectionPool.GetConnection (System.String path) [0x00049] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:104 
  at Mono.Remoting.Channels.Unix.UnixClientTransportSink.ProcessMessage (IMessage msg, ITransportHeaders requestHeaders, System.IO.Stream requestStream, ITransportHeaders&amp; responseHeaders, System.IO.Stream&amp; responseStream) [0x00025] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixClientTransportSink.cs:171 
  at System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage (IMessage msg) [0x0006c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Runtime.Remoting/System.Runtime.Remoting.Channels/BinaryClientFormatterSink.cs:157 </StackTrace>
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                    <TestRecord Name="TestCase(&quot;(!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient)) | (anesthesia)&quot;)">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:23:42</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:32:47</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at (wrapper castclass) object:__castclass_with_cache (object,intptr,intptr)
  at System.Linq.Enumerable+&lt;CreateCastIterator&gt;c__Iterator15`1[DomPropSimplify.ParsedAnd].MoveNext () [0x00048] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:578 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:34:38</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.ParsedNot.Transform () [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:61 
  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__48 (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__47 (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__48 (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__47 (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:35:19</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>DomPropSimplify.ParserException : Expected whitespace or comment or [a-zA-Z] at line 1 col 3.</Message>
                          <StackTrace>  at DomPropSimplify.FormulaParser.DoThrow (Int32 index, System.String format, System.Object[] args) [0x0004a] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:440 
  at DomPropSimplify.FormulaParser.DoParseFile (System.String input, System.String file) [0x00086] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:352 
  at DomPropSimplify.FormulaParser.Parse (System.String input) [0x00004] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:61 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:37 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:36:20</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__4C (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__4B (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:37:20</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at (wrapper castclass) object:__castclass_with_cache (object,intptr,intptr)
  at System.Linq.Enumerable+&lt;CreateCastIterator&gt;c__Iterator15`1[DomPropSimplify.ParsedAnd].MoveNext () [0x00048] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:578 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:40:09</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at (wrapper castclass) object:__castclass_with_cache (object,intptr,intptr)
  at System.Linq.Enumerable+&lt;CreateCastIterator&gt;c__Iterator15`1[DomPropSimplify.ParsedAnd].MoveNext () [0x00048] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:578 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:26 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:01</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:41</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient)|(anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:43:12</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient)|(anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:44:49</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00027] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:42 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput>(!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient)) | (anesthesia)
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:45:16</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>(!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient)) | (anesthesia)
((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient)|(anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:47:17</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>(!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; !(outpatient)) | (anesthesia)
((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient)|(anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:48:56</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient)|(anesthesia))
((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient)|(anesthesia))
Simplified: False
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:46:45</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient)|(anesthesia))
Simplified (5): False
Simplified (5): False
((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient)|(anesthesia))
((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient)|(anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:49:03</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (5): ((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient)|(anesthesia))
Simplified     (5): ((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient)|(anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:02:43</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (5): ((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient)|(anesthesia))
Simplified     (2): ((!outpatient)|(anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:06:02</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.01ms</Message>
                          <ConsoleOutput>Not simplified (5): ((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient)|(anesthesia))
Simplified     (2): ((!outpatient)|(anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:08:59</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.01ms</Message>
                          <ConsoleOutput>Not simplified (5): ((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient)|(anesthesia))
Simplified     (2): ((!outpatient)|(anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:58:04</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>Not simplified (5): ((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;!outpatient)|(anesthesia))
Simplified     (2): ((!outpatient)|(anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T13:05:17</TestDate>
                          <Status>Failure</Status>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Connection refused</Message>
                          <StackTrace>  at Mono.Remoting.Channels.Unix.HostConnectionPool.CreateConnection () [0x0002a] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:265 
  at Mono.Remoting.Channels.Unix.HostConnectionPool.GetConnection () [0x000bb] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:249 
  at Mono.Remoting.Channels.Unix.UnixConnectionPool.GetConnection (System.String path) [0x00049] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:104 
  at Mono.Remoting.Channels.Unix.UnixClientTransportSink.ProcessMessage (IMessage msg, ITransportHeaders requestHeaders, System.IO.Stream requestStream, ITransportHeaders&amp; responseHeaders, System.IO.Stream&amp; responseStream) [0x00025] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixClientTransportSink.cs:171 
  at System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage (IMessage msg) [0x0006c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Runtime.Remoting/System.Runtime.Remoting.Channels/BinaryClientFormatterSink.cs:157 </StackTrace>
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                    <TestRecord Name="TestCase(&quot;(!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; outpatient) | (!(anesthesia) &amp; !(adaptive_imaging) &amp; moulding) | (!(anesthesia) &amp; adaptive_imaging)&quot;)">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:23:42</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:32:47</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:34:38</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.ParsedNot.Transform () [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:61 
  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__48 (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__47 (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__48 (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__47 (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:35:19</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>DomPropSimplify.ParserException : Expected whitespace or comment or [a-zA-Z] at line 1 col 3.</Message>
                          <StackTrace>  at DomPropSimplify.FormulaParser.DoThrow (Int32 index, System.String format, System.Object[] args) [0x0004a] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:440 
  at DomPropSimplify.FormulaParser.DoParseFile (System.String input, System.String file) [0x00086] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:352 
  at DomPropSimplify.FormulaParser.Parse (System.String input) [0x00004] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/FormulaParser.cs:61 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00007] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:37 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:36:20</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.ParsedAnd.&lt;Transform&gt;m__4C (ParsedElement x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedElement,DomPropSimplify.Terminal].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[Terminal] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedAnd.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:41 
  at DomPropSimplify.ParsedOr.&lt;Transform&gt;m__4B (DomPropSimplify.ParsedAnd x) [0x00001] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at System.Linq.Enumerable+&lt;CreateSelectIterator&gt;c__Iterator25`2[DomPropSimplify.ParsedAnd,DomPropSimplify.And].MoveNext () [0x00059] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2269 
  at System.Linq.Enumerable.ToArray[And] (IEnumerable`1 source) [0x0007c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Core/System.Linq/Enumerable.cs:2899 
  at DomPropSimplify.ParsedOr.Transform () [0x0002e] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/ParsedElement.cs:22 
  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00010] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:38 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:37:20</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:40:09</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:01</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput />
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:41:41</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;outpatient)|(!anesthesia&amp;!adaptive_imaging&amp;moulding)|(!anesthesia&amp;adaptive_imaging))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:43:12</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;outpatient)|(!anesthesia&amp;!adaptive_imaging&amp;moulding)|(!anesthesia&amp;adaptive_imaging))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:44:49</TestDate>
                          <Status />
                          <Passed>0</Passed>
                          <Errors>1</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>System.InvalidCastException : Cannot cast from source type to destination type.</Message>
                          <StackTrace>  at DomPropSimplify.Tests.TestParsing.TestCase (System.String input) [0x00027] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/TestParsing.cs:42 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                          <ConsoleOutput>(!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; outpatient) | (!(anesthesia) &amp; !(adaptive_imaging) &amp; moulding) | (!(anesthesia) &amp; adaptive_imaging)
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:45:16</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.00ms</Message>
                          <ConsoleOutput>(!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; outpatient) | (!(anesthesia) &amp; !(adaptive_imaging) &amp; moulding) | (!(anesthesia) &amp; adaptive_imaging)
((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;outpatient)|(!anesthesia&amp;!adaptive_imaging&amp;moulding)|(!anesthesia&amp;adaptive_imaging))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:47:17</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.08ms</Message>
                          <ConsoleOutput>(!(anesthesia) &amp; !(adaptive_imaging) &amp; !(moulding) &amp; outpatient) | (!(anesthesia) &amp; !(adaptive_imaging) &amp; moulding) | (!(anesthesia) &amp; adaptive_imaging)
((outpatient)|(moulding)|(adaptive_imaging))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T10:48:56</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.08ms</Message>
                          <ConsoleOutput>((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;outpatient)|(!anesthesia&amp;!adaptive_imaging&amp;moulding)|(!anesthesia&amp;adaptive_imaging))
((outpatient)|(moulding)|(adaptive_imaging))
Simplified: True
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:46:45</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.09ms</Message>
                          <ConsoleOutput>((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;outpatient)|(!anesthesia&amp;!adaptive_imaging&amp;moulding)|(!anesthesia&amp;adaptive_imaging))
Simplified (3): True
Simplified (9): False
((outpatient)|(moulding)|(adaptive_imaging))
((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;outpatient)|(!anesthesia&amp;!adaptive_imaging&amp;moulding)|(!anesthesia&amp;adaptive_imaging))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T11:49:03</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.07ms</Message>
                          <ConsoleOutput>Not simplified (9): ((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;outpatient)|(!anesthesia&amp;!adaptive_imaging&amp;moulding)|(!anesthesia&amp;adaptive_imaging))
Simplified     (3): ((outpatient)|(moulding)|(adaptive_imaging))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:02:43</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.01ms</Message>
                          <ConsoleOutput>Not simplified (9): ((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;outpatient)|(!anesthesia&amp;!adaptive_imaging&amp;moulding)|(!anesthesia&amp;adaptive_imaging))
Simplified     (6): ((!adaptive_imaging&amp;outpatient)|(!adaptive_imaging&amp;moulding)|(adaptive_imaging&amp;!anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:06:02</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.01ms</Message>
                          <ConsoleOutput>Not simplified (9): ((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;outpatient)|(!anesthesia&amp;!adaptive_imaging&amp;moulding)|(!anesthesia&amp;adaptive_imaging))
Simplified     (6): ((!adaptive_imaging&amp;outpatient)|(!adaptive_imaging&amp;moulding)|(adaptive_imaging&amp;!anesthesia))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:08:59</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.02ms</Message>
                          <ConsoleOutput>Not simplified (9): ((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;outpatient)|(!anesthesia&amp;!adaptive_imaging&amp;moulding)|(!anesthesia&amp;adaptive_imaging))
Simplified     (3): ((outpatient)|(moulding)|(adaptive_imaging))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T12:58:04</TestDate>
                          <Status />
                          <Passed>1</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Test successful

Execution time: 0.01ms</Message>
                          <ConsoleOutput>Not simplified (9): ((!anesthesia&amp;!adaptive_imaging&amp;!moulding&amp;outpatient)|(!anesthesia&amp;!adaptive_imaging&amp;moulding)|(!anesthesia&amp;adaptive_imaging))
Simplified     (3): ((outpatient)|(moulding)|(adaptive_imaging))
</ConsoleOutput>
                          <ConsoleError />
                        </UnitTestResult>
                        <UnitTestResult>
                          <TestDate>2013-10-03T13:05:27</TestDate>
                          <Status>Failure</Status>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>Connection refused</Message>
                          <StackTrace>  at Mono.Remoting.Channels.Unix.HostConnectionPool.CreateConnection () [0x0002a] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:265 
  at Mono.Remoting.Channels.Unix.HostConnectionPool.GetConnection () [0x000bb] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:249 
  at Mono.Remoting.Channels.Unix.UnixConnectionPool.GetConnection (System.String path) [0x00049] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:104 
  at Mono.Remoting.Channels.Unix.UnixClientTransportSink.ProcessMessage (IMessage msg, ITransportHeaders requestHeaders, System.IO.Stream requestStream, ITransportHeaders&amp; responseHeaders, System.IO.Stream&amp; responseStream) [0x00025] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixClientTransportSink.cs:171 
  at System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage (IMessage msg) [0x0006c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Runtime.Remoting/System.Runtime.Remoting.Channels/BinaryClientFormatterSink.cs:157 </StackTrace>
                        </UnitTestResult>
                      </Results>
                      <Tests />
                    </TestRecord>
                  </Tests>
                </TestRecord>
              </Tests>
            </TestRecord>
            <TestRecord Name="NUnitTestClass">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-10-03T11:46:45</TestDate>
                  <Status />
                  <Passed>3</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0.15ms</Message>
                </UnitTestResult>
              </Results>
              <Tests>
                <TestRecord Name="Test1">
                  <Results>
                    <UnitTestResult>
                      <TestDate>2013-10-03T11:46:45</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.05ms</Message>
                      <ConsoleOutput />
                      <ConsoleError />
                    </UnitTestResult>
                  </Results>
                  <Tests />
                </TestRecord>
                <TestRecord Name="Test2">
                  <Results>
                    <UnitTestResult>
                      <TestDate>2013-10-03T11:46:45</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.00ms</Message>
                      <ConsoleOutput />
                      <ConsoleError />
                    </UnitTestResult>
                  </Results>
                  <Tests />
                </TestRecord>
                <TestRecord Name="Test3">
                  <Results>
                    <UnitTestResult>
                      <TestDate>2013-10-03T11:46:45</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.00ms</Message>
                      <ConsoleOutput />
                      <ConsoleError />
                    </UnitTestResult>
                  </Results>
                  <Tests />
                </TestRecord>
              </Tests>
            </TestRecord>
            <TestRecord Name="Test">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-10-03T11:46:45</TestDate>
                  <Status />
                  <Passed>5</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0.05ms</Message>
                </UnitTestResult>
              </Results>
              <Tests>
                <TestRecord Name="Test1">
                  <Results>
                    <UnitTestResult>
                      <TestDate>2013-10-03T11:46:45</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.02ms</Message>
                      <ConsoleOutput>((a))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                  </Results>
                  <Tests />
                </TestRecord>
                <TestRecord Name="Test2">
                  <Results>
                    <UnitTestResult>
                      <TestDate>2013-10-03T11:46:45</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.00ms</Message>
                      <ConsoleOutput>((a&amp;b))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                  </Results>
                  <Tests />
                </TestRecord>
                <TestRecord Name="Test3">
                  <Results>
                    <UnitTestResult>
                      <TestDate>2013-10-03T11:46:45</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.00ms</Message>
                      <ConsoleOutput>((a&amp;c))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                  </Results>
                  <Tests />
                </TestRecord>
                <TestRecord Name="Test4">
                  <Results>
                    <UnitTestResult>
                      <TestDate>2013-10-03T11:46:45</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.00ms</Message>
                      <ConsoleOutput>((a)|(b))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                  </Results>
                  <Tests />
                </TestRecord>
                <TestRecord Name="TestIBA">
                  <Results>
                    <UnitTestResult>
                      <TestDate>2013-10-03T11:46:45</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.01ms</Message>
                      <ConsoleOutput>((!anesthesia&amp;!adaptive_imaging&amp;moulding&amp;!outpatient&amp;!move_by_patlog))

(mr) =&gt; (!ct)
(ct) =&gt; (!mr)
(gtr) =&gt; (!fbr)
(fbr) =&gt; (!gtr)
(anesthesia) =&gt; (move_by_patlog&amp;!ct&amp;gtr&amp;!fbr&amp;!moulding&amp;!adaptive_imaging&amp;!outpatient)
(moulding) =&gt; (ct&amp;!mr&amp;!gtr&amp;!fbr&amp;!anesthesia&amp;!adaptive_imaging&amp;!outpatient)
(adaptive_imaging) =&gt; (!gtr&amp;!fbr&amp;!anesthesia&amp;!moulding&amp;!outpatient)
(outpatient) =&gt; (!move_by_patlog&amp;!gtr&amp;!fbr&amp;!anesthesia&amp;!moulding&amp;!adaptive_imaging)

((moulding&amp;!move_by_patlog))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                  </Results>
                  <Tests />
                </TestRecord>
              </Tests>
            </TestRecord>
          </Tests>
        </TestRecord>
      </Tests>
    </TestRecord>
  </Tests>
</TestRecord>