<?xml version="1.0" encoding="utf-8"?>
<TestRecord xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Results>
    <UnitTestResult>
      <TestDate>2013-10-02T08:55:00</TestDate>
      <Status />
      <Passed>1</Passed>
      <Errors>0</Errors>
      <Failures>0</Failures>
      <Inconclusive>0</Inconclusive>
      <NotRunnable>0</NotRunnable>
      <Skipped>0</Skipped>
      <Ignored>0</Ignored>
      <Time />
      <Message>Test successful

Execution time: 0.06ms</Message>
    </UnitTestResult>
    <UnitTestResult>
      <TestDate>2013-10-02T08:57:30</TestDate>
      <Status />
      <Passed>1</Passed>
      <Errors>0</Errors>
      <Failures>2</Failures>
      <Inconclusive>0</Inconclusive>
      <NotRunnable>0</NotRunnable>
      <Skipped>0</Skipped>
      <Ignored>0</Ignored>
      <Time />
      <Message>One or more child tests had errors</Message>
    </UnitTestResult>
    <UnitTestResult>
      <TestDate>2013-10-02T08:57:56</TestDate>
      <Status />
      <Passed>1</Passed>
      <Errors>0</Errors>
      <Failures>2</Failures>
      <Inconclusive>0</Inconclusive>
      <NotRunnable>0</NotRunnable>
      <Skipped>0</Skipped>
      <Ignored>0</Ignored>
      <Time />
      <Message>One or more child tests had errors</Message>
    </UnitTestResult>
    <UnitTestResult>
      <TestDate>2013-10-02T08:59:22</TestDate>
      <Status />
      <Passed>2</Passed>
      <Errors>0</Errors>
      <Failures>1</Failures>
      <Inconclusive>0</Inconclusive>
      <NotRunnable>0</NotRunnable>
      <Skipped>0</Skipped>
      <Ignored>0</Ignored>
      <Time />
      <Message>One or more child tests had errors</Message>
    </UnitTestResult>
    <UnitTestResult>
      <TestDate>2013-10-02T10:52:08</TestDate>
      <Status />
      <Passed>7</Passed>
      <Errors>0</Errors>
      <Failures>0</Failures>
      <Inconclusive>0</Inconclusive>
      <NotRunnable>0</NotRunnable>
      <Skipped>0</Skipped>
      <Ignored>0</Ignored>
      <Time />
      <Message>Test successful

Execution time: 0.20ms</Message>
    </UnitTestResult>
    <UnitTestResult>
      <TestDate>2013-10-02T10:58:48</TestDate>
      <Status />
      <Passed>7</Passed>
      <Errors>0</Errors>
      <Failures>1</Failures>
      <Inconclusive>0</Inconclusive>
      <NotRunnable>0</NotRunnable>
      <Skipped>0</Skipped>
      <Ignored>0</Ignored>
      <Time />
      <Message>One or more child tests had errors</Message>
    </UnitTestResult>
  </Results>
  <Tests>
    <TestRecord Name="DomPropSimplify">
      <Results>
        <UnitTestResult>
          <TestDate>2013-10-02T08:55:00</TestDate>
          <Status />
          <Passed>1</Passed>
          <Errors>0</Errors>
          <Failures>0</Failures>
          <Inconclusive>0</Inconclusive>
          <NotRunnable>0</NotRunnable>
          <Skipped>0</Skipped>
          <Ignored>0</Ignored>
          <Time />
          <Message>Test successful

Execution time: 0.06ms</Message>
        </UnitTestResult>
        <UnitTestResult>
          <TestDate>2013-10-02T08:57:30</TestDate>
          <Status />
          <Passed>1</Passed>
          <Errors>0</Errors>
          <Failures>2</Failures>
          <Inconclusive>0</Inconclusive>
          <NotRunnable>0</NotRunnable>
          <Skipped>0</Skipped>
          <Ignored>0</Ignored>
          <Time />
          <Message>One or more child tests had errors</Message>
        </UnitTestResult>
        <UnitTestResult>
          <TestDate>2013-10-02T08:57:56</TestDate>
          <Status />
          <Passed>1</Passed>
          <Errors>0</Errors>
          <Failures>2</Failures>
          <Inconclusive>0</Inconclusive>
          <NotRunnable>0</NotRunnable>
          <Skipped>0</Skipped>
          <Ignored>0</Ignored>
          <Time />
          <Message>One or more child tests had errors</Message>
        </UnitTestResult>
        <UnitTestResult>
          <TestDate>2013-10-02T08:59:22</TestDate>
          <Status />
          <Passed>2</Passed>
          <Errors>0</Errors>
          <Failures>1</Failures>
          <Inconclusive>0</Inconclusive>
          <NotRunnable>0</NotRunnable>
          <Skipped>0</Skipped>
          <Ignored>0</Ignored>
          <Time />
          <Message>One or more child tests had errors</Message>
        </UnitTestResult>
        <UnitTestResult>
          <TestDate>2013-10-02T10:52:08</TestDate>
          <Status />
          <Passed>7</Passed>
          <Errors>0</Errors>
          <Failures>0</Failures>
          <Inconclusive>0</Inconclusive>
          <NotRunnable>0</NotRunnable>
          <Skipped>0</Skipped>
          <Ignored>0</Ignored>
          <Time />
          <Message>Test successful

Execution time: 0.19ms</Message>
        </UnitTestResult>
        <UnitTestResult>
          <TestDate>2013-10-02T10:58:48</TestDate>
          <Status />
          <Passed>7</Passed>
          <Errors>0</Errors>
          <Failures>1</Failures>
          <Inconclusive>0</Inconclusive>
          <NotRunnable>0</NotRunnable>
          <Skipped>0</Skipped>
          <Ignored>0</Ignored>
          <Time />
          <Message>One or more child tests had errors</Message>
        </UnitTestResult>
      </Results>
      <Tests>
        <TestRecord Name="Tests">
          <Results>
            <UnitTestResult>
              <TestDate>2013-10-02T08:55:00</TestDate>
              <Status />
              <Passed>1</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0.06ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-10-02T08:57:30</TestDate>
              <Status />
              <Passed>1</Passed>
              <Errors>0</Errors>
              <Failures>2</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-10-02T08:57:56</TestDate>
              <Status />
              <Passed>1</Passed>
              <Errors>0</Errors>
              <Failures>2</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-10-02T08:59:22</TestDate>
              <Status />
              <Passed>2</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-10-02T10:21:50</TestDate>
              <Status />
              <Passed>4</Passed>
              <Errors>0</Errors>
              <Failures>3</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-10-02T10:52:08</TestDate>
              <Status />
              <Passed>7</Passed>
              <Errors>0</Errors>
              <Failures>0</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>Test successful

Execution time: 0.19ms</Message>
            </UnitTestResult>
            <UnitTestResult>
              <TestDate>2013-10-02T10:58:48</TestDate>
              <Status />
              <Passed>7</Passed>
              <Errors>0</Errors>
              <Failures>1</Failures>
              <Inconclusive>0</Inconclusive>
              <NotRunnable>0</NotRunnable>
              <Skipped>0</Skipped>
              <Ignored>0</Ignored>
              <Time />
              <Message>One or more child tests had errors</Message>
            </UnitTestResult>
          </Results>
          <Tests>
            <TestRecord Name="Test">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-10-02T08:55:00</TestDate>
                  <Status />
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0.05ms</Message>
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-10-02T08:57:30</TestDate>
                  <Status />
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>2</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>One or more child tests had errors</Message>
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-10-02T08:57:56</TestDate>
                  <Status />
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>2</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>One or more child tests had errors</Message>
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-10-02T08:59:22</TestDate>
                  <Status />
                  <Passed>2</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>One or more child tests had errors</Message>
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-10-02T09:38:52</TestDate>
                  <Status />
                  <Passed>3</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>One or more child tests had errors</Message>
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-10-02T10:21:50</TestDate>
                  <Status />
                  <Passed>1</Passed>
                  <Errors>0</Errors>
                  <Failures>3</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>One or more child tests had errors</Message>
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-10-02T10:22:45</TestDate>
                  <Status />
                  <Passed>2</Passed>
                  <Errors>0</Errors>
                  <Failures>2</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>One or more child tests had errors</Message>
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-10-02T10:23:09</TestDate>
                  <Status />
                  <Passed>4</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0.17ms</Message>
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-10-02T10:52:08</TestDate>
                  <Status />
                  <Passed>4</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0.04ms</Message>
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-10-02T10:58:48</TestDate>
                  <Status />
                  <Passed>4</Passed>
                  <Errors>0</Errors>
                  <Failures>1</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>One or more child tests had errors</Message>
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-10-02T11:08:09</TestDate>
                  <Status />
                  <Passed>5</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0.30ms</Message>
                </UnitTestResult>
              </Results>
              <Tests>
                <TestRecord Name="TestCase">
                  <Results>
                    <UnitTestResult>
                      <TestDate>2013-10-02T08:55:00</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.05ms</Message>
                      <ConsoleOutput />
                      <ConsoleError />
                    </UnitTestResult>
                  </Results>
                  <Tests />
                </TestRecord>
                <TestRecord Name="Test1">
                  <Results>
                    <UnitTestResult>
                      <TestDate>2013-10-02T08:57:30</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.05ms</Message>
                      <ConsoleOutput>((a))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T08:57:56</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.07ms</Message>
                      <ConsoleOutput>((a))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T08:59:22</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.05ms</Message>
                      <ConsoleOutput>((a))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T09:38:52</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.06ms</Message>
                      <ConsoleOutput>((a))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T10:21:50</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.02ms</Message>
                      <ConsoleOutput>((a))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T10:22:45</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.06ms</Message>
                      <ConsoleOutput>((a))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T10:23:09</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.06ms</Message>
                      <ConsoleOutput>((a))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T10:52:08</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.02ms</Message>
                      <ConsoleOutput>((a))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T10:58:48</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.03ms</Message>
                      <ConsoleOutput>((a))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T11:08:09</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.07ms</Message>
                      <ConsoleOutput>Add ((a&amp;c))
Add ((a&amp;b))
Add ((a))
((a))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                  </Results>
                  <Tests />
                </TestRecord>
                <TestRecord Name="Test2">
                  <Results>
                    <UnitTestResult>
                      <TestDate>2013-10-02T08:57:30</TestDate>
                      <Status />
                      <Passed>0</Passed>
                      <Errors>0</Errors>
                      <Failures>1</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>  Expected: 2
  But was:  1
</Message>
                      <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.AreEqual (Int32 expected, Int32 actual) [0x00000] in &lt;filename unknown&gt;:0 
  at DomPropSimplify.Tests.Test.Test2 () [0x000b2] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/Test.cs:39 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                      <ConsoleOutput />
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T08:57:56</TestDate>
                      <Status />
                      <Passed>0</Passed>
                      <Errors>0</Errors>
                      <Failures>1</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>  Expected: 2
  But was:  1
</Message>
                      <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.AreEqual (Int32 expected, Int32 actual) [0x00000] in &lt;filename unknown&gt;:0 
  at DomPropSimplify.Tests.Test.Test2 () [0x000bd] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/Test.cs:41 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                      <ConsoleOutput>((c))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T08:59:22</TestDate>
                      <Status />
                      <Passed>0</Passed>
                      <Errors>0</Errors>
                      <Failures>1</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>  Expected: &lt;((a))&gt;
  But was:  &lt;((c))&gt;
</Message>
                      <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.AreEqual (System.Object expected, System.Object actual) [0x00000] in &lt;filename unknown&gt;:0 
  at DomPropSimplify.Tests.Test.Test2 () [0x000d2] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/Test.cs:41 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                      <ConsoleOutput>((c))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T09:38:52</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.00ms</Message>
                      <ConsoleOutput>((c))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T10:21:50</TestDate>
                      <Status />
                      <Passed>0</Passed>
                      <Errors>0</Errors>
                      <Failures>1</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>  Expected: &lt;((c))&gt;
  But was:  &lt;((a&amp;b))&gt;
</Message>
                      <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.AreEqual (System.Object expected, System.Object actual) [0x00000] in &lt;filename unknown&gt;:0 
  at DomPropSimplify.Tests.Test.Test2 () [0x000c4] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/Test.cs:45 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                      <ConsoleOutput>((a&amp;b))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T10:22:45</TestDate>
                      <Status />
                      <Passed>0</Passed>
                      <Errors>0</Errors>
                      <Failures>1</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>  Expected: &lt;((a&amp;c))&gt;
  But was:  &lt;((a&amp;b))&gt;
</Message>
                      <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.AreEqual (System.Object expected, System.Object actual) [0x00000] in &lt;filename unknown&gt;:0 
  at DomPropSimplify.Tests.Test.Test2 () [0x000d1] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/Test.cs:45 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                      <ConsoleOutput>((a&amp;b))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T10:23:09</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.00ms</Message>
                      <ConsoleOutput>((a&amp;b))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T10:52:08</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.00ms</Message>
                      <ConsoleOutput>((a&amp;b))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T10:58:48</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.00ms</Message>
                      <ConsoleOutput>((a&amp;b))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T11:08:09</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.10ms</Message>
                      <ConsoleOutput>Add ((a&amp;b))
((a&amp;b))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                  </Results>
                  <Tests />
                </TestRecord>
                <TestRecord Name="Test3">
                  <Results>
                    <UnitTestResult>
                      <TestDate>2013-10-02T08:57:30</TestDate>
                      <Status />
                      <Passed>0</Passed>
                      <Errors>0</Errors>
                      <Failures>1</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>  Expected: 2
  But was:  1
</Message>
                      <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.AreEqual (Int32 expected, Int32 actual) [0x00000] in &lt;filename unknown&gt;:0 
  at DomPropSimplify.Tests.Test.Test3 () [0x000c0] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/Test.cs:56 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                      <ConsoleOutput />
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T08:57:56</TestDate>
                      <Status />
                      <Passed>0</Passed>
                      <Errors>0</Errors>
                      <Failures>1</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>  Expected: 2
  But was:  1
</Message>
                      <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.AreEqual (Int32 expected, Int32 actual) [0x00000] in &lt;filename unknown&gt;:0 
  at DomPropSimplify.Tests.Test.Test3 () [0x000cb] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/Test.cs:58 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                      <ConsoleOutput>((a))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T08:59:22</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.00ms</Message>
                      <ConsoleOutput>((a))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T09:38:52</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.00ms</Message>
                      <ConsoleOutput>((a))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T10:21:50</TestDate>
                      <Status />
                      <Passed>0</Passed>
                      <Errors>0</Errors>
                      <Failures>1</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>  Expected: &lt;((a))&gt;
  But was:  &lt;((a&amp;c))&gt;
</Message>
                      <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.AreEqual (System.Object expected, System.Object actual) [0x00000] in &lt;filename unknown&gt;:0 
  at DomPropSimplify.Tests.Test.Test3 () [0x000b7] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/Test.cs:62 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                      <ConsoleOutput>((a&amp;c))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T10:22:45</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.00ms</Message>
                      <ConsoleOutput>((a&amp;c))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T10:23:09</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.00ms</Message>
                      <ConsoleOutput>((a&amp;c))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T10:52:08</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.00ms</Message>
                      <ConsoleOutput>((a&amp;c))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T10:58:48</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.00ms</Message>
                      <ConsoleOutput>((a&amp;c))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T11:08:09</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.00ms</Message>
                      <ConsoleOutput>Add ((a&amp;c))
((a&amp;c))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                  </Results>
                  <Tests />
                </TestRecord>
                <TestRecord Name="Test4">
                  <Results>
                    <UnitTestResult>
                      <TestDate>2013-10-02T09:00:13</TestDate>
                      <Status />
                      <Passed>0</Passed>
                      <Errors>0</Errors>
                      <Failures>1</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>  Expected: &lt;((a))&gt;
  But was:  &lt;((a)|(b&amp;c))&gt;
</Message>
                      <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.AreEqual (System.Object expected, System.Object actual) [0x00000] in &lt;filename unknown&gt;:0 
  at DomPropSimplify.Tests.Test.Test4 () [0x000ee] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/Test.cs:75 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                      <ConsoleOutput>((a)|(b&amp;c))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T09:38:52</TestDate>
                      <Status />
                      <Passed>0</Passed>
                      <Errors>0</Errors>
                      <Failures>1</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>  Expected: &lt;((a))&gt;
  But was:  &lt;((b))&gt;
</Message>
                      <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.AreEqual (System.Object expected, System.Object actual) [0x00000] in &lt;filename unknown&gt;:0 
  at DomPropSimplify.Tests.Test.Test4 () [0x000ee] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/Test.cs:75 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                      <ConsoleOutput>((b))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T10:21:50</TestDate>
                      <Status />
                      <Passed>0</Passed>
                      <Errors>0</Errors>
                      <Failures>1</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>  Expected: &lt;((a))&gt;
  But was:  &lt;((a)|(b&amp;c))&gt;
</Message>
                      <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.AreEqual (System.Object expected, System.Object actual) [0x00000] in &lt;filename unknown&gt;:0 
  at DomPropSimplify.Tests.Test.Test4 () [0x000c5] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/Test.cs:79 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                      <ConsoleOutput>((a)|(b&amp;c))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T10:22:45</TestDate>
                      <Status />
                      <Passed>0</Passed>
                      <Errors>0</Errors>
                      <Failures>1</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>  Expected: &lt;((a))&gt;
  But was:  &lt;((a)|(b))&gt;
</Message>
                      <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.AreEqual (System.Object expected, System.Object actual) [0x00000] in &lt;filename unknown&gt;:0 
  at DomPropSimplify.Tests.Test.Test4 () [0x000c5] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/Test.cs:79 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                      <ConsoleOutput>((a)|(b))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T10:23:09</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.00ms</Message>
                      <ConsoleOutput>((a)|(b))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T10:52:08</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.00ms</Message>
                      <ConsoleOutput>((a)|(b))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T10:58:48</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.00ms</Message>
                      <ConsoleOutput>((a)|(b))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T11:08:09</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.00ms</Message>
                      <ConsoleOutput>Add ((a)|(b))
((a)|(b))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                  </Results>
                  <Tests />
                </TestRecord>
                <TestRecord Name="TestIBA">
                  <Results>
                    <UnitTestResult>
                      <TestDate>2013-10-02T10:58:48</TestDate>
                      <Status />
                      <Passed>0</Passed>
                      <Errors>0</Errors>
                      <Failures>1</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>  Expected: &lt;((a)|(b))&gt;
  But was:  &lt;((!anesthesia&amp;!adaptive_imaging&amp;moulding&amp;!outpatient&amp;!move_by_patlog))&gt;
</Message>
                      <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.AreEqual (System.Object expected, System.Object actual) [0x00000] in &lt;filename unknown&gt;:0 
  at DomPropSimplify.Tests.Test.TestIBA () [0x00106] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/Test.cs:102 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                      <ConsoleOutput>((!anesthesia&amp;!adaptive_imaging&amp;moulding&amp;!outpatient&amp;!move_by_patlog))
((!anesthesia&amp;!adaptive_imaging&amp;moulding&amp;!outpatient&amp;!move_by_patlog))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T11:00:06</TestDate>
                      <Status />
                      <Passed>0</Passed>
                      <Errors>0</Errors>
                      <Failures>1</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>  Expected: &lt;((a)|(b))&gt;
  But was:  &lt;((!anesthesia&amp;!adaptive_imaging&amp;moulding&amp;!outpatient&amp;!move_by_patlog))&gt;
</Message>
                      <StackTrace>  at NUnit.Framework.Assert.That (System.Object actual, IResolveConstraint expression, System.String message, System.Object[] args) [0x00000] in &lt;filename unknown&gt;:0 
  at NUnit.Framework.Assert.AreEqual (System.Object expected, System.Object actual) [0x00000] in &lt;filename unknown&gt;:0 
  at DomPropSimplify.Tests.Test.TestIBA () [0x0011b] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/Test.cs:103 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                      <ConsoleOutput>((!anesthesia&amp;!adaptive_imaging&amp;moulding&amp;!outpatient&amp;!move_by_patlog))
(mr) =&gt; (!ct)
((!anesthesia&amp;!adaptive_imaging&amp;moulding&amp;!outpatient&amp;!move_by_patlog))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T11:03:45</TestDate>
                      <Status>Failure</Status>
                      <Passed>0</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Connection refused</Message>
                      <StackTrace>  at Mono.Remoting.Channels.Unix.HostConnectionPool.CreateConnection () [0x0002a] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:265 
  at Mono.Remoting.Channels.Unix.HostConnectionPool.GetConnection () [0x000bb] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:249 
  at Mono.Remoting.Channels.Unix.UnixConnectionPool.GetConnection (System.String path) [0x00049] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:104 
  at Mono.Remoting.Channels.Unix.UnixClientTransportSink.ProcessMessage (IMessage msg, ITransportHeaders requestHeaders, System.IO.Stream requestStream, ITransportHeaders&amp; responseHeaders, System.IO.Stream&amp; responseStream) [0x00025] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixClientTransportSink.cs:171 
  at System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage (IMessage msg) [0x0006c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Runtime.Remoting/System.Runtime.Remoting.Channels/BinaryClientFormatterSink.cs:157 </StackTrace>
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T11:04:20</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.02ms</Message>
                      <ConsoleOutput>((!anesthesia&amp;!adaptive_imaging&amp;moulding&amp;!outpatient&amp;!move_by_patlog))

(mr) =&gt; (!ct)
(ct) =&gt; (!mr)
(gtr) =&gt; (!fbr)
(fbr) =&gt; (!gtr)
(anesthesia) =&gt; (move_by_patlog&amp;!ct&amp;gtr&amp;!fbr&amp;!moulding&amp;!adaptive_imaging&amp;!outpatient)
(moulding) =&gt; (ct&amp;!mr&amp;!gtr&amp;!fbr&amp;!anesthesia&amp;!adaptive_imaging&amp;!outpatient)
(adaptive_imaging) =&gt; (!gtr&amp;!fbr&amp;!anesthesia&amp;!moulding&amp;!outpatient)
(outpatient) =&gt; (!move_by_patlog&amp;!gtr&amp;!fbr&amp;!anesthesia&amp;!moulding&amp;!adaptive_imaging)

</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T11:05:28</TestDate>
                      <Status>Failure</Status>
                      <Passed>0</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Connection refused</Message>
                      <StackTrace>  at Mono.Remoting.Channels.Unix.HostConnectionPool.CreateConnection () [0x0002a] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:265 
  at Mono.Remoting.Channels.Unix.HostConnectionPool.GetConnection () [0x000bb] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:249 
  at Mono.Remoting.Channels.Unix.UnixConnectionPool.GetConnection (System.String path) [0x00049] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:104 
  at Mono.Remoting.Channels.Unix.UnixClientTransportSink.ProcessMessage (IMessage msg, ITransportHeaders requestHeaders, System.IO.Stream requestStream, ITransportHeaders&amp; responseHeaders, System.IO.Stream&amp; responseStream) [0x00025] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixClientTransportSink.cs:171 
  at System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage (IMessage msg) [0x0006c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Runtime.Remoting/System.Runtime.Remoting.Channels/BinaryClientFormatterSink.cs:157 </StackTrace>
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T11:05:50</TestDate>
                      <Status>Failure</Status>
                      <Passed>0</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Connection refused</Message>
                      <StackTrace>  at Mono.Remoting.Channels.Unix.HostConnectionPool.CreateConnection () [0x0002a] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:265 
  at Mono.Remoting.Channels.Unix.HostConnectionPool.GetConnection () [0x000bb] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:249 
  at Mono.Remoting.Channels.Unix.UnixConnectionPool.GetConnection (System.String path) [0x00049] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixConnectionPool.cs:104 
  at Mono.Remoting.Channels.Unix.UnixClientTransportSink.ProcessMessage (IMessage msg, ITransportHeaders requestHeaders, System.IO.Stream requestStream, ITransportHeaders&amp; responseHeaders, System.IO.Stream&amp; responseStream) [0x00025] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/Mono.Posix/Mono.Remoting.Channels.Unix/UnixClientTransportSink.cs:171 
  at System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage (IMessage msg) [0x0006c] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/System.Runtime.Remoting/System.Runtime.Remoting.Channels/BinaryClientFormatterSink.cs:157 </StackTrace>
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T11:08:09</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.01ms</Message>
                      <ConsoleOutput>((!anesthesia&amp;!adaptive_imaging&amp;moulding&amp;!outpatient&amp;!move_by_patlog))

(mr) =&gt; (!ct)
(ct) =&gt; (!mr)
(gtr) =&gt; (!fbr)
(fbr) =&gt; (!gtr)
(anesthesia) =&gt; (move_by_patlog&amp;!ct&amp;gtr&amp;!fbr&amp;!moulding&amp;!adaptive_imaging&amp;!outpatient)
(moulding) =&gt; (ct&amp;!mr&amp;!gtr&amp;!fbr&amp;!anesthesia&amp;!adaptive_imaging&amp;!outpatient)
(adaptive_imaging) =&gt; (!gtr&amp;!fbr&amp;!anesthesia&amp;!moulding&amp;!outpatient)
(outpatient) =&gt; (!move_by_patlog&amp;!gtr&amp;!fbr&amp;!anesthesia&amp;!moulding&amp;!adaptive_imaging)

Add ((!anesthesia&amp;!adaptive_imaging&amp;moulding&amp;!outpatient&amp;!move_by_patlog&amp;ct&amp;!mr&amp;!gtr&amp;!fbr))
Add ((!anesthesia&amp;!adaptive_imaging&amp;moulding&amp;!outpatient&amp;!move_by_patlog&amp;ct&amp;!gtr&amp;!fbr))
Add ((moulding&amp;!move_by_patlog))
((moulding&amp;!move_by_patlog))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T11:09:17</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.06ms</Message>
                      <ConsoleOutput>((!anesthesia&amp;!adaptive_imaging&amp;moulding&amp;!outpatient&amp;!move_by_patlog))

(mr) =&gt; (!ct)
(ct) =&gt; (!mr)
(gtr) =&gt; (!fbr)
(fbr) =&gt; (!gtr)
(anesthesia) =&gt; (move_by_patlog&amp;!ct&amp;gtr&amp;!fbr&amp;!moulding&amp;!adaptive_imaging&amp;!outpatient)
(moulding) =&gt; (ct&amp;!mr&amp;!gtr&amp;!fbr&amp;!anesthesia&amp;!adaptive_imaging&amp;!outpatient)
(adaptive_imaging) =&gt; (!gtr&amp;!fbr&amp;!anesthesia&amp;!moulding&amp;!outpatient)
(outpatient) =&gt; (!move_by_patlog&amp;!gtr&amp;!fbr&amp;!anesthesia&amp;!moulding&amp;!adaptive_imaging)

((moulding&amp;!move_by_patlog))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                  </Results>
                  <Tests />
                </TestRecord>
              </Tests>
            </TestRecord>
            <TestRecord Name="NUnitTestClass">
              <Results>
                <UnitTestResult>
                  <TestDate>2013-10-02T09:33:48</TestDate>
                  <Status />
                  <Passed>0</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>One or more child tests had errors</Message>
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-10-02T09:35:27</TestDate>
                  <Status />
                  <Passed>1</Passed>
                  <Errors>1</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>One or more child tests had errors</Message>
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-10-02T09:36:01</TestDate>
                  <Status />
                  <Passed>2</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0.14ms</Message>
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-10-02T09:36:58</TestDate>
                  <Status />
                  <Passed>2</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0.14ms</Message>
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-10-02T09:38:01</TestDate>
                  <Status />
                  <Passed>3</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0.15ms</Message>
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-10-02T10:21:50</TestDate>
                  <Status />
                  <Passed>3</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0.15ms</Message>
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-10-02T10:52:08</TestDate>
                  <Status />
                  <Passed>3</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0.14ms</Message>
                </UnitTestResult>
                <UnitTestResult>
                  <TestDate>2013-10-02T10:58:48</TestDate>
                  <Status />
                  <Passed>3</Passed>
                  <Errors>0</Errors>
                  <Failures>0</Failures>
                  <Inconclusive>0</Inconclusive>
                  <NotRunnable>0</NotRunnable>
                  <Skipped>0</Skipped>
                  <Ignored>0</Ignored>
                  <Time />
                  <Message>Test successful

Execution time: 0.14ms</Message>
                </UnitTestResult>
              </Results>
              <Tests>
                <TestRecord Name="Test1">
                  <Results>
                    <UnitTestResult>
                      <TestDate>2013-10-02T09:33:48</TestDate>
                      <Status />
                      <Passed>0</Passed>
                      <Errors>1</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>System.NotSupportedException : Operation is not supported.</Message>
                      <StackTrace>  at DomPropSimplify.Or.Simplify () [0x001b9] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/Formula.cs:93 
  at DomPropSimplify.Tests.NUnitTestClass.Test1 () [0x00051] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/NUnitTestClass.cs:13 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                      <ConsoleOutput />
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T09:34:07</TestDate>
                      <Status />
                      <Passed>0</Passed>
                      <Errors>1</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>System.NotSupportedException : Operation is not supported.</Message>
                      <StackTrace>  at DomPropSimplify.Or.Simplify () [0x001c0] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/Formula.cs:95 
  at DomPropSimplify.Tests.NUnitTestClass.Test1 () [0x00051] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/NUnitTestClass.cs:13 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                      <ConsoleOutput>2 terms, 3 variables
{1 0 0 }
{0 1 1 }

</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T09:35:04</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.04ms</Message>
                      <ConsoleOutput>2 terms, 3 variables
{1 X X }
{X 1 1 }

((a)|(b&amp;c))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T09:35:27</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.04ms</Message>
                      <ConsoleOutput>2 terms, 3 variables
{1 X X }
{X 1 1 }

((a)|(b&amp;c))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T09:36:01</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.04ms</Message>
                      <ConsoleOutput>2 terms, 3 variables
{1 X X }
{X 1 1 }

((a)|(b&amp;c))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T09:36:58</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.04ms</Message>
                      <ConsoleOutput>2 terms, 3 variables
{1 X X }
{X 1 1 }

</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T09:38:01</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.04ms</Message>
                      <ConsoleOutput />
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T10:21:50</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.04ms</Message>
                      <ConsoleOutput />
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T10:52:08</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.04ms</Message>
                      <ConsoleOutput />
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T10:58:48</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.04ms</Message>
                      <ConsoleOutput />
                      <ConsoleError />
                    </UnitTestResult>
                  </Results>
                  <Tests />
                </TestRecord>
                <TestRecord Name="Test2">
                  <Results>
                    <UnitTestResult>
                      <TestDate>2013-10-02T09:35:27</TestDate>
                      <Status />
                      <Passed>0</Passed>
                      <Errors>1</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>System.ArgumentException : An element with the same key already exists in the dictionary.</Message>
                      <StackTrace>  at System.Collections.Generic.Dictionary`2[System.String,System.Int32].Add (System.String key, Int32 value) [0x00163] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Collections.Generic/Dictionary.cs:450 
  at DomPropSimplify.Or.Simplify () [0x0003c] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify/Formula.cs:68 
  at DomPropSimplify.Tests.NUnitTestClass.Test2 () [0x00051] in /Users/acailliau/Projects/DomPropSimplify/DomPropSimplify.Tests/NUnitTestClass.cs:20 
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00054] in /private/tmp/source/bockbuild-xamarin/profiles/mono-mac-xamarin/build-root/mono-3.2.3/mcs/class/corlib/System.Reflection/MonoMethod.cs:230 </StackTrace>
                      <ConsoleOutput />
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T09:36:01</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.00ms</Message>
                      <ConsoleOutput>1 terms, 3 variables
{1 X X }

((b))
</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T09:36:58</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.00ms</Message>
                      <ConsoleOutput>1 terms, 3 variables
{1 X X }

</ConsoleOutput>
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T09:38:01</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.00ms</Message>
                      <ConsoleOutput />
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T10:21:50</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.00ms</Message>
                      <ConsoleOutput />
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T10:52:08</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.00ms</Message>
                      <ConsoleOutput />
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T10:58:48</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.00ms</Message>
                      <ConsoleOutput />
                      <ConsoleError />
                    </UnitTestResult>
                  </Results>
                  <Tests />
                </TestRecord>
                <TestRecord Name="Test3">
                  <Results>
                    <UnitTestResult>
                      <TestDate>2013-10-02T09:38:01</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.00ms</Message>
                      <ConsoleOutput />
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T10:21:50</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.00ms</Message>
                      <ConsoleOutput />
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T10:52:08</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.00ms</Message>
                      <ConsoleOutput />
                      <ConsoleError />
                    </UnitTestResult>
                    <UnitTestResult>
                      <TestDate>2013-10-02T10:58:48</TestDate>
                      <Status />
                      <Passed>1</Passed>
                      <Errors>0</Errors>
                      <Failures>0</Failures>
                      <Inconclusive>0</Inconclusive>
                      <NotRunnable>0</NotRunnable>
                      <Skipped>0</Skipped>
                      <Ignored>0</Ignored>
                      <Time />
                      <Message>Test successful

Execution time: 0.00ms</Message>
                      <ConsoleOutput />
                      <ConsoleError />
                    </UnitTestResult>
                  </Results>
                  <Tests />
                </TestRecord>
              </Tests>
            </TestRecord>
          </Tests>
        </TestRecord>
      </Tests>
    </TestRecord>
  </Tests>
</TestRecord>